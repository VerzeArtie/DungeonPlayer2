using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using UnityEngine;

public static class MessagePack
{
  #region "アクションイベント"
  public enum ActionEvent
  {
    None,
    LastMessage,
    MessageClear,
    GetItem,
    GetGold,
    GetNewQuest,
    QuestUpdate,
    QuestComplete,
    GetTreasure,
    RemoveFieldObject,
    RevealFieldObject,
    CallDecision,
    MoveTop,
    MoveLeft,
    MoveRight,
    MoveBottom,
    ForceMoveRight,
    ForceMoveLeft,
    ForceMoveTop,
    ForceMoveBottom,
    ForceMoveRise,
    ForceMoveFall,
    ForceMoveObjTop,
    ForceMoveObjLeft,
    ForceMoveObjRight,
    ForceMoveObjBottom,
    ForceMoveObjRise,
    ForceMoveObjRise2,
    ForceMoveObjFall,
    ForceMoveObjFall2,
    ForceMoveObjRiseWithoutPlayer,
    MoveLeftContinuous,
    MoveRightContinuous,
    MoveTopContinuous,
    MoveBottomContinuous,
    VelgusBallReset,
    VelgusBallCheckComplete,
    VelgusCircleChange,
    VelgusSpeedRunStart_1,
    VelgusSpeedRunStart_2,
    VelgusSpeedRunStart_2_Next,
    VelgusSpeedRunStart_2_Reset,
    VelgusSpeedRunStart_3,
    VelgusSpeedRunStart_4,
    VelgusSpeedRunStart_5,
    VelgusCirculate3_Switch,
    VelgusCirculate4_Switch,
    VelgusTransferRandomBall,
    VelgusResetRandomBall,
    VelgusRemoveRandomBall,
    VelgusTransferRandomBall2,
    VelgusResetRandomBall2,
    VelgusRemoveRandomBall2,
    InstantiateObject,
    GainSoulFragment,
    MessageDisplay,
    HideMessageDisplay,
    ViewQuestDisplay,
    HidePlayer,
    VisiblePlayer,
    ViewLevelUpCharacter,
    RefreshAllView,
    JumpToLocation,
    HometownNextDay,
    EncountBoss,
    EncountDuel,
    SceneAdd,
    HomeTownHideAllSubView,
    HomeTownCallRestInn,
    HomeTownExecRestInn,
    HomeTownResetMenuView,

    ObjectiveAdd,
    ObjectiveRemove,
    ObjectiveRefreshCheck,
    UpdateLocationTop,
    UpdateLocationLeft,
    UpdateLocationRight,
    UpdateLocationBottom,
    HomeTown,
    TurnToBlack,
    TurnToWhite,
    ReturnToNormal,
    BlueOpenTop,
    BlueOpenLeft,
    BlueOpenRight,
    BlueOpenBottom,
    TutorialOpen1,
    BigEntranceOpen,
    CenterBlueOpen,
    SmallEntranceOpen1,
    SmallEntranceOpen2,
    Floor2CenterOpen,
    UpdateUnknownTile,
    StopMusic,
    PlayMusic01,
    PlaySound,
    YesNoGotoDungeon,
    YesNoBacktoDungeon,
    GoBackTutorial,
    GotoHomeTown,
    GotoHomeTownForce,
    DecisionOpenDoor1,
    HomeTownGetItemFullCheck,
    HomeTownRemoveItem,
    HomeTownBlackOut,
    HomeTownTurnToNormal,
    HomeTownBackToTown,
    HomeTownButtonVisibleControl,
    HomeTownMorning,
    HomeTownNight,
    HomeTownDuelSelect,
    HomeTownShowDuelRule,
    HomeTownFazilCastle,
    HomeTownFazilCastleMenu,
    HomeTownTicketChoice,
    HomeTownGoToKahlhanz,
    HomeTownGotoFirstPlace,
    HomeTownExecItemBank,
    HomeTownCallRequestFood,
    HomeTownButtonHidden,
    HomeTownRewardDisplay,
    HomeTownYesNoMessageDisplay,
    HomeTownShowActiveSkillSpell,
    HomeTownShowActiveSkillSpellSC,
    HomeTownCallPotionShop,
    HomeTownCallSaveLoad,
    HomeTownCallDuel,
    HomeTownCallDecision,
    HomeTownCallDecision3,
    HomeTownAddNewCharacter,
    HomeTownUpdateCharacter,
    HomeTownRemoveCharacter,
    GetGreenPotionForLana,
    CallSomeMessageWithAnimation,
    CallSomeMessageWithNotJoinLana,
    DungeonBadEnd,
    DungeonGetTreasure,
    DungeonUpdateFieldElement,
    Floor2DownstairGateOpen,
    DungeonJumpToLocation1,
    DungeonMirrorRoomGodSequence,
    DungeonJumpToLocationRecollection4,
    DungeonSetupPlayerStatus,
    DungeonRemovePartyTC,
    Fountain,
    RealWorldCallItemBank,
    AutoSaveWorldEnvironment,
    AutoMove,
    DungeonGotoDownstair,
    MirrorWay,
    MirrorLastWay,
    DungeonGotoDownstairFourTwo,
    JumpToLocationHellMirror1,
    UpdateUnknownTileAreaHellLast,
    DungeonGotoDownStairFiveTwo,
    UpdateUnknownTileAreaTruthFinal,
    Ending,
  }
  #endregion

  #region "一般"
  public static void MessageX00001(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "", ActionEvent.MessageClear);

    Message(ref m_list, ref e_list, "～ 休息を取りました ～", ActionEvent.MessageDisplay);
  }

  public static void MessageX00002(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：休息を取ったばかりだ。他に何かやらねえとな。", ActionEvent.None);
  }

  public static void MessageX00003(ref List<string> m_list, ref List<ActionEvent> e_list, string item_name)
  {
    Message(ref m_list, ref e_list, "アイン：よっしゃ、宝箱発見！", ActionEvent.None);

    Message(ref m_list, ref e_list, item_name, ActionEvent.GetTreasure);
  }

  public static void MessageX00004(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、回復の泉だな。休んでいくとするか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.Fountain);

    Message(ref m_list, ref e_list, "【 パーティメンバーのステータスが全快しました 】", ActionEvent.None);
  }

  public static void MessageX00005(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：遠見の青水晶で既にダンジョンから脱出しているからな。今日はもう止めておこう。", ActionEvent.None);
  }

  public static void MessageX00006(ref List<string> m_list, ref List<ActionEvent> e_list, string food_menu, string area_name)
  {
    if (area_name == Fix.TOWN_FAZIL_CASTLE)
    {
      Message(ref m_list, ref e_list, "アイン：よし、今日はもう休むとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：飯は【" + food_menu + "】が良いかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハンナおばさん、すみませーん。【" + food_menu + "】をお願いできますか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：ああ、ちょいと待ってな。今すぐ用意してあげるよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "・・・しばらくして・・・", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ハンナ：はい、出来たよ。ゆっくりとしていきな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやー、どうもありがとうございます。いただきまーす！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 パーティは十分な食事を取りました 】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：部屋はそれぞれ取ってあるから、食べ終わったんなら、部屋に行って休息してくるんだね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：色々とありがとうございます。じゃあお言葉に甘えて。", ActionEvent.None);

      if (One.TF.AvailableBillyRaki)
      {
        Message(ref m_list, ref e_list, "ビリー：ごっそうさま！", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "ラナ：ありがとうございました。じゃあ、私もこれで。", ActionEvent.None);

      if (One.TF.AvailableEoneFulnea)
      {
        Message(ref m_list, ref e_list, "エオネ：ご馳走さまでした。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, food_menu, ActionEvent.HomeTownCallRequestFood);
      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownExecRestInn);

      Message(ref m_list, ref e_list, "【 パーティは休息を取りました】", ActionEvent.MessageDisplay);

    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：よし、今日はもう休むとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：飯は【" + food_menu + "】を頼むとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すみません。【" + food_menu + "】をお願いできますか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "宿屋のマスター：はいよ、少々お待ちあれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "・・・しばらくして・・・", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "宿屋のマスター：おまちどうさま。どうぞ、召し上がれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとうございます。いただきます！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 パーティは十分な食事を取りました 】", ActionEvent.None);

      Message(ref m_list, ref e_list, "宿屋のマスター：あいよ。あとは部屋でゆっくり休んでいきな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとうございます！", ActionEvent.None);

      Message(ref m_list, ref e_list, food_menu, ActionEvent.HomeTownCallRequestFood);
      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownExecRestInn);

      Message(ref m_list, ref e_list, "【 パーティは休息を取りました】", ActionEvent.MessageDisplay);
    }
  }

  public static void MessageX00007(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：何もねえな・・・戻るとするか。", ActionEvent.None);
  }

  public static void MessageX00008(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：いや、今は少し休むとしよう。", ActionEvent.None);
  }

  public static void MessageX00009(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：売却するアイテムをまず選ばないとな。", ActionEvent.None);
  }

  public static void MessageX00010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：購入するアイテムをまず選ばないとな。", ActionEvent.None);
  }

  public static void MessageX00011(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：まずは行き先を選択しないとな。", ActionEvent.None);
  }

  public static void MessageX00012(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：今いるのがココだ。他を選ぼう。", ActionEvent.None);
  }

  public static void MessageX00013(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：いや、今これを使う必要はないだろう。", ActionEvent.None);
  }

  #endregion

  #region "エスミリア草原区域"
  public static void Message000010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "1", ActionEvent.UpdateUnknownTile);

    Message(ref m_list, ref e_list, "アイン：さてと・・・道のりだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：この草原区域、安全とは言えモンスターが出る区域よ。十分注意してよね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：任せとけって。大丈夫さ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "20", ActionEvent.MoveLeft);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);

    Message(ref m_list, ref e_list, "2", ActionEvent.UpdateUnknownTile);

    Message(ref m_list, ref e_list, "アイン：おっ、なんか看板があるな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：じゃ、読んでみるわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "『　準備を怠るべからず、獣道には入るべからず　』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なるほど、さすがにこれは俺もわかる。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：獣道に入れって事で合ってるよな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "『ッシャゴオォォオォォ！！！』（ラナのエレクトリカル・ブローがアインに炸裂）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ッグフオォ・・・、ラナ、お前もう少し加減しろよ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ハアアァァァ・・・ともかく、まずはファージル宮殿に向かいなさいよね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マジかよ！　どう考えてもこれは行っておくべきだろ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ホンットに時間切れで遠征許可証もらえなくなっても知らないわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いやいやいや・・・それはマズいのは確かだが。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：だったらまずは最初の意気込み通りに進めてちょうだい、いいわね？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：わ、分かった。まずはファージル宮殿へ向かおう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ラナ、ところでマップ見せてくれないか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：アンタ自分でマップ作成しないつもりなわけ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：せっかくなんだし、頼むぜ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ったく、しょうがないわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：私が作成しておいてあげるから、ちゃんとマップ管理しなさいよね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：助かるぜ。サンキューな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、じゃあ行くぜ！", ActionEvent.None);

  }

  public static void Message000020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "『　行き止まり。引き返すがよい　』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：さすがに何もなさそうだな・・・引き返すしかないか。", ActionEvent.None);
  }

  public static void Message000030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：看板だな。どれどれ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "『　急がば回れ、報酬は遠き道にあり　』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どういう意味だ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：焦って探索してもしょうがないって事でしょ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そこに岩があるが、ひょっとして・・・何かあるって事か！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どうかしら。行ってみないと、さすがに分からないわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ま、このデケぇ岩はどけられないしな。ほかのルートを探すとするか。", ActionEvent.None);
  }

  public static void Message000040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message000040 == false)
    {
      One.TF.Event_Message000040 = true;
      One.TF.FieldObject_EsmiliaGrassField_00001 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。読んでみるぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　訪れし者よ。次へと進むが良い　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "1", ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ラナ：岩が取り除かれたみたいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、行ってみよう。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　次へと、進むが良い　』", ActionEvent.None);
    }
  }

  public static void Message000050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message000050 == false)
    {
      One.TF.Event_Message000050 = true;
      One.TF.FieldObject_EsmiliaGrassField_00002 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな、ええと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　訪れし者よ。手に取り、切り拓き、進むが良い。　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どういう意味だ？", ActionEvent.None);

      if (One.TF.FindBackPackItem(Fix.ITEM_MATOCK) == false)
      {
        Message(ref m_list, ref e_list, "ラナ：そこの宝箱の事を指しているんじゃないのかしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、そうなんだが・・・", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：手に入れたマトックを使えって事じゃないの？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、そうなんだが・・・", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "ラナ：なんか気になるワケ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、何となく、なんかあるのかなと思っただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：相変わらず、よく分からないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあそこまで重要な内容じゃなさそうだ。気になったところは調べて回ろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　訪れし者よ。手に取り、切り拓き、進むが良い。　』", ActionEvent.None);
    }
  }

  public static void Message000060(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message000060 == false)
    {
      One.TF.Event_Message000060 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな、ええと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　訪れし者よ。手に取り、切り拓き、進むが良い。　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どういう意味だ？", ActionEvent.None);

      if (One.TF.FindBackPackItem(Fix.ITEM_MATOCK) == false)
      {
        Message(ref m_list, ref e_list, "ラナ：そこの宝箱の事を指しているんじゃないのかしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、そうなんだが・・・", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：手に入れたマトックを使えって事じゃないの？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、そうなんだが・・・", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "ラナ：なんか気になるワケ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、何となく、なんかあるのかなと思っただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：相変わらず、よく分からないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあそこまで重要な内容じゃなさそうだ。気になったところは調べて回ろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　訪れし者よ。手に取り、切り拓き、進むが良い。　』", ActionEvent.None);
    }
  }
  public static void Message000070(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "『　準備を怠るべからず、獣道には入るべからず　』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：準備を怠ってなけりゃ・・・獣道に入っても・・・？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：遠征許可証の準備はできているのかしら？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そ、そうだな・・・", ActionEvent.None);
  }

  public static void Message000080(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "3", ActionEvent.UpdateUnknownTile);

    Message(ref m_list, ref e_list, "アイン：・・・看板が２枚か。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：見てみましょうよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
  }

  public static void Message000090(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message000090 == false)
    {
      One.TF.Event_Message000090 = true;
      Message(ref m_list, ref e_list, "『　危険区域。立ち寄るべからず　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃ、入るとしますか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと。獣道に立ち寄ってる暇はないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なぜだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：理由がいるのかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：立ち寄るのに、理由は要らない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：遠征許可証が失効する理由にはなるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：やめておくとするか・・・", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　危険区域。立ち寄るべからず　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かってるわよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、あぁ・・・", ActionEvent.None);
    }
  }

  public static void Message000095(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message000095 == false)
    {
      One.TF.Event_Message000095 = true;
      Message(ref m_list, ref e_list, "『  ←　この先、ファージル宮殿　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、こっちみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：早く行きましょう。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『  ←　この先、ファージル宮殿　』", ActionEvent.None);
    }
  }

  public static void Message000100(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：待て、なんかいるぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：えっ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あっちの広場だ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "10", ActionEvent.UpdateUnknownTile);

    Message(ref m_list, ref e_list, "2", ActionEvent.MoveBottom);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveTop);

    Message(ref m_list, ref e_list, "ラナ：本当ね。また面倒そうなモンスターが出たわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：まあ、危険レベルは低いだろうが、気を付けて行こう。", ActionEvent.None);
  }

  public static void Message000110(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "？？？：ッキシャアアアアァァァ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ラナ、気を付けて挑むぞ、準備いいか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ええ、いつでも良いわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：っしゃ、行くぜ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.SCREAMING_RAFFLESIA, ActionEvent.EncountBoss);

  }

  public static void Message000111(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message000111 == false)
    {
      One.TF.Event_Message000111 = true;
      Message(ref m_list, ref e_list, "？？？：ッキ・・・ッキ・・・ァァ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうやら片付いたみたいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この草原区域で、この類のモンスターって出現していたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あんまり見ないわね。結構珍しいと思うわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：討伐自体は出来たわけだが、出てくる事自体に違和感はあったかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：安全とは言われてないし、たまには出るんじゃないかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん、そうかもな・・・ただ何というか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そんな事より、まず遠征許可証を取りに行きましょ。時間が無いわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな、分かった。ファージル宮殿の方へ早く向かうとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、頼んだわよ。", ActionEvent.None);
    }
  }

  public static void Message000120(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、看板だな。どれどれ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "『　獣道。資格なき者、入るべからず　』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：こっ・・・これは・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ほら、引き返すわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：今はどうしても駄目か？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：駄目に決まってるでしょ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：単なる獣道だろ？さくっとモンスター倒してお宝GETだろ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：単なる獣道なら入る必要はないわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：通行許可証さえあれば資格を手に入れた事になるんだよな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：そう思えるのは、アンタのバカ脳ミソぐらいよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ともかく、駄目なものは駄目よ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：しょうがねえ・・・ここは一つ引き下がるか・・・", ActionEvent.None);
  }

  public static void Message000130(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    // todo 資格があれば入れる事とする。
    Message(ref m_list, ref e_list, "ラナ：っちょっと！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：うわっ、そんな怒るなよ。分かった、分かった。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);

    Message(ref m_list, ref e_list, "アイン：（しばらく、ここは無理そうだな・・・）", ActionEvent.None);
  }

  public static void Message000140(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FieldObject_EsmiliaGrassField_00003 == false)
    {
      One.TF.FieldObject_EsmiliaGrassField_00003 = true;
      UseMatockForRock(ref m_list, ref e_list, Fix.ESMILIA_Rock_5_O);
    }
  }
  public static void Message000150(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FieldObject_EsmiliaGrassField_00002 == false)
    {
      One.TF.FieldObject_EsmiliaGrassField_00002 = true;
      UseMatockForRock(ref m_list, ref e_list, Fix.ESMILIA_Rock_6_O);
    }
  }
  public static void Message000160(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FieldObject_EsmiliaGrassField_00007 == false)
    {
      One.TF.FieldObject_EsmiliaGrassField_00007 = true;
      UseMatockForRock(ref m_list, ref e_list, Fix.ESMILIA_Rock_7_O);
    }
  }
  public static void Message000170(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FieldObject_EsmiliaGrassField_00008 == false)
    {
      One.TF.FieldObject_EsmiliaGrassField_00008 = true;
      UseMatockForRock(ref m_list, ref e_list, Fix.ESMILIA_Rock_4_O);
    }
  }
  public static void Message000180(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FieldObject_EsmiliaGrassField_00009 == false)
    {
      One.TF.FieldObject_EsmiliaGrassField_00009 = true;
      UseMatockForRock(ref m_list, ref e_list, Fix.ESMILIA_Rock_8_O);
    }
  }

  public static void Message000190(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.AvailableImmediateAction = true;

    Message(ref m_list, ref e_list, "アイン：そういえば、ちょっと気になってんだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どうかしたの？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ラナが用意してくれた赤ポーションや他のアイテムを使おうと思ってんだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：これって普通に使って良いんだよな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：良いと思うけど、何よ突然。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：戦闘中に使っても良いんだよな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：まあ、良いんじゃないかしら。バカアインにしては良い案ね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺は決してバカではない。ッハッハッハ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ハイハイ。で、やるんだったら前準備は必要なんじゃないかしら。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：っしゃ！じゃあ、戦闘向けにどれを使うのか決めておくとするか！", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　戦闘中にアイテム・アクションが使えるようになりました！　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "【　バトルコマンド設定画面でアイテム・アクションを設定してみてください。　】", ActionEvent.MessageDisplay);
  }
  #endregion

  #region "アンシェットの街"
  public static void Message100010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：っしゃ・・・これで準備OKかな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：え、ちょっとそれだけしか持っていかないワケ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.ReturnToNormal);

    Message(ref m_list, ref e_list, "～ " + Fix.TOWN_ANSHET + "にて ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：旅に出るんだ。荷物はこれぐらい軽くしておいたほうが良いだろ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：軽くしておいたって・・・最低限の装備以外は何も持ってないじゃない、何考えてんのかしらホント・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：はい、ポーションと軍資金、それから遠見の青水晶を用意しておいたからね。", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.SMALL_RED_POTION, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, Fix.SMALL_RED_POTION, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, Fix.SMALL_RED_POTION, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, Fix.SMALL_BLUE_POTION, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, Fix.SMALL_BLUE_POTION, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, Fix.SMALL_BLUE_POTION, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, Fix.SMALL_GREEN_POTION, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, Fix.SMALL_GREEN_POTION, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, Fix.SMALL_GREEN_POTION, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, Fix.ITEM_TOOMI_AOSUISYOU, ActionEvent.GetItem);
    Message(ref m_list, ref e_list, "ポーション一式を取得しました！", ActionEvent.MessageDisplay);
    Message(ref m_list, ref e_list, "【 " + Fix.ITEM_TOOMI_AOSUISYOU + " 】を取得しました！", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "500", ActionEvent.GetGold);
    Message(ref m_list, ref e_list, "【 500 gold 】を獲得しました！", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ラナ：あと旅に出るわけじゃなくて、正式な調査依頼を受けて、任務遂行しに行くのよ。ちゃんと準備してよね、ホント。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：大丈夫だって、オーケーオーケー！ッハッハッハ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：頭痛がしてきたわ・・・まったく・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ところで、ちゃんと国内外遠征許可証はそのバックパックに入ってるんでしょうね？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：国内外・・・遠征・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：許可証ってなんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：許可証を受け取りに、ファージル宮殿には行った？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：行ってねえな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：許可証を受領するための期限が先週までだったのは知ってるわよね？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ウソだろ？そんな期限なんてあったか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：当然じゃない。国内外遠征許可証の推薦状にはちゃんと目を通したわけ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、もちろんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：その推薦状に書いてあったわよ。ちゃんと見てないわよね？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、もちろんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "『ッシャゴオォォオォォ！！！』（ラナのファイナリティ・ブローがアインに炸裂）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：わ、分かった分かった・・・すまねえ。今から取りに行くからさ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：本当に行くんでしょうね？今日中に行かないと本当にもらえなくなるわよ、頼むわよホント。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ところで、ファージル宮殿に行けば良いんだよな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：そうよ。このアンシェット町から川沿いに北へ向かえば、すぐ到着するわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、じゃあ早速行くとしますか！ッハッハッハ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_1 + " 】が開始されました！", ActionEvent.GetNewQuest);

    Message(ref m_list, ref e_list, "", ActionEvent.AutoSaveWorldEnvironment);
  }

  public static void Message100015(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "ラナ：ちょっと、そんな事やってないでファージル宮殿に行きましょうよ。", ActionEvent.None);
  }

  public static void Message100020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、着いたみたいだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：じゃあ、早速ファージル宮殿へ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっと待って。宮殿行く前に少し休憩がしたいんだけど、良いかしら。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：分かった。それじゃあ、宿屋でも探すとするか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：宿屋ならハンナ叔母さんがやっているはずよ。さ、行ってみましょ♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：っしゃ、了解！", ActionEvent.None);
  }

  public static void Message100021(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.AR.PartyJoin_EoneFulnea = true;
    One.UpdateAkashicRecord();

    Message(ref m_list, ref e_list, "", ActionEvent.HomeTownHideAllSubView);

    Message(ref m_list, ref e_list, "アイン：よし、" + Fix.TOWN_FAZIL_CASTLE + "に到着。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：正面ゲートから入ったらすぐ横の受付を済ませてちょうだいね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、わかった。了解了解！", ActionEvent.None);

    Message(ref m_list, ref e_list, "～ " + Fix.TOWN_FAZIL_CASTLE + "、受付口にて ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "　　【受付嬢：" + Fix.TOWN_FAZIL_CASTLE + "へようこそ。】", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：すまないがちょっと教えてくれ。国内外遠征のための通行証が欲しいんだが。", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　【受付嬢：ファージル王国からの推薦状をご提示願いますでしょうか。】", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：えっ！なんだって！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：何、驚いてるのよ。ホラ、これでしょ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、焦ったぜ・・・サンキューな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　【受付嬢：推薦状を拝見いたします。しばらくお待ち下さい。】", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　【受付嬢：・・・　・・・】", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　【受付嬢：アイン・ウォーレンス様ですね。本日はようこそおいでくださいました。】", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　【受付嬢：こちらがアイン・ウォーレンス様の国内外遠征許可証となります。】", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　【受付嬢：どうぞ、お受け取りください。】", ActionEvent.None);

    Message(ref m_list, ref e_list, "【 " + Fix.FIELD_RESEARCH_LICENSE + " 】を獲得しました！", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, Fix.FIELD_RESEARCH_LICENSE, ActionEvent.GetItem);

    Message(ref m_list, ref e_list, "アイン：サンキュー！助かるぜ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　【受付嬢：なお、エルミ・ジョルジュ国王陛下よりアイン・ウォーレンス様へ連絡があるとの事です。】", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　【受付嬢：本日、この国内外遠征許可証をお持ちの上、必ず謁見の間へ行かれます様、よろしくお願い申し上げます。】", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エルミ国王が・・・なんだろう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：バカアインが許可証もらうのをサボってたから、心配してるんじゃないの？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ハハハ・・・言われてみりゃそうかもな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：謁見の間は宮殿の中央から３階まで上がった場所にあるわよ。早く行きましょう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);

    Message(ref m_list, ref e_list, "～ " + Fix.TOWN_FAZIL_CASTLE + "、謁見の間にて ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：よし、謁見の間は確かここだったな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：じゃ、行ってきてちょうだい。失礼の無いようにね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あれ、ラナは入らないのかよ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：呼ばれたのはアインだけよ。私が入る事はできないわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうなのか。じゃあ俺一人で行ってくるぜ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：し、失礼つかまつります！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：アイン君だね。ようこそファージル宮殿へ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：この度は、ご機嫌うるわしく・・・候・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：難しい言葉は使わなくて良いよ。謁見の間では気楽に喋ってもらえれば良いから。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：は、はい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：ここに呼び出してしまって、すまなかったね。でも、どうしても一件頼みたい事があるんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：頼みたい事？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：遠征先であるヴィンスガルデ王国エリアで調査して欲しい案件があるんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：案件の内容は王妃ファラから解説させようと思う。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：こら、ファラ。変なところに隠れてないで、ちゃんと出てきてくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：フフフ。ジャーン（＾＾", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ファ、ファラ様！お、お久しゅうございます。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：ファラ。謁見の間でかくれんぼして遊んじゃいけないって言っただろ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：エルミのケチンボ（＾＾＃", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：ッグ・・・ケチで言ってるわけじゃない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ハ、ハハ・・・ええと・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：アインさん、リラックスして聞いてくださいね（＾＾", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ハイ。分かりました。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：ファージル王国では、昔から古代アーティファクトにまつわる件を分析の対象としているの。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：古代アーティファクト？　そんなのがあるんですか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：伝説、古文書、語り継がれている伝承、そういったものは沢山あるのですが。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：信憑性の高いものはほとんど無い・・・って所ですかね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：ええ、その通りです。", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　王妃ファラは少し真剣な眼差しを向けてきた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：ヴィンスガルデ王国の歴史には一つの伝承があります。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：えっ・・・？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：その伝承には一つのキーワードが示されています。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：その名は【Obsidian Stone】", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：Obsidian・・・Stone・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：アインさんには、そのObsidianStoneの調査を秘密裏に遂行していただきたいの。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：秘密裏・・・え。どういう事ですか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：ファラ、そこまでで良いよ。後はボクが話すから。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ファラ：あら、じゃあお願いしても良いかしら（＾＾", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：アイン君。【ObsidianStone】については、様々な説があり、申し訳ないが一概にどういったものかは説明が難しい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：そこで、まずは" + Fix.TOWN_COTUHSYE + "へ寄って情報収集をしてきてもらいたい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：" + Fix.TOWN_COTUHSYE + "？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：ああ、沿岸沿いにある港町だよ。色々な人たちが集う場所だから、何か情報が得られる事を期待している。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：また、そこから船を使って" + Fix.AREA_VINSGARDE + "王国へ目指してもらいたい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：分かりました。じゃあ、まずは" + Fix.TOWN_COTUHSYE + "へ行ってみます。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：それから、少しばかりだが軍資金とアイテムを用意しておいた。好きに使ってもらって構わないよ。", ActionEvent.None);

    // Message(ref m_list, ref e_list, "2000", ActionEvent.GetGold); // クエスト達成時に取得するため、ここでは取得しない。
    Message(ref m_list, ref e_list, "【 2000 gold 】を獲得しました！", ActionEvent.MessageDisplay);

    // Message(ref m_list, ref e_list, Fix.ARTIFACT_GENSEI, ActionEvent.GetItem); // クエスト達成時に取得するため、ここでは取得しない。
    Message(ref m_list, ref e_list, " 【 " + Fix.ARTIFACT_GENSEI + " 】を手に入れました！", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：あ、ありがとうございます！僭越ながら、拝受つかまつります！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：丁寧にどうもありがとう。固苦しい言葉は本当に気にしなくていいからね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：さて、港町まで行くには途中にある" + Fix.DUNGEON_GORATRUM_CAVE + "を通過する必要があるだろう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：アイン君なら、きっと通過できる。信じているよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：えっと・・・分かりました！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あと、すみませんが、港町コチューシェに到着したら何かやる事はありますか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：いや、特に「何か」っていうのは気にしなくて良いよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：天の導きがあれば、自然と道は拓かれる。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そ、そんなもんですかね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エルミ：アイン君ならきっと大丈夫だよ。いつも通りで。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：はい、分かりました！", ActionEvent.None);

    Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_2 + " 】が開始されました！", ActionEvent.GetNewQuest);

    Message(ref m_list, ref e_list, "～ " + Fix.TOWN_FAZIL_CASTLE + "、エントランスにて ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ラナ：じゃあ、まずは" + Fix.TOWN_COTUHSYE + "へ向かえば良いみたいね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、遠征許可証も手に入れたし、それじゃ、そろそろ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：あら、ちょって待ってアイン。そこの出入り口に誰かいるみたいよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ん、本当だな・・・誰だ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：あ、あの。すみません・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よう、こんにちわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：あの・・・私・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：えっと、なんか用か？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっと、バカアイン。あんたは引っ込んでなさい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なぜ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：いいから、任せておいて。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：あの・・・スミマセン・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：こんにちわ、はじめまして。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：あ、はじめまして、私はエオネ・フルネアと申します。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：私はラナ・アミリアよ。よろしくね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あっ、えっと。よろしくおねがいします。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あの！今日は、し、仕事の依頼があって参りました！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：私を" + Fix.TOWN_COTUHSYE + "までお送りいただけないでしょうか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おお、俺たちも今からそこに向かうつもりだ。タイミングが良いな！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：え、えっと、あの・・・その" + Fix.TOWN_COTUHSYE + "まで・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：（ちょっ、バカアイン出てくるとややこしいから、引っ込んでてよ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（あ、あぁ・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：" + Fix.TOWN_COTUHSYE + "まで護衛して欲しいって事よね、承るわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ、ありがとうございます。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：確認なんだけど、一般市民としてかしら？それとも、戦闘で何か出来る事はある？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：え、えっと。多少ですが、魔法は使えます。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：じゃあ、戦闘グループとして同行してもらう形のほうが良いかしら？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：ハ、ハイ！喜んで！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：決まりみたいね♪　じゃあ、" + Fix.TOWN_COTUHSYE + "まで、一緒に行きましょう♪", ActionEvent.None);

    Message(ref m_list, ref e_list, " 【エオネ・フルネア】が仲間になりました！", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, Fix.NAME_EONE_FULNEA, ActionEvent.HomeTownAddNewCharacter);

    Message(ref m_list, ref e_list, "エオネ：あ、ありがとうございます。よろしくお願いします。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、じゃあ行こう！", ActionEvent.None);

    Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_1 + " 】を達成しました！", ActionEvent.QuestComplete);
  }
  #endregion

  #region "フィールド"
  public static void Message101000(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よっしゃ、回復の泉だな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.Fountain);

    Message(ref m_list, ref e_list, "パーティは全回復しました。", ActionEvent.MessageDisplay);
  }

  public static void Message101001(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.FIELD_RESEARCH_LICENSE) == false)
    {
      Message(ref m_list, ref e_list, "衛兵：通行許可証を拝見させていただきます！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なに！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ほら、だから言ってるじゃない。先に許可証が必要だって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "衛兵：通行許可証はここファージル宮殿の国王より配布されます。直ちにお戻りください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
      return;
    }

    if (One.TF.Event_Message100030 == false)
    {
      One.TF.Event_Message100030 = true;

      Message(ref m_list, ref e_list, "衛兵：通行許可証を拝見させていただきます！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なに！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：なにって、さっきもらった許可証の事じゃない。早く出しなさいよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ。そうだったな。衛兵さん、これで良いかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "衛兵：うむ、確かに通行許可証を確認した！道中気をつけて行くがよい！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、サンキューな。", ActionEvent.None);
    }
  }
  public static void Message101002(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.FIELD_RESEARCH_LICENSE) == false)
    {
      Message(ref m_list, ref e_list, "衛兵：通行許可証を拝見させていただきます！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なに！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ほら、だから言ってるじゃない。先に許可証が必要だって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "衛兵：通行許可証はここファージル宮殿の国王より配布されます。直ちにお戻りください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
      return;
    }

    if (One.TF.Event_Message400010 == false)
    {
      Message(ref m_list, ref e_list, "アイン：よし、じゃあ通行許可証を・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと待ってよ。今から港町コチューシェの方へ向かうんでしょ？そっちじゃないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっと、悪い悪い・・・ここは一旦戻るとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);

      return;
    }

    if (One.TF.QuestMain_00021 == false)
    {
      Message(ref m_list, ref e_list, "アイン：よし、じゃあ通行許可証を・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと待ってよ。まずはファージル宮殿に報告しに行くんでしょ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっと、悪い悪い・・・ここは一旦戻るとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
      return;
    }
  }
  public static void Message101003(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.FIELD_RESEARCH_LICENSE) == false)
    {
      Message(ref m_list, ref e_list, "衛兵：通行許可証を拝見させていただきます！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なに！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ほら、だから言ってるじゃない。先に許可証が必要だって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "衛兵：通行許可証はここファージル宮殿の国王より配布されます。直ちにお戻りください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);
      return;
    }

    if (One.TF.Event_Message400010 == false)
    {
      Message(ref m_list, ref e_list, "アイン：よし、じゃあ通行許可証を・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと待ってよ。今から港町コチューシェの方へ向かうんでしょ？そっちじゃないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっと、悪い悪い・・・ここは一旦戻るとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);
      return;
    }

    if (One.TF.QuestMain_00021 == false)
    {
      Message(ref m_list, ref e_list, "アイン：よし、じゃあ通行許可証を・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと待ってよ。まずはファージル宮殿に報告しに行くんでしょ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっと、悪い悪い・・・ここは一旦戻るとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);
      return;
    }

    Message(ref m_list, ref e_list, "アイン：よし、じゃあ通行許可証を・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっと、そっちにいってもアーケンダイン街にはたどり着けないわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おっと、悪い悪い・・・ここは一旦戻るとするか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);
    return;
  }

  public static void Message101004(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message200010 == false)
    {
      Message(ref m_list, ref e_list, "エオネ：あ、あの・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうかしたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、そこのバカアイン。依頼人を無視してどこに行くつもりなのよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あっ、悪かった！！本当、クヴェルタ街に行く約束だったな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：す・・・すみませんが、お願い致します。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、今から行くぜ！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
    }
  }

  public static void Message101005(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "ラナ：ちょっと、そこのバカ。港町コチューシェはそっちじゃないわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おっと、そうか。悪い悪い。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
  }

  public static void Field_000010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.EventField_10 == false)
    {
      One.TF.EventField_10 = true;

      Message(ref m_list, ref e_list, "アイン：ん・・・何か向こう側から人の気配がするな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ、あの入口の門に誰か居るわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、声をかけてみるか・・・！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こんにちわー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "門番：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの、アイン・ウォーレンスという者ですが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "門番：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここって、通過しても良いものでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "門番：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どけ。ちょっと俺が何とかしてやる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：たのもう！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "門番：！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いざ、尋常に・・・！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょ、っちょっと待てって。戦いに来たわけじゃないんだぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何でだよ。あの門番、はじめっから戦うオーラがバンバン出てるぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれは常に警戒心を怠ってないだけだろ。別に俺たちに敵意を向けているわけじゃない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：クソ・・・じゃ、どうすんだよ。指をくわえて見てるだけってか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・あの。す、す、すみません・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうした？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・ちょ、ちょっとだけ・・・私が出ても良いでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：交渉のネタでもあるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：と、とにかく・・・ちょっとだけで良いので　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：バカアインみたいにノープランってワケじゃなさそうね。エオネ、大丈夫？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ハ・・・ハ、ハイ。　おそらくあの・・・ハイ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：う～ん、まあ何か作戦があるなら頼みたい所だが、ちょっとリスキーだよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、お前も傍に居てやってくれ。頼んだぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：うん、わかったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　ラナとエオネが門番に近づき、何かを話し始めた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・何か普通に会話してるな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あの門番。女子に弱いんじゃねーのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、違うだろ。こういった者達は卓越した精神力を保持しているという噂を聞いた事がある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：女子とか男子とかそういった類では動かないはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：へぇ、そんなもんかな。こういった所に限ってそういうのが弱点だったりするのが普通だけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ともかく、結構話してるみたいだし・・・少し様子を・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・おっ、戻ってきたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よう、どうだった？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：大丈夫です。通っても良いみたいです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ありがと、エオネ♪　あなたのおかげね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ・・・あ、いえ、どういたしまして。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どういう話の内容で説得したんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：少々・・・ObsidianStoneにまつわる話を・・・いたしました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：伝承の真実を追い求めている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：真実か偽りかは私達で判断はできない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：だからこそ、この目で見ておきたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そういった流れの話を少々・・・すみません、出しゃばりすぎました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：へえぇ！いやいやいや、凄いな！よくそんな交渉ができたな！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、バカアイン失礼よ、今の言い方は。感謝しなさいよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、ああ。悪い悪い、サンキューな！エオネ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・いえ、えっと・・・と、ともかく終わりましたので、先に進んでください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー！じゃ、早速通過させてもらうとしますか！", ActionEvent.None);
    }
  }

  public static void Field_000020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.EventField_20_GetName == false)
    {
      if (One.TF.EventField_20 == false)
      {
        One.TF.EventField_20 = true;

        Message(ref m_list, ref e_list, "アイン：あ、やっぱ門番らしき人物が居るな・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：あの野郎。ここは通さねえってオーラ出しまくってやがるな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ま、まあそう言わず、まずは一応声をかけてみよう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　アインは門番の前に近寄っていった　～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アイン：こんにちわー。", ActionEvent.None);

        Message(ref m_list, ref e_list, "門番：名を何と申す。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：アイン・ウォーレンスという者です。よろしくお願いいたします。", ActionEvent.None);

        Message(ref m_list, ref e_list, "門番：其方の名は、天より授けられし名称であるか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：っな、いや、俺の名は・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "門番：名を名乗れぬ以上、通すわけには行かぬ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "門番：お引き取りを。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ちょっと待ってくれ。この【ムーンフォーダー区域遠征許可証】じゃダメなのか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "門番：お引き取りを。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：は・・・はい・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　アイン、そのまま引き返してきた　～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "ラナ：で、駄目だったわけ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあそうだな。基本は通してくれなさそうだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：許可証ちゃんと見せたのかよ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：見せてはいるが・・・どうもそれだけじゃ駄目みたいだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：どういう意味よ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：天の名を名乗れと言われた。そういうオカルト的なのはお手上げだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ふーーん、そうなの。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：まあ、第一はまず神殿に行った方が良いんじゃないのかしら？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：やっぱそうかな。ここは一旦引き下がるとするか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
      }
      else
      {
        Message(ref m_list, ref e_list, "門番：名を何と申す。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：アイン・ウォーレンスという者です。", ActionEvent.None);

        Message(ref m_list, ref e_list, "門番：其方の名は、天より授けられし名称に非ず。", ActionEvent.None);

        Message(ref m_list, ref e_list, "門番：お引き取りを。", ActionEvent.None);

        Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
      }
    }
  }
  #endregion

  #region "クヴェルタ街"
  public static void Message200010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、" + Fix.TOWN_QVELTA_TOWN + "に到着したみたいだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ねえ、ちょっと寄っていきたい所があるんだけど良いかしら？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、構わねえぜ。どこに行くんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：武器屋を営んでいるヴァスタ叔父さんの所よ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ヴァスタ叔父さん？って誰だっけ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっと、私達が小さい頃に会ってるじゃない。忘れたの？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あ、ああ！覚えてるぜ！名前を聞いてもちょっとピンと来なかったからさ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネ、お前はヴァスタって叔父さんの事、知ってるか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：え、えっと・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：そこのバカアイン、何勝手に話しかけてるのよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：え、いやエオネさんなら何か噂とか聞いたことあるのかなって思っただけだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：無理に答えなくて良いのよ。バカが何か適当に喋ってるだけだから。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：え・・・えぇ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：じゃ、その武器屋のおっちゃんの所へ行くとするか！", ActionEvent.None);

    //}
    //public static void Message200020(ref List<string> m_list, ref List<ActionEvent> e_list)
    //{
    //    One.TF.Event_Message200020 = true;

    Message(ref m_list, ref e_list, "～ ヴァスタの武器屋にて ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：ごめんくださーい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：あいよ！いらっしゃい！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：あっ、ヴァスタおじさま、お久しぶりです♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：お、おぉー、ラナちゃんか！大きくなったな！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：そちらのもうひとりのお嬢ちゃんは？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あっ・・・エオネ・フルネアと言います、よろしくお願いします。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：おお、そうかそうか。よろしくな、お嬢ちゃん。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ラナ、ヴァスタおじさんに用があってきたんだろ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：うん、ちょっと待ってね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：えとね・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：あ。あったわ、ヴァスタおじさま♪　この武具を見て欲しいんだけど・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：武具鑑定か！よし、任せておきなさい！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：どれどれ・・・ふーむ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：・・・ぉお・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：おおおおおぉぉぉ、こ、こ、これは！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なんだなんだ？ひょっとして大当たりか！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：ぜんぜん、解明できん！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：ガッハハハハ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マジか、しかし鑑定出来ないなんて事もあるんだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：でもさ。これってアクセサリーの一種だと思ったんだけどな。違うのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：いや、ワシも最初はそう思ったのじゃが、どうも解析しきらんエッセンスがあるようでのう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうか。まあ俺は鑑定出来ないしな。基本、ヴァスタ爺さんに任せるしかないわけだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そういや、ラナ。こんな代物、いつの間に持っていたんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：え、何よ！！？　し、し、知らないわよ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：うお、そんな焦らなくても良いだろ。悪かった、単に聞いただけだって。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：すまんが、ラナちゃん。このアイテム。もうしばらく鑑定させてくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：あ、よろしくお願いします♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、じゃあそのアイテムは、ヴァスタのおっちゃんに頼むとするか！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：うむ、任せなさい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：しかし、こちらかもすまぬが、一つだけ頼み事を聞いてもらえんかね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、なんでも言ってくれ。引き受けられる内容ならいくらでもやるぜ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：ふむ・・・鑑定についてだが、実は鑑定用の機材が一部不足しておるのだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なるほど、何か機材を取ってくれば良いんだな？了解了解！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：話が早くて助かる。ここから少し北に行き、" + Fix.FIELD_ARTHARIUM_FACTORY + "に行って欲しい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：そこで、ゼタニウム鉱石を５つ取ってきて欲しいのじゃが、どうだろうか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：" + Fix.FIELD_ARTHARIUM_FACTORY + "だな、わかったぜ。ラナ、後でマップ確認を頼んだぜ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ええ、良いわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_4 + " 】が開始されました！", ActionEvent.GetNewQuest);

    Message(ref m_list, ref e_list, "ヴァスタ：あそこはモンスターも出てくるという噂を聞いておる。準備は万全にな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：オーケー！じゃあ、ゼタニウム鉱石を取ってきたらまた戻ってくるぜ。少し待っててくれよな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：すまんが、よろしく頼む。", ActionEvent.None);
  }
  public static void Message200030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.Event_Message200030 = true;

    Message(ref m_list, ref e_list, "アイン：おじさん。ども、こんにちわー", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：おー、アインか。いらっしゃい！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：前にお願いしていたゼタニウム鉱石を持ってきました♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：お、そいつは嬉しいねえ！では、早速例のアイテムの鑑定を行うとするかの！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：ちなみに、そのゼタニウム鉱石は５つあるから２５００ＧＯＬＤで引き取るぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：えっ、ちょっとお金なんていいですよ。そんなつもりで持ってきたんじゃないですし。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：ええからええから。ワシとて商売人。売買は人との礼儀そのもの。取っておくがよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：すみません、ではありがたく頂戴します。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：鉱石の中に、超微細レンズの仕組みを担う物質が含まれておってな。それをちょっと抽出してくる。待っておれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よろしくおねがいします！", ActionEvent.None);

    Message(ref m_list, ref e_list, "　～　しばらくして　～　", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ヴァスタ：よし、レンズが完成したぞ。これじゃ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：え？その今見せてくれている手のひらに何かあるんですか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：あるに決まっておるじゃろう。何を言うとるか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そ、そうなんだ。全然見えねえぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ホントね・・・光の反射でほんの僅かに見える程度ね。普通には見えないレベルだわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：まあ、見ておれ。これで例のアイテムを鑑定する。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：ふむ・・・む・・・。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どうだ、結果は・・・？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：正直に言おう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：これは鑑定は出来ても、ワシ単独では解読はできん。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どういう事ですか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：まずは、鑑定結果を伝えよう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：このアイテムのカテゴリは『武器』となる。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マジかよ！？こんな小さな形状のリングがか！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：うむ、間違いない。このリングの内部に極小の窪みがあっての。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：そこに、文字が書かれておった。内容はこうじゃ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　『　封じられしはラタの蒼き門。放たれしはシスの朱き詩』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：何だそれ・・・聞いたことねえな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あれ、なんで皆黙ってんだよ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：今度、私が後で丁寧に教えてあげるわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：えっ、ていうか何でそれで『武器』って事になるんだよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：それも、私が後で丁寧に教えてあげるわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いやいや、教えてくれよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：だから、私が後で丁寧に教えてあげるわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マジか・・・。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・ッ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ん？どうした？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：いえ、なんでも！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：まあ、いいか。詳しくはまた今度教えてくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：ゴッホン、とにかく鑑定自体は完了じゃ。後はお主ら次第。このアイテムは返しておくかの。", ActionEvent.None);

    Message(ref m_list, ref e_list, "～　【法剣？？？】を手に入れた！　～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ラナ：鑑定、ありがとうございました♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし。じゃあ、ありがとうな、ヴァスタのおっさん！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴァスタ：おっさんか！ガハハハハ！また好きな時にどんとこい。いくらでも付き合うぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、またよろしくな！", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.None);
  }

  public static void Message200040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message200040 == false)
    {
      One.TF.Event_Message200040 = true;

      Message(ref m_list, ref e_list, "アイン：よし、街に一旦戻ったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、さっきの件なんだけど良いかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、あの入手した奇妙な物体の事だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まず、あの中での出来事だが、声がしたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：内容はこうだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　応えよ　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　そして受諾せよ　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　さすれば意志が宿る　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　時は満たず　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　精神は満たず　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　還るべきは理と知るがよい　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　時が満ちればまた姿を現すがよい、幼きものよ　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：なんだか不思議な言葉ですね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、その時に手に入れたのがこのアイテムなんだけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっとつかみどころのない話ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：声はどこから聞こえてきたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それがな、さっぱり分からないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か姿は見えなかったの？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それも、さっぱり見えなかったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か他にこう特徴はなかったわけ？？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだなあ・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ない！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ふ～ん、そうなんだ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれ、いつものは飛んでこないのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：なんていうのかしら。本当に情報が無いみたいだったから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、正直そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：私とラナさんからは何も見えませんでしたしね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうなのよねえ・・・せめて透明で中が見えていれば、何か気付けたかも知れないんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：強いて何かあると言えば、この物体だけだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：その物体は、私達だけじゃ検討もつかないですよね・・・どうしましょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうだわ。ヴァスタの叔父様に聞いてみれば良いんじゃないかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そうだな。やっぱヴァスタのおっさん頼みで動くとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃ、きまりね♪　さっそく行ってみましょう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ！", ActionEvent.None);
    }
  }

  public static void Message200041(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：今はヴァスタのおっさんと話すのが先だな。", ActionEvent.None);
  }

  public static void Message200050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message200050 == false)
    {
      One.TF.Event_Message200050 = true;

      Message(ref m_list, ref e_list, "", ActionEvent.MessageClear);

      Message(ref m_list, ref e_list, "～ ヴァスタの武器屋にて ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：おじさん。どうも、こんにちわー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：おお、よく来たな。いらっしゃい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おじさん、ちょっと見て欲しいものがあるんだ。見てくれないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：お安い御用じゃ。どれ、見せてみなさい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。これなんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ アインは奇妙な物体をヴァスタに見せた ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ヴァスタ：鑑定か！よし、任せておきなさい！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：どれどれ・・・ふーむ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：・・・ぉお・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：おおおおおぉぉぉ、こ、こ、これは！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おじさん？ひょっとして大当たりか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：これまた、全然分からん！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：ガッハハハハハ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジか。何となく予想はしてたんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：なに！？そりゃ一体どういう意味じゃ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それなんですけど、アインが入手した時に、すごく奇妙な事象に遭遇しているんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：ほう。どういう経緯で入手したんじゃ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アーサリウム工場跡地の奥の方で、このアイテムを拾った時だったんだけど、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その時に突然、妙な空間に連れ込まれたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、その空間内で何か得たいの知れない声を聴いたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あとは気が付いたら、これを手にしていたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：ほう・・・ほうほう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：よぉし、分かった！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっ！マジか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：この件はワシではどうにもならん事が分かった！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：ガッハハハハハ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なっ、なんてこった・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：まあそう嘆くでない。道は指し示してやろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：アインよ。お主はそれを持ってツァルマンの里へと向かうが良いじゃろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『アイン：なっ？』　　『ラナ：えっ？』　　『エオネ：！？』", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：なんじゃお主ら知らんのか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、お前知ってるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、正直聞いた事もないわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネはどうだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：え、えっ・・・ええっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：おーーーーーーしまった！！！すっかり忘れておった！イカン！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：今の件、とある奴から口止めされておったのを忘れておったわ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：な、何だって！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：スマンスマン！まあ、忘れなさい！ガッハハハハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これだけはっきり言われといて、どうやって忘れるってんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：まあまあ、そこは何とか忘れてくれい！ガッハハハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：色々と喋ったが全体的にそういうわけじゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴァスタ：というわけで、ホレ。さっさと行きなされ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ ヴァスタの武器屋から外に出ました ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：何か・・・、色々と知ってそうだったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：う～ん、どうかしら。そうとも限らないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何でだ？あの口ぶりはあからさまに知ってる証拠だろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でもね、あの叔父さまはそうでもない時があるのよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなのか。まあ、どっちみちもうこの件はもう喋ってもらえそうにない雰囲気だったし、ここまでだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：えっと、確か・・・ツァルマンの里って言ってたよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どこにあるか知らないか？エオネ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：えっ・・・いえ、あ。はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：すみません、良く知らないんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか。うーん、しかし方向が分からないと動きにくいな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、ここから東方向なのは間違いないと思います。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジかよ！そういう情報は助かるぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そっちはちょうど港町コチューシェに向かう方角と同じね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ決まりだ。ここを出たらまずその東にある港町コチューシェに向かおう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、ツァルマンの里とやらの情報もそこで探ってみよう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_10 + " 】を達成しました！", ActionEvent.QuestComplete);
    }
  }
  #endregion

  #region "アーサリウム工場跡地"
  public static void Message300010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.Event_Message300010 = true;

    Message(ref m_list, ref e_list, "アイン：よし" + Fix.FIELD_ARTHARIUM_FACTORY + "に着いたみたいだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：・・・大量のガラクタがそこら中に散らばってるわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：エオネ、足元に危ない破片が落ちてるわ。気をつけてね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ、ありがとうございます。気をつけます。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なあ、ここは特に街ってワケでもなさそうだから、無理せず待っててくれても良いんだぞ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ、いえ。大丈夫です。わ、私、その・・・慣れてますから・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あれ？慣れてるのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ、いえ・・・え、ええと・・・その・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっと、バカアインはなんでそう人の気持ちにズカズカと踏み込んでるのよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：バカな。俺はそんな特別な会話はしてないつもりだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：エオネ、足元も注意だけど、そこのバカアインとの会話にも要注意だからね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ・・・はい、わかりました。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：うお・・・マジか・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、わかった。じゃあ次からはもう少し気をつけて喋りかける。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：それよりも、ゼタニウム鉱石を発掘しないといけないのよね。早く始めましょ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、じゃあ早速この辺りを探索開始といきますか！", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.None);
  }

  public static void Message300020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.Event_Message300020 = true;
    One.TF.Zetanium_001 = true;

    Message30002X(ref m_list, ref e_list);
  }

  public static void Message300021(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.Event_Message300021 = true;
    One.TF.Zetanium_002 = true;
    Message30002X(ref m_list, ref e_list);
  }
  public static void Message300022(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.Event_Message300022 = true;
    One.TF.Zetanium_003 = true;
    Message30002X(ref m_list, ref e_list);
  }
  public static void Message300023(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.Event_Message300023 = true;
    One.TF.Zetanium_004 = true;
    Message30002X(ref m_list, ref e_list);
  }
  public static void Message300024(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.Event_Message300024 = true;
    One.TF.Zetanium_005 = true;
    Message30002X(ref m_list, ref e_list);
  }

  private static void Message30002X(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：おっ、ゼタニウム鉱石を発見っと！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：やるじゃない♪", ActionEvent.None);

    if (GetZetaniumCount() == 1)
    {
      Message(ref m_list, ref e_list, "アイン：とりあえずは１個ゲットといった所だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：残り４つは見つける必要があるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、引き続き探索を続けよう。", ActionEvent.None);
    }
    else if (GetZetaniumCount() == 2)
    {
      Message(ref m_list, ref e_list, "アイン：よし、これで２個目だぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まだ３つ見つける必要があるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、引き続き探索を続けよう。", ActionEvent.None);
    }
    else if (GetZetaniumCount() == 3)
    {
      Message(ref m_list, ref e_list, "アイン：ようやく、これで合計３つだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：残る２つも、うまく見つかると良いわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、引き続き探索を続けよう。", ActionEvent.None);
    }
    else if (GetZetaniumCount() == 4)
    {
      Message(ref m_list, ref e_list, "アイン：おっしゃ、きたきた！４つ目ゲット！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：後１つよ、慎重に探してよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かってるって。じゃ、引き続き探索を続けよう。", ActionEvent.None);
    }
    else if (GetZetaniumCount() == 5)
    {
      Message(ref m_list, ref e_list, "アイン：やったぜ、これで５つ揃ったな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：フフ、やったじゃない、おめでとう♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやー、サンキューサンキュー。ありがとな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、おめでとうございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、エオネも戦闘は助かったぜ、サンキューな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、一旦" + Fix.TOWN_QVELTA_TOWN + "に戻って、ヴァスタおじさまに渡しに行きましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー、了解！！", ActionEvent.None);
    }

    Message(ref m_list, ref e_list, "", ActionEvent.None);
  }

  public static void Message300030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.QuestMain_00005 == false)
    {
      SearchMatockQuest(ref m_list, ref e_list);
      Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);
      return;
    }

    if (One.TF.FindBackPackItem(Fix.ITEM_MATOCK) == false)
    {
      Message(ref m_list, ref e_list, "アイン：マトックが無いと、ここは通れないな。探してこよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);
      return;
    }

    if (One.TF.FieldObject_Artharium_00001 == false)
    {
      One.TF.FieldObject_Artharium_00001 = true;

      UseMatockForRock(ref m_list, ref e_list, Fix.ARTHARIUM_Rock_1_O);
    }
  }

  public static void Message300031(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.QuestMain_00005 == false)
    {
      SearchMatockQuest(ref m_list, ref e_list);
      Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
      return;
    }

    if (One.TF.FindBackPackItem(Fix.ITEM_MATOCK) == false)
    {
      Message(ref m_list, ref e_list, "アイン：マトックが無いと、ここは通れないな。探してこよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
      return;
    }

    if (One.TF.FieldObject_Artharium_00002 == false)
    {
      One.TF.FieldObject_Artharium_00002 = true;

      UseMatockForRock(ref m_list, ref e_list, Fix.ARTHARIUM_Rock_2_O);
    }
  }

  public static void Message300032(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.QuestMain_00005 == false)
    {
      SearchMatockQuest(ref m_list, ref e_list);
      Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
      return;
    }

    if (One.TF.FindBackPackItem(Fix.ITEM_MATOCK) == false)
    {
      Message(ref m_list, ref e_list, "アイン：マトックが無いと、ここは通れないな。探してこよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
      return;
    }

    if (One.TF.FieldObject_Artharium_00003 == false)
    {
      One.TF.FieldObject_Artharium_00003 = true;

      UseMatockForRock(ref m_list, ref e_list, Fix.ARTHARIUM_Rock_3_O);
    }
  }

  public static void Message300033(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.QuestMain_00005 == false)
    {
      SearchMatockQuest(ref m_list, ref e_list);
      Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
      return;
    }

    if (One.TF.FindBackPackItem(Fix.ITEM_MATOCK) == false)
    {
      Message(ref m_list, ref e_list, "アイン：マトックが無いと、ここは通れないな。探してこよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
      return;
    }

    if (One.TF.FieldObject_Artharium_00004 == false)
    {
      One.TF.FieldObject_Artharium_00004 = true;

      UseMatockForRock(ref m_list, ref e_list, Fix.ARTHARIUM_Rock_4_O);
    }
  }

  public static void Message300034(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.QuestMain_00005 == false)
    {
      SearchMatockQuest(ref m_list, ref e_list);
      Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);
      return;
    }

    if (One.TF.FindBackPackItem(Fix.ITEM_MATOCK) == false)
    {
      Message(ref m_list, ref e_list, "アイン：マトックが無いと、ここは通れないな。探してこよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);
      return;
    }

    if (One.TF.FieldObject_Artharium_00005 == false)
    {
      One.TF.FieldObject_Artharium_00005 = true;

      UseMatockForRock(ref m_list, ref e_list, Fix.ARTHARIUM_Rock_5_O);
    }
  }

  private static void SearchMatockQuest(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：あれ、こっちの方に通路があるように見えるが、デカい岩で塞がれているな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっと手で移動させるのは難しそうね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マトックみたいなのが、あれば良いんだがな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どうかしたの？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ、いえ・・・特に意見というわけでは・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ひょっとしてマトックの在処に心当たりでも？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ、そうなんです！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：実はこのエリアは昔、立ち寄った事があるので、どこかで見かけた事はあるんです。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おっ、そうなのか！じゃちょうど良かった。マトックまで案内してくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ、でも・・・どこにあったかまでは、自信が持てないので・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっと、そこ。エオネさんに変に押し付けないでよね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：え・・・っと・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：良いのよ。マトックがどこかにあるって事よね。それだけで十分よ♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：あとはそこのバカが駆けずり回って探す手筈になってるから♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おい、マジかよ。今のじゃほとんど手掛かりねえじゃねえか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：あんたのいつものテキトー直観で見つけるんでしょ。頼んだわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マジか・・・まあ、何とか探してみるか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：っしゃ、任せておけ！ッハッハッハ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_5 + " 】が開始されました！", ActionEvent.GetNewQuest);
  }

  private static void UseMatockForRock(ref List<string> m_list, ref List<ActionEvent> e_list, string identity)
  {
    Message(ref m_list, ref e_list, "ラナ：じゃあ、頼んだわよ。アイン。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、任せておけ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あらよっと！", ActionEvent.None);

    Message(ref m_list, ref e_list, identity, ActionEvent.RemoveFieldObject);

    Message(ref m_list, ref e_list, "　～　アインはマトックで岩壁を崩しました！　～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ラナ：上手くいったみたいね♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、じゃあ進もうぜ！", ActionEvent.None);
  }

  public static void Message300040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.QuestMain_Complete_00006 == false)
    {
      if (One.TF.Event_Message300040 == false)
      {
        One.TF.Event_Message300040 = true;

        Message(ref m_list, ref e_list, "アイン：扉か・・・鍵がかかってるな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：他を探してみましょう。きっとどこかに鍵があるはずよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、ある事には間違いないんだろうが・・・どこら辺だろうな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：えっと・・・どうかされたんですか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・ッハ！　あ、いやいやいや！", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：また何かくだらないこと考えてたんでしょ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：考えてないでとにかく探してみましょ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、探索開始だ！", ActionEvent.None);

        Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_6 + " 】が開始されました！", ActionEvent.GetNewQuest);

        Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
      }
      else
      {
        if (One.TF.FindBackPackItem(Fix.ARTHARIUM_KEY) == false)
        {
          Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "エオネ：えっと・・・どうかされたんですか？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：・・・ッハ！　あ、いやいやいや！", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：また何かくだらないこと考えてたんでしょ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：考えてないでとにかく探してみましょ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：あ、ああ。", ActionEvent.None);
        }
        else
        {
          One.TF.FieldObject_Artharium_00010 = true;

          Message(ref m_list, ref e_list, "アイン：よし、ここは例の鍵だな！", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ラナ、開錠については頼んだぜ！", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：別に、鍵なしで開けるわけじゃないんだから、誰でも出来るんだけど。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：いやいや、ここはひとつ頼んだぜ！", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：まあ、良いけど。じゃあソコどいて。", ActionEvent.None);

          Message(ref m_list, ref e_list, "　～　ラナは注意深く扉を調べ始めた　～", ActionEvent.MessageDisplay);

          Message(ref m_list, ref e_list, "ラナ：えーと・・・多分これね。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：うん、この鍵で大丈夫みたいよ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：じゃ、開けるわね。", ActionEvent.None);

          Message(ref m_list, ref e_list, "　ギッ、　ギギィ　・・・　", ActionEvent.None);

          Message(ref m_list, ref e_list, Fix.MAPEVENT_ARTHARIUM_9_O, ActionEvent.RemoveFieldObject);

          Message(ref m_list, ref e_list, "ラナ：やったわ、開いたわよ♪", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：よし！いよいよここの通路の解禁ってわけだな！！", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：じゃあ、早速・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "エオネ：　・・・　あの、ちょっと待ってください！", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：おお。どうかしたのか？", ActionEvent.None);

          Message(ref m_list, ref e_list, "エオネ：本当に、この先に進むのでしょうか？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ああ、進むぜ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：心配するな、大丈夫だ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "エオネ：・・・　・・・っえ？", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：まあ、そこのバカアインがそう言ってるんだし、任せてみれば良いんじゃない？", ActionEvent.None);

          Message(ref m_list, ref e_list, "エオネ：・・・わ、分かりました。", ActionEvent.None);

          Message(ref m_list, ref e_list, "エオネ：じゃあ、アインさん！進軍、お願いします！", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：お・・・おお！", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：任せておけ！ッハッハッハ！", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：ちょっと。進むのは良いけど、策は考えてあるのかしら？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ない！", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：アーッハッハッハ！", ActionEvent.None);

          Message(ref m_list, ref e_list, "『ッシャゴオォォオォォ！！！』（ラナのメギド・ストライクがアインに炸裂）", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：グフォ・・・！！おまえ、本気で打ち込むなよな。いっつつつ・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ま、まあ策というほどの事じゃねえが、考えはある。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：頼んだわよ。この先何かある事ぐらいはエオネも私も分かってるんだから。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ああ、了解だ！任せておけ！", ActionEvent.None);

          Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_6 + " 】を達成しました！", ActionEvent.QuestComplete);
        }
      }
    }
  }
  public static void Message300041(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：この工場跡地向けの鍵を探さないと、ここを開く事は出来ないな。鍵を見つけよう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
  }

  public static void Message300050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300050)
    {
      return;
    }

    One.TF.Event_Message300050 = true;

    Message(ref m_list, ref e_list, "アイン：へえ・・・結構広い空間だな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：なんだか雑多な場所ね。色々な物が散乱してるみたいだけど。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・きっとココは昔、誰かが使ってたんだろうな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：えっ、そうなの？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：何となくだけどな。散かり具合が微妙に不規則だしな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：その不規則なのが、どう関係あるのよ。そういう説明は昔からあい変わらずよね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それにしても・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

    Message(ref m_list, ref e_list, "アイン：雰囲気あるよな・・・・・この場所。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネ、何か知ってるか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：えっ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、知らないなら知らないで良いんだが。何となく知ってるんじゃないかと思ってな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：えっと・・・すみません・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：エオネさん、そこの意図不明な会話に付き合わなくて良いからね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：えっ・・・ええ。はい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：良いから。バカはバカ言ってないで、とっとと周辺探索するわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あ、ああ、まあそうだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おし、じゃあひとまず探索と行きますか！", ActionEvent.None);
  }

  public static void Message300060(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.QuestMain_Complete_00005 == false)
    {
      Message(ref m_list, ref e_list, "アイン：おっ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうしたのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ほら、こっち来てみろよ。これひょっとしてマトックじゃねえか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：確かにそうみたいね。でも・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：本当。よく見つけたわね、こんな所に置いてあるのに。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こんな所って、そりゃこんな所にあるものだろ。マトックだしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：意味わかんない解説は置いといて・・・ひとまずは、助かるわ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあこれで岩壁があっても、片っ端から掘れば進められるな！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あっ・・・あの、すみません！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうした。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ・・・その、マトックなんですけど・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：じ・・・じつは・・・その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ひょっとして、何回か使うと壊れるって話か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：「えっ？」　　エオネ：「っ！？」", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、これだけ色が変色してるんだ。元の素材が頑丈とは言え、無限に使えるわけじゃないだろう,", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：使うべき場所は良く選んでからつかうよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとうな、エオネ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いっ・・・　いえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：でも、すみません。違うんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そのマトック、手元の所にこのエリアの毒が付着してるから、取った方が良いと思っただけなんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッゲ、マジかよ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アインは毒のダメージを食らった！！　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：なんでもかんでも早とちりして、考えもせずにアイテムを拾わない事ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：わ、分かったって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あの・・・あとマトックの持ち方がそれだと壊れやすいので・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：こうやって・・・・こんな風に持ってください。そうるすと壊れないですから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おー、オーケーオーケー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか、これなら回数制限とかも無さそうだな。サンキュー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それじゃ、使うポイントに来たらアインが振るってよね。そのマトックの扱いについては任せるわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解了解！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 " + Fix.ITEM_MATOCK + " 】を手に入れました！", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, Fix.ITEM_MATOCK, ActionEvent.GetItem);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_5 + " 】を達成しました！", ActionEvent.QuestComplete);
    }
  }

  public static void Message300070(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300070 == false)
    {
      One.TF.Event_Message300070 = true;

      Message(ref m_list, ref e_list, "アイン：おっと・・・崖のようだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうやら行き止まりみたいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・いや、別に行き止まりってわけじゃねえ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：一応下には地面が見えている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：え、まさか・・・, この高さからジャンプして飛び降りるって考えてないでしょうね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺はバカだからな。そのまさかだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：えっ・・・ちょ、ちょっと待ってください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫だって、その気になりゃ多少滑る感じで下れば行ける。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・いえ・・・そ、そうではなくて・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？一体どうしたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、わからないわけ？ほんと、そういう所は鈍感よね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　ッ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：待て、分かった！とにかく、止めておいた方が良いみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：と、すると・・・どうしたものか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　何となく、筋がある気がするんだけどな・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　さて、どうすっかな　）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.DECISION_ARTHARIUM_CLIFF, ActionEvent.CallDecision);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：（　何となく、筋がある気がするんだけどな・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　さて、どうすっかな　）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.DECISION_ARTHARIUM_CLIFF, ActionEvent.CallDecision);
    }
  }

  public static void Message300071(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：ちょっと考えてみたんだが・・・。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：崖の下には俺１人で行ってみるからさ。ここで待っててくれないか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：えっ！？単身で突っ込むわけ！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：大丈夫だ。ちゃんと戻ってくるからさ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：戻ってくるって、だから崖降りた後、どうやって戻るつもりなのよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：大丈夫だろ、何とかなるって。ッハッハッハ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっと、エオネからも何か言ってやって。こいつは本当に脳なしだから。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：え・・・えぇ・・・あの・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：お気をつけて・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ウソ、まじか・・・意外とそういう反応なんだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：まあ・・・一人でどうしても行くって言うなら、しょうがないわね。じゃあこれを持って行きなさい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おっ、これひょっとして・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おー、やっぱりそうだ！" + Fix.ITEM_TOOMI_AOSUISYOU + "じゃねえか！よく持ってたな、こんな代物！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：万が一のためよ。用意は万全にしておかないとね♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マジかよ。これがあるとスゲー助かるぜ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.ITEM_TOOMI_AOSUISYOU, ActionEvent.GetItem);

    Message(ref m_list, ref e_list, "【 " + Fix.ITEM_TOOMI_AOSUISYOU + " 】を手にいれました！", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：でも、こんなのどこから仕入れたんだ？少なくともアンシェット街では売ってる訳がないよな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：それはえととと・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：な、内緒なのよ！！いちいち聞かないでちょーだい！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：わ、分かったって。いちいち大きな声出さなくてもいいだろ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：と、とにかくそれを使えば、アーサリウム工場跡地から外に出られるから、厳しくなったら使うことね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ちょっと待てよ。そうなると、俺は外に出られるけど、ラナとエオネはどうなるんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：その点は大丈夫よ。最初にここに入った時に青水晶が自動的に記憶しているから。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：アインがそれを使えば、私とエオネも一緒に帰還する事になるわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なるほど、そんなものか。なら心配しなくてもオッケーだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：じゃまあ、これ持ってちょっと奥の方を探索してくるとするぜ、しばらく待機しててくれ。良いな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ええ、良いわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあ行くぜ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.InstantiateObject);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);

    Message(ref m_list, ref e_list, "0.4", ActionEvent.ForceMoveFall);

    Message(ref m_list, ref e_list, "0.3", ActionEvent.ForceMoveFall);

    Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);

    Message(ref m_list, ref e_list, "0.1", ActionEvent.ForceMoveFall);

    Message(ref m_list, ref e_list, "アイン：っとぉ、着地！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：オーケーオーケー！ッハッハッハ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おーい、そっちは大丈夫かー？", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　アインは崖の下から上を眺めた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ラナ：あっ！ちょっと、何見ようとしてんのよ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　ラナはデカい岩のつぶてを崖の下へとぶん投げた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：イデっ！！ッゴワ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おまえ、何しやがる。さすがにイテェだろうが。ったく・・・つつ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：良いから。とっとと行きなさいよ。ホラ、行った行った！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ったくもう。分かった分かった。じゃ、行ってくるからな。", ActionEvent.None);

  }

  public static void Message300072(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：ここは一旦、引き返すとするか、他の道を探してみよう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
  }

  public static void Message300080(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：（ おっ、見覚えのある通路に出たな ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（ ここを下へジャンプして降りれば、戻れそうだな ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（ さて、どうすっかな ）", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.DECISION_ARTHARIUM_CLIFF_END, ActionEvent.CallDecision);

  }

  public static void Message300081(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあ行くぜ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.3", ActionEvent.ForceMoveBottom);

    Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);

    Message(ref m_list, ref e_list, "0.1", ActionEvent.ForceMoveFall);

    Message(ref m_list, ref e_list, "アイン：（ よし、着地っと！ ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（ さて、もとに戻った事だし、ラナ達と合流しておこう ）", ActionEvent.None);

  }

  public static void Message300082(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：（ 少し気になる所がある。もう少し調べてみるか ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveTop);
  }

  public static void Message300090(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300090 == false && One.TF.LocationPlayer2)
    {
      One.TF.Event_Message300090 = true;
      One.TF.LocationPlayer2 = false;

      Message(ref m_list, ref e_list, "アイン：よっ、今戻ったぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);

      Message(ref m_list, ref e_list, Fix.MAPEVENT_ARTHARIUM_3_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ラナ：あら、意外な方向から戻ってきたわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあな。適当に進んでいたら元の通路に戻れるポイントがあって、そこから戻ってきたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ、無事でなによりね。何か良いお宝はゲットできたわけ？", ActionEvent.None);

      // todo　宝箱（シークレット）に応じて会話分岐

      Message(ref m_list, ref e_list, "アイン：うん、まあまあって所だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ふーん、意外な反応ね。アインが突っ込むぐらいだから、何かあるかと思ってたんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：別にいつもそういうアンテナを張ってるワケじゃえねえさ。今回はこんなもんだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ他の場所も探索しようぜ！", ActionEvent.None);
    }
  }

  public static void Message300100(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300100 == false)
    {
      One.TF.Event_Message300100 = true;

      Message(ref m_list, ref e_list, "アイン：おっ、看板があるな。どれどれ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　本エリア奥にて凶暴な生物が発生。全面的に通路を封鎖する。　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：穏やかな内容じゃないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今まで通ってきた道でも、モンスターなら普通に出現してるけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あの・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ぁ・・・いえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんか気になる事があれば、どしどし言ってくれ。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、バカアインは変な誘導しないでくれる？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさん、そこのバカは放っておいてくださいね。無視して良いですから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ハ、ハイ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあモンスターの位置は把握出来てないんだし、慎重に進んだ方がよさそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ慎重に進めるとするか、了解！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　本エリア奥にて凶暴な生物が発生。全面的に通路を封鎖する。　』", ActionEvent.None);
    }
  }

  public static void Message300110(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300110 == false)
    {
      One.TF.Event_Message300110 = true;

      Message(ref m_list, ref e_list, "アイン：扉みたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でも何かこの扉って鍵もかかってないわね。ヤワな板で封鎖しているだけって感じね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この程度なら、多少強引に蹴破って進められそうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さて、どうすっかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.DECISION_ARTHARIUM_CRASH_DOOR, ActionEvent.CallDecision);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：この程度なら、多少強引に蹴破って進められそうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さて、どうすっかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.DECISION_ARTHARIUM_CRASH_DOOR, ActionEvent.CallDecision);
    }
  }

  public static void Message300111(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300111 == false)
    {
      One.TF.Event_Message300111 = true;
      One.TF.FieldObject_Artharium_00006 = true;

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ行くぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインのストレートキックが扉に炸裂した！ 】", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.MAPEVENT_ARTHARIUM_4_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);

      Message(ref m_list, ref e_list, "アイン：オーケー！開いたぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：蹴破ったけど、特に警報とかもなさそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっしゃ、このまま進めるとするか！", ActionEvent.None);
    }
  }

  public static void Message300112(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：いや、もう少し他を探してみるとするか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveTop);
  }

  public static void Message300120(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300120 == false)
    {
      One.TF.Event_Message300120 = true;

      Message(ref m_list, ref e_list, "アイン：おっ、扉みたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これも蹴破って行けそうだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうかしたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、ちょっとな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：今、扉を調べてはみたけど、特に鍵はかかってないみたいよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、基本は蹴破って進んでも良いんだけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さて、どうすっかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.DECISION_ARTHARIUM_CRASH_DOOR2, ActionEvent.CallDecision);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：ここの扉か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さて、どうすっかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.DECISION_ARTHARIUM_CRASH_DOOR2, ActionEvent.CallDecision);
    }
  }

  public static void Message300121(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300121 == false)
    {
      One.TF.Event_Message300121 = true;
      One.TF.FieldObject_Artharium_00007 = true;

      Message(ref m_list, ref e_list, "アイン：っしゃ！じゃあ行くぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインのストレートキックが扉に炸裂した！ 】", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.MAPEVENT_ARTHARIUM_5_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveRight);

      Message(ref m_list, ref e_list, "アイン：よおし、問題なく進めたな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうかしたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン！今すぐこっちに来て！早く！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なっ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：敵襲よ！背後から！", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.HELL_KERBEROS, ActionEvent.EncountBoss);
    }
  }

  public static void Message300122(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：何となく引っかかるな、少し慎重に動こう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", ActionEvent.MoveLeft);
  }

  public static void Message300123(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.QuestMain_Complete_00007 = true;

    Message(ref m_list, ref e_list, "アイン：や・・・やっつけたか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：大丈夫です、もうピクリとも動かない様です。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ホント危なかったわね。まさか背後から襲ってくるなんて思わなかったわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：しかし、蹴破る時は気配をまるで感じなかったけどな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どっから湧いてきたんだろうな、この生物・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：単なる工場跡地にしては、ちょっとおかしいわよね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ま、考えてもしょうがねえか！ッハッハッハ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：何よもう。まったく、考えたフリしないでよね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ま、いいさいいさ。なあエオネ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・ぇ・・・ええ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：そ・・・それよりも、この生物の足元、見てください。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：何か挟まっている様に見えませんか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マジかよ。どれどれ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おっ！こいつはレア物じゃねえか！！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.PURE_CLEAN_WATER, ActionEvent.GetItem);

    Message(ref m_list, ref e_list, "【 " + Fix.PURE_CLEAN_WATER + " 】を手にいれました！", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ラナ：あら、良い物手に入れたわね♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いやあ、こいつは助かるぜ。何といってもほぼ毎日使える代物だしな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：「ほぼ」じゃなくて「確実に毎日」使えるわよ。一日につき１回しか使えないのが条件だけどね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、確かそうだったな。いやホント助かるぜ、これは。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おっ、そういや見つけてくれたのはエオネだったな。サンキュー！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：い・・・いえ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし。じゃあ先へ進めるとするか！", ActionEvent.None);
  }

  public static void Message300130(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.SoulFragment_00001 == false)
    {
      One.TF.SoulFragment_00001 = true;

      GetSoulFragmentMessage(ref m_list, ref e_list);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：せっかくだし、少しだけお祈りをしていくとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アインは「蒼流石」の前に座り、祈りを捧げた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ行くとするか。", ActionEvent.None);
    }
  }

  public static void Message300140(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300140 == false)
    {
      One.TF.Event_Message300140 = true;

      Message(ref m_list, ref e_list, "アイン：うわ、なんだここは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：酷い状況ね。辺り一面が毒だらけだわ。。。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：多少なら何とかなるが、こんな状況じゃ進んでも絶対に途中でダメになるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうする？さすがに引き返すしかないわよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうしたもんかな・・・今引き下がるにしても打開策がねえとな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・そ・・・その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうかしたのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：毒って・・・このエリアにある毒の事ですよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ確かにそうだが。何か知ってるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ。ここの毒素については比重が重たいので、空気中に蔓延しているわけではありません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：なので、ある程度防衛できる物を身に着けていれば・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか、それなら無傷で通り抜けられるって事か！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：無傷ってわけにはいかないでしょ。ある程度軽減されるって話よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：確かに無傷ってのは難しいか・・・だがまあ、何とかなりそうではあるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあその防護できるアイテムを探すとするか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・あと、すみません。もう１件だけ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、何でも言ってくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：防護服なら、おそらくマトックが見つかった部屋の近辺にあると思います。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、分かった。じゃあ、ここは一旦引き下がって、その部屋をくまなく探すとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_8 + " 】が開始されました！", ActionEvent.GetNewQuest);
    }
    else if (One.TF.QuestMain_Complete_00008 == false)
    {
      Message(ref m_list, ref e_list, "アイン：まだ、防護服が見つかってないな。ここは一旦引き下がろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
    }
    else if (One.TF.Event_Message300141 == false)
    {
      One.TF.Event_Message300141 = true;

      Message(ref m_list, ref e_list, "アイン：ここだな・・・じゃあ進んでみるぞ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン達は意を決して、毒エリアへ果敢に進んでいった！！　】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

      Message(ref m_list, ref e_list, "アイン：おっ、行けるなこれは！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でも、ほんの少しだけどダメージを受けている感じはするわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、でもほんの僅かだしな。これなら結構気にせず進められるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：でも、気をつけてくださいね・・・奥がどうなってるか分かりませんから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解！", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_8 + " 】を達成しました！", ActionEvent.QuestComplete);
    }
  }

  public static void Message300150(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.QuestMain_Complete_00008 == false)
    {
      Message(ref m_list, ref e_list, "アイン：おっ、ひょっとして防護服ってこれの事か！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ。それで合ってると思います。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、どうやら見つかったみたいだな。これでようやくあの毒エリアを進むことが出来そうだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかし、何かやたらと薄っぺらいんだな。もっとゴツいのを想像してたんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：必要以上に重くしたら、本来の作業に支障が出るからじゃないかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そんな所だろうな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかし、何か引っかかるんだよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何がよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：防護服ってのはそもそも毒が噴出してから用意するもんじゃないのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうかもしれないけど、それがどうかしたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この区画って明らかに毒が届いてないエリアなんだよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だったら、あえてここに防護服を設置した理由って何だろうなって思ったのさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そんなの、作業員の皆が集まりやすかっただけじゃないかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん、しかしだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ホラホラ、変な所考えてないで、目的の物は見つかったんでしょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ。そうだったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあこの防護服を装着して、例の毒エリアに行ってみるとするか！", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.RESIST_POISON_SUIT, ActionEvent.GetItem);

      Message(ref m_list, ref e_list, "【 " + Fix.RESIST_POISON_SUIT + " 】を手にいれました！", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_8 + " 】を達成しました！", ActionEvent.QuestComplete);
    }
  }

  public static void Message300160(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.SoulFragment_00002 == false)
    {
      One.TF.SoulFragment_00002 = true;

      GetSoulFragmentMessage(ref m_list, ref e_list);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：せっかくだし、少しだけお祈りをしていくとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アインは「蒼流石」の前に座り、祈りを捧げた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ行くとするか。", ActionEvent.None);
    }
  }

  public static void Message300170(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message300170 == false)
    {
      One.TF.Event_Message300170 = true;

      Message(ref m_list, ref e_list, "アイン：扉か・・・少し蹴ってみるか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインのストレートキックが扉に炸裂した！ 】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっ、全然びくともしないな。結構やるじゃないか、この扉。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：っちょ、何勝手に蹴ってるのよ。危ないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：悪い悪い。何となく良いかなと思って。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まったくもう・・・ちょっとどいて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　ラナは注意深く扉を調べ始めた　～", ActionEvent.MessageDisplay);

      if (One.TF.FindBackPackItem(Fix.ARTHARIUM_KEY))
      {
        One.TF.FieldObject_Artharium_00008 = true;
        Message(ref m_list, ref e_list, "ラナ：あっ、多分これね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：アイン、ちょっと鍵貸して。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：おお、これの事か。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ありがと。ええと、じゃあ開けるわね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "　ギッ、　ギギィ　・・・　", ActionEvent.None);

        Message(ref m_list, ref e_list, Fix.MAPEVENT_ARTHARIUM_8_O, ActionEvent.RemoveFieldObject);

        Message(ref m_list, ref e_list, "ラナ：やったわ、開いたわよ♪", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：サンキュー！　よし、この先に行ってみるとするか！", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：この扉、鍵がかかってるみたいよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：鍵を探してこないと駄目ってわけか・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：しょうがない。鍵をまず先に見つけてこよう。", ActionEvent.None);
      }
    }
    else
    {
      if (One.TF.FindBackPackItem(Fix.ARTHARIUM_KEY))
      {
        One.TF.FieldObject_Artharium_00008 = true;

        Message(ref m_list, ref e_list, "ラナ：アイン、ちょっと鍵貸して。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：おお、これの事か。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ありがと。ええと、じゃあ開けるわね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "　ギッ、　ギギィ　・・・　", ActionEvent.None);

        Message(ref m_list, ref e_list, Fix.MAPEVENT_ARTHARIUM_8_O, ActionEvent.RemoveFieldObject);

        Message(ref m_list, ref e_list, "ラナ：やったわ、開いたわよ♪", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：サンキュー！　よし、この先に行ってみるとするか！", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：この扉、鍵がかかってるみたいよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：鍵を探してこないと駄目ってわけか・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：しょうがない。鍵をまず先に見つけてこよう。", ActionEvent.None);
      }
    }
  }

  public static void Message300180(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.QuestMain_00005 == false)
    {
      SearchMatockQuest(ref m_list, ref e_list);
      Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
      return;
    }

    if (One.TF.FindBackPackItem(Fix.ITEM_MATOCK) == false)
    {
      Message(ref m_list, ref e_list, "アイン：マトックが無いと、ここは通れないな。探してこよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
      return;
    }

    if (One.TF.FieldObject_Artharium_00009 == false)
    {
      One.TF.FieldObject_Artharium_00009 = true;

      UseMatockForRock(ref m_list, ref e_list, Fix.ARTHARIUM_Rock_6_O);
    }
  }

  public static void Message300190(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatGalvadazer == false && One.TF.QuestMain_Complete_00009 == false)
    {
      Message(ref m_list, ref e_list, "アイン：おっと、デカいやつのお出ましみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：だ・・・大丈夫なんでしょうか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：見た感じでは、パワー系って所かしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アインはどう思う？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、パワーはありそうってのは確かだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただし、それだけじゃない。こういうタイプは「計略」を１つぐらいは持ってるもんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：戦闘関連のトラップが仕掛けられていると考えておいた方が良いだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：陣形についてだが、デカいやつが一人だ。後方には向かわせないように俺が何とかする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと、ダメージが大体当たってきたら要注意だろうな。もう一つ奥の手を持っている感じはする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：大体分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあなんにせよ、気を引き締めていこう。エオネ、ラナ、準備は良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：は、はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私はいつでも良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ戦闘開始だ、行くぞ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.THE_GALVADAZER, ActionEvent.EncountBoss);
    }
  }

  public static void Message300200(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatGalvadazer && One.TF.QuestMain_Complete_00009 == false)
    {
      Message(ref m_list, ref e_list, "ガルヴァデイザー：ゴッ・・・ゴガガガガガガ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うお！　こいつまだ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ガルヴァデイザー：ゴガア・・・ガ・・・ガアァァァ・・・ガ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ガルヴァデイザー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうやら、今のが最後の断末魔みたいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうやら、そのようだな。ふう・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし！制覇制覇！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ・・・その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、どうしたエオネ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：すごいですね、その・・・何というか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：倒せるものなんでしょうか。こういった大型級のモンスターを。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今実際にこうして俺たち全員で倒したんだ。実感湧かないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：え・・・ええっと・・・はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：無理ないかもね。あまりこうしたモンスターを倒す所まで、一般冒険者は踏み入らないみたいだし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：えっ、そうなのか？普通ならこの辺りまでは踏み込むもんだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アンタは考えゼロで突っ込みすぎなのよ。ヒヤヒヤさせられるこっちの身にもなってよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだったのか。まあ、次からは少し考えてみるさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：でも、ほ・・・本当にありがとうございました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやいや、お礼を言われる側じゃない。同じパーティだしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こちらこそ、ありがとうな。助かったぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：は、はい！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナもいつもサンキューな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ッフフ、どうって事ないわよ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと残るは、この奥にある通路だな。絶対にお宝に違いない！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ、変なトラップはもう無いと思うけど、気をつけて進んでよね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よっしゃ、任せておけ！待ってろよ、お宝！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_9 + " 】を達成しました！", ActionEvent.QuestComplete);
    }
  }

  public static void Message300210(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Obsidian_Artharium_00001 == false)
    {
      One.TF.Obsidian_Artharium_00001 = true;

      Message(ref m_list, ref e_list, "アイン：これは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直、お宝じゃなさそうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：いつもお宝があるとは限らないでしょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：不思議ですね・・・その物体、宙に浮いてる様に見えます・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと触ってみるか。どれどれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あっ、ちょっと、そこのバカ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "　アインは奇妙な物体に手を触れてみた　", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：お・・・おおぉ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何だこれ！何か流れ込んでくるぞ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "　アインは青白い球体に包まれ始めた！　", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：バッ、バカ！！ちょっと変な球体に包まれているけど、大丈夫なの！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（何だこれ・・・音がまったく聞こえない・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そこのバカ！！聞いてるの！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・一体・・・なんだこれは・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（！？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（何かが・・・声が聞こえる・・・なんだ？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　応えよ　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　そして受諾せよ　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　さすれば意志が宿る　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 " + Fix.UNKNOWN_OBJECT + " 】を獲得しました！", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, Fix.UNKNOWN_OBJECT, ActionEvent.GetItem);

      Message(ref m_list, ref e_list, "アイン：こ、これは・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：って、あんた一体誰なんだ！？どこにいるんだ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　時は満たず　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　精神は満たず　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　還るべきは理と知るがよい　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんだって？どういう意味だ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "　－－－　時が満ちればまた姿を現すがよい、幼きものよ　－－－", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、まってくれ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "『空間が激しくフラッシュし、凝縮された空間へと連続的に小さくなる！！！』", ActionEvent.None);

      Message(ref m_list, ref e_list, "『パパパパパパパ！！！！ッバシュウウウゥゥゥン！！！！！！！』", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.MAPEVENT_ARTHARIUM_11_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：だ、大丈夫！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　ッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかし何だったんだ今のは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：外からは全くわかりませんでした・・・どのような状態だったんですか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何て言うんだろうな。何かこう・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：声が、聞こえたんだけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私達の声が聞こえてたって事？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：す、すまねえ。そうじゃないんだ。うまく説明が出来ないんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、すまねえ。今回は本当についうっかりだな。ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：とにかく。ぶ、無事ならそれで良いのよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：で、その手に入れた物体は、どう扱うのか分かってるのかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これか・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここじゃなんだしな。この件については後で話す。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：一旦クヴェルタ街に戻ろう。話はそれからだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネも、街までもう少しだけ付き合ってくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：は、はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあクヴェルタ街に向かうとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_10 + " 】が開始されました！", ActionEvent.GetNewQuest);
    }
  }

  public static void GetSoulFragmentMessage(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FirstSoulFragment == false)
    {
      One.TF.FirstSoulFragment = true;

      Message(ref m_list, ref e_list, "アイン：おっ、何だこれは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、それちょっとよく見せて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。頼んだぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　ラナは注意深く物体を調べ始めた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：どうだ、何か分かりそうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：おそらくだけど、これは「" + Fix.GUARDIAN_ANGEL_BLUE + "」を祭るための神具「蒼流石」ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：へえ・・・そういう物があるんだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：こうした炭鉱では事故やトラブルが絶えないから、よくこうして神様にお祈りをしていたんでしょうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そういった所なんだろうな。さっきみたいな化け物も出てるのも事実だしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アインも少しだけお祈りを捧げてみたら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺か？　神様頼みは、あんまりしない主義なんだけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・すみません、私からもお願いします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジか。じゃあせっかくだし、少しだけお祈りをしていくとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アインは「蒼流石」の前に座り、祈りを捧げた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "1", ActionEvent.GainSoulFragment);

      Message(ref m_list, ref e_list, "　～　アイン達は【ソウル・フラグメント】を獲得しました！　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし。こんなもんだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何となくだけど悪くないもんだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、行きましょうか。ここはもう通路がないみたいだし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。他を探索するとしよう！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：おっ、「蒼流石」だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、お祈りを捧げておいたら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。じゃあ、少しだけ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アインは「蒼流石」の前に座り、祈りを捧げた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "1", ActionEvent.GainSoulFragment);

      Message(ref m_list, ref e_list, "　～　アイン達は【ソウル・フラグメント】を獲得しました！　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし。こんなもんだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、行きましょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
    }
  }

  public static int GetZetaniumCount()
  {
    int counter = 0;
    if (One.TF.Zetanium_001)
    {
      counter++;
    }
    if (One.TF.Zetanium_002)
    {
      counter++;
    }
    if (One.TF.Zetanium_003)
    {
      counter++;
    }
    if (One.TF.Zetanium_004)
    {
      counter++;
    }
    if (One.TF.Zetanium_005)
    {
      counter++;
    }
    return counter;
  }
  #endregion

  #region "港町コチューシェ"
  public static void Message400010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message400010 == false)
    {
      One.TF.Event_Message400010 = true;

      Message(ref m_list, ref e_list, "アイン：よし、" + Fix.TOWN_COTUHSYE + "に着いたみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：結構ここまで長い道のりだったわね。ちょっと一休みできる所は無いかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あっ、ラナさん。あちらの角を左に曲がって、3軒目の所に美味しいパフェを売ってる店があるんですよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：本当！？じゃあ早速行きましょ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ゲッ、マジかよ。俺は調査とかやるべき事をすぐにでもだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そんなのいつでも出来るじゃない。今しか出来ない事をやるのよ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま・・・まあ、そう言われればそうだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃ、私は先に行ってるからね♪ほら、エオネもおいで♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：え、あ、ハイ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　行っちまったか　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、いいか。この辺りで一旦休むのもアリかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アインが、曲がり角まで差し掛かった所で　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：キャア！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（今の、ラナの声か！？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おい、大丈夫か！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：え、えぇ・・・大丈夫よ。ビックリしたわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何があったんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：うーん、それがね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：よく分からなかったのよ。何かが横切ったのは確かなんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、お前は何か見なかったのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：い、いえ。わ、わたくしは何も・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか。まあとにかく誰も傷付いてなくて何よりだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ今後は気をつけるとして・・・何だっけ。パフェの店に行くんだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい、今目の前にあるお店です。ラナさんは既に入っていきました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：早ぇなあ・・・そういう所は見境がないんだよな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、エオネも入るのか？ココ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あっと・・・え、ええっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。では行ってまいります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うん。じゃ、俺はここで待ってるから。二人とも食い終わったらサッサと出てくるんだぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：え、えっ、ええ・・・では。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　２時間　経過後　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　っお。出てきたか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ふぅ、美味しかった♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだった。ちょっとは回復したか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、バッチリよ。ありがと♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、それじゃあ、この港町で色々と調べてみるとするか！", ActionEvent.None);
    }
  }

  public static void Message400019(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：（いや、この港町をもう少し探索しておこう）", ActionEvent.None);
  }

  public static void Message400020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message400020 == false)
    {
      One.TF.Event_Message400020 = true;
      One.AR.PartyJoin_BillyRaki = true;
      One.UpdateAkashicRecord();

      Message(ref m_list, ref e_list, "アイン：おっ、何かこっちの方はずいぶんと賑やかだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　船着き場にて　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "係員：だから、他を当たってくれと言ってるんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：だから、他も何もねーだろ。船が出る所はココしかないだろーが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "係員：とにかく、船は出ない。他を当たってくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：チッ、ありえねぇだろ・・・くそ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おいちょっと。どうかしたのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ここの係員が船に乗せてくれねえんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：船自体はそこの発着場にある。出ないワケがねーだろって言ってるんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：船があったとしてもメンテナンスか何かで出航しない場合だってあるだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：あ？何でお前まで係員と同じ事を言うんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そんなの係員に聞くまでも無いだろ。大体予想は付く。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：「大体予想は付くって」、テメーの予想なんか聞いてねーんだよ・・・俺は船に乗る方法を・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：あっ！その適当なセリフ回し、てめぇまさか！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：お前、" + Fix.NAME_EIN_WOLENCE + "だろ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだが。なんで知ってるんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：「なんで知ってるんだ？」じゃねえよ！！おまえ、俺の顔見て何も思い出さねえのかよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・あー・・・ああ、ああ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・誰だっけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：なんだよそれ！！もう・・・お前マジで記憶がテキトーだな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：俺だよ、" + Fix.NAME_BILLY_RAKI + "だよ。覚えてねえか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、おお！　ビリー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラキ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハーッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・なんてヤツだ・・・コイツは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、悪い悪い。さすがに覚えてるって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お前、雰囲気が少し変わったよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オルガウェイン傭兵施設では、何かこう尖がりヘルメットみたいな雰囲気だったし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだその、尖がりヘルメットってのは。変な言い方はよしてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここにやってきたのは何でだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：理由は特にねーな。ぶらぶらと色んな所に行ってみたいだけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ、そういう所は相変わらずだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあな。いちいち理由とかめんどくせーからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい・・・ていうかお前。結局、俺の事覚えてるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そりゃ覚えているさ。オルガウェインで結構遊んでたもんな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、昔話はおいといてだな。船が出ねえってのは何かの事情があるんだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっとそのあたりの内容を聞いてみる。良いよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：別に俺は構わねえが。でもあの係員と話しても何もでねーぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあまあ、一応聴いてくる。待っててくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　数分経過後　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：う～ん・・・何だろうなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、何か分かったのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、そこのバカアイン。黙ってないで答えなさいよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。悪い悪い。まあ係員が言うには、船先のヴィンスガルデは何等かの理由によって交易を閉ざしてるみたいなんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ふうん、じゃあそもそも船が出ないのは納得が行くわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：でだ。係員が言うには、船のルートはもう無理だからって事で、別のルートを紹介された。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何て言われたと思う？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：うーん、そういうのはさすがに分からないわね。どんなルートなの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：「神秘の森」を突っ切るしかないと言ってきたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいおい、あんなフザけた所なんか通れるかっつーの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あのエリアではケガ人や行方不明者が絶えないと、よく噂になってますよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おおう、そうだよ。だから「神秘の森」って言われてるんだろーが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、どうするの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと判断が難しいけど。どうすっかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：方角は？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ヴィンスガルデ王国方面なんだし。当然、北よね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ケガ人ってのはモンスターからの襲撃か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ大体はそうみたいね。深い森の中だから、うっかり足首をケガする者も多いらしいわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。ビビった時に俺ばっかり頼りにするんじゃねーぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かってるって。そんなことしねえって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、大丈夫だろ。行ってみるとするか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：根拠もなく大丈夫とか言いやがったな。あんな危険な場所に本気で行くつもりかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、問題ない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お前が一緒に来てくれば、大丈夫だろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おー！言ってくれるじゃねえか、この野郎！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よっしゃああああ！俺に任せとけってんだ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, " 【ビリー・ラキ】が仲間になりました！", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, Fix.NAME_BILLY_RAKI, ActionEvent.HomeTownAddNewCharacter);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ！じゃ、先頭突っ切って行く所はよろしく頼んだぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ！", ActionEvent.None);

      if (One.TF.Event_Message400030)
      {
        Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_2 + " 】が更新されました！", ActionEvent.QuestUpdate);
      }
    }
  }

  public static void Message400021(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "係員：とにかく、船は出ない。他を当たってくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ここから船は出そうにないな。他を当たろう。", ActionEvent.None);
  }

  public static void Message400030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message400030 == false)
    {
      One.TF.Event_Message400030 = true;
      Message(ref m_list, ref e_list, "アイン：そういえば・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：国王からの依頼ってここに来て調査をしろって話だったよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうなの？謁見の間はアイン一人で行ったから、私は知らないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういやそうだったな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかし、こんな所まで来て一体何を探せば・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：国王様や王妃様から言われていた内容は？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん、そうだなあ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　エルミ：天の導きがあれば、自然と道は拓かれる　～～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それは市民達を送り出す時のお決まりのお言葉よね。他には？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう言われてもな。他といえばこれだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　エルミ：国内外遠征先のヴィンスガルデ王国エリアで調査して欲しい案件があるんだ　～～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それは一般的な依頼内容よね。他には無いの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、そうだなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ！ひょっとしてこれの事か！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　エルミ：ああ、沿岸沿いにある小さな港町だよ。色々な人たちが集う場所だから、何か情報が得られる事を期待している　～～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：結構ありきたりな内容よね。確かにそうなんでしょうけど・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：特にこれといった情報は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、待てよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういえば、国王じゃなくてファラ王妃が最初に何か言ってたぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　ファラ：ヴィンスガルデ王国の歴史には一つの伝承があります　～～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　ファラ：その伝承には一つのキーワードが示されています　～～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　ファラ：その名は【Obsidian Stone】　～～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：え！？何それ、全然聞いてないんだけど！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ゲッ、そんな怒るなよ。いや、何か聞き慣れないキーワードだったから、あんまり覚えてなかったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あんた本当にバカじゃない！？何でそんな大事な内容を先に言わないのよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：悪かったって。いや、でもなんかさ。それよりも国王エルミからの言葉が凄く気になったんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だから、その何だっけ・・・何とかストーンってのはあんまり関係ねえのかなと思ってたんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：やっぱり重要だったりするのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：当たり前じゃない！ObsidianStoneって言ったら古代遺産の一つなんだし！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、そうなのか・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：で？　それについて何か言ってたわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、それ以外は何も言われてない。単にこの港町コチューシェを訪れる様に言われただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ふ～ん、そうなのね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか・・・いや・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：結果的に、これで良いのかも知れないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何がよ？", ActionEvent.None);


      Message(ref m_list, ref e_list, "アイン：ここに来るまでの間、俺は遠征許可証を入手し、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：国王エルミ様からの指令を受け、ここにきている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、今ここでどうするべきなのか、悩んでいる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：きっと、この行動自体が何かの結果を生んでいるんだろう。おそらく。", ActionEvent.None);

      if (One.TF.AvailableBillyRaki)
      {
        Message(ref m_list, ref e_list, "アイン：あと、ついでにビリーと再会。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：んだそりゃぁ！俺は「ついで」なのかよ！？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ま、まあまあ。悪い悪い、ハハハ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：船は出ない・・・についてはどうなんでしょうか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：それは確かに偶然といえば偶然だな。俺もそれは不思議な感じはするんだが。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：出ないからこそ、別のルートがあるんだろう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：結果的に、俺たちは今から「神秘の森」に向かう。だろ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：それは成り行き上、そうなったってだけでしょ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ。そうなんだけどな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：さてと。じゃあ「神秘の森」に行くとするか！", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：まあ、悩んでいるというよりも、目指す方向そのものに関する設問みたいなものだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：す・・・すみません、ちょっと意味が・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：要は、Obsidian Stoneを探してるって事なのよね？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、そこはそうなんだが。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：船着き場もまだ行ってないわよね。まずヴィンスガルデ王国行きの船が出ているか見てみましょうよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、そうだな。分かった。", ActionEvent.None);
      }

      if (One.TF.AvailableBillyRaki)
      {
        Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_2 + " 】が更新されました！", ActionEvent.QuestUpdate);
      }
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：特に何もないみたいだな。他の所へ行こう。", ActionEvent.None);
    }
  }

  public static void Message400031(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：（いや、今ここに用は無いな）", ActionEvent.None);
  }

  public static void Message400040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message400040 == false)
    {
      One.TF.Event_Message400040 = true;

      Message(ref m_list, ref e_list, "アイン：（　船の出航制限　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　Obsidian Stone　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　神秘の森　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　神秘の森と言えば、気になる点があるんだが・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　考えていても仕方ないとはいえ　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　・・・　・・・　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　今のままじゃこれ以上は無理だな　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　よし、神秘の森へ向かおう　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうしたの？ボーっと突っ立って。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハ！悪い悪い！なんでもねえって！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、いざ出発！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、あの。ちょっと宜しいでしょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうかしたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：港町で少し事を済ませたい案件があるので、少し離れていても大丈夫でしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そういえば港町まで行きたいって最初依頼してた時に言ってたよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさん、今までありがとうね。またどこかで会えたら声かけしてね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。ありがとうございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ、それで・・・その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まだ何か済ませたい案件が他にもあるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ、事を済ませた後についてですが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：また、同行させてもらっても良いでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほど、そういう話か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もちろん、同行してもらうのは大歓迎だ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あっ・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：どうもありがとうございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、決まりね。アインはエオネさんから声かけがあったら、ちゃんと応対してよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、分かった！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、エオネ。また後で終わり次第、声かけしてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：わかりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.NAME_EONE_FULNEA, ActionEvent.HomeTownRemoveCharacter);

      Message(ref m_list, ref e_list, " ～エオネ・フルネアはパーティから離脱しました～", ActionEvent.MessageDisplay);

      //Message(ref m_list, ref e_list, "　パーティ画面でサブ・グループが追加されました。", ActionEvent.MessageDisplay);

      //Message(ref m_list, ref e_list, "　サブ・グループのメンバーは戦闘に参加する事はできませんが、経験値は入ります。", ActionEvent.MessageDisplay);

      //Message(ref m_list, ref e_list, "　アイテムの受け渡しなどは行えるため、メイン・グループの装備を整える事をお勧めします。 ", ActionEvent.MessageDisplay);
    }
  }

  public static void Message400050(ref List<string> m_list, ref List<ActionEvent> e_list, string food_menu)
  {
    if (One.TF.Event_Message400050 == false)
    {
      One.TF.Event_Message400050 = true;
      One.TF.AvailableSecondEssence = true;

      string dummy = string.Empty;
      One.SelectCharacter(Fix.NAME_EIN_WOLENCE).LevelUpEssenceTree(4, ref dummy);
      One.SelectCharacter(Fix.NAME_LANA_AMIRIA).LevelUpEssenceTree(4, ref dummy);
      One.SelectCharacter(Fix.NAME_BILLY_RAKI).LevelUpEssenceTree(4, ref dummy);
      One.SelectCharacter(Fix.NAME_EONE_FULNEA).LevelUpEssenceTree(4, ref dummy); // エオネは居ないが、内部的にはアップグレードしておく。

      Message(ref m_list, ref e_list, "アイン：よし、今日はもう休むとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：飯は【" + food_menu + "】を頼むとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すみません。【" + food_menu + "】をお願いできますか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "宿屋のマスター：はいよ、少々お待ちあれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "・・・しばらくして・・・", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "宿屋のマスター：おまちどうさま。どうぞ、召し上がれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとうございます。いただきます！", ActionEvent.None);

      Message(ref m_list, ref e_list, " ～　食事中にて・・・　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：しっかし、なんだな。やりにくいよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何がだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：決まってんだろ、戦闘だよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：多少はポーションで凌いでるが、正直持たねえよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そういう話か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、確かにこの感じだと継続性が保てない感じはするな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさんって聖スペルが使えたから結構重要だったわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの後方からの弓撃ちも興味深かったしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。何か打つ手はねえのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・でもエオネを呼び戻すとか、エオネの用事が済むまで待機とかはしたくないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：少しでも進めておきたいところだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ビリーはオルガウェイン傭兵訓練施設で育ったのよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ああ、まあな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：弓術に関してはどうかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あれは苦手だったな。近くで殴れないしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：魔法の方はどう？まあ傭兵施設だと聖フローラ女学院ほど充実はしていないと思うけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：炎がぶっ放せるのは面白いけどな。それ以外は興味ねーな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お前さ、格闘がとにかく好きだったよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そうだな。基本的に突っ立ってる奴にはあれが一番効いたしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：となると・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナの方は戦術は結構固まっているみたいだが、追加で何かできそうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：うーん、どうかしら。私は魔法系もスキル系も一応扱えるわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：聖フローラ女学院はたしか首席で卒業したんだったよな？色々とできそうな感じがするが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ゲッ、しゅ、首席だったのかよ！？スゲーじゃん！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でも、あれはただの飾りよ。本質的には出来る人達は他にもたくさん居たわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：で、聖スペルなんだけど、正直苦手って感じだったから、最初の講義はすっぽかしたわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：なのに、何かその行動のせいで、逆に才能アリって認められちゃったみたいで。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあラナは大概何でも出来そうなオーラを出してるからな。勘違いって訳でもないだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ともかく、聖スペルはあんまりイマジネーションが出来なかったのは確かよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：最初の設問に対してだけど、エオネさんが使っていた無心スキルなら多少のたしなみはあるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：魔法じゃないけど良いかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、助かるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほど・・・と、なるとそうか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・聖スペルかあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいおい、マジで何とかならねーのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういってもだなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：考えてばっかりかよ。おいアイン、例えば・・・そうだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：出来るかどうかは置いといてだな。お前が今から聖スペルに挑戦してみたらどうだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、聖スペルは出来るけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えええぇぇ？？？　　ビリー：はあああぁぁ？？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ウソでしょ！？え、だってあんたエスミリア草原やゴラトラム洞窟の時は一度も使わなかったじゃない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だって必要なかっただろ。そう判断したまでだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：判断したまでだ。って一言いっておけよ。わかんねーだろうが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：す、すまん・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：え、ほんとちょ、ちょっと待って。。。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、あんたもオルガウェイン傭兵訓練施設で育った口よね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。それがどうかしたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：講義は何を受けたわけ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：講義・・・その手のカテゴライズはあんまり覚えてないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：剣術とガード、後は魔法がちょっとあったぐらいで、他は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：待って、ソコを聞いてるんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ、ビリー。オルガウェイン傭兵訓練施設はいつから聖スペルを教えるようになったの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いや、俺も知らねー。講義であったのは炎、氷、闇スペルぐらいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：やっぱり、そうよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、誰かが教えてくれたって事になるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：答えなさいバカアイン。私という者がありながら、私がいない間、誰と会ってたのよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんか変な口調になってないか・・・え、ええとだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うん、誰とも会ってないぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：隠しても無駄よ。後で調査すれば分かるんだから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：誰とも会ってない。本当だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうなのかしら・・・まあ良いけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、論より証拠よね。実際にやってみせてちょうだいよ、まずはフレッシュヒール。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー行くぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アインは少し不思議な構えを見せ・・・ ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：ヒール！", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ラナのライフが幾ばくか回復した！　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだ！ッハッハッハ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ホンッッットに出来るのね！いつもの冗談だと思ってたわ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：正直意外過ぎるな。コイツが聖スペル出来るなんてマジで聞いてねーぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかしだな、これが何かの打開策になるのか？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：当たり前でしょ！！　　ビリー：ったりめーだろ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うわっ、何かそのサラウンドで一斉に俺に言わないでくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まずは聖スペルがあれば、また戦線を維持する事が出来る様になるでしょ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そうかもな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ポーション大量購入の件もこれで解消だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか。言われてみりゃそうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：言われてみりゃ、ってテメーはいつもどこ考えてんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そりゃまあ、戦闘とか戦線の事を考えてだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ同じ視点じゃねーか。ったく。テメーの喋り方と考え方。本当訓練施設の頃から変わんねーな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・そうかもな。悪い悪い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、あれだな。大体決まった感じか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネがいない間は、俺も聖スペルを少し使うようにする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナは肩慣らし程度で良い。あまり戦術は変えなくて良いが、サポート強化で、無心スキルの活用を頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ。分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ビリーはそうだな。殴れる技のバリエーションを少し増やしておいてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ。任せとけ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 エッセンス・ツリーが開放されました！ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "【 パーティメニューでエッセンスツリーを選択できるようになりました。 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "【 各キャラクターの特性に応じた魔法およびスキルを開放／強化する事が出来るようになります。 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "【 パーティメニューからキャラクターを選択し、エッセンスツリーを確認してみましょう。 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ明日からそれで行こう！ごちそうさまでした！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ご馳走様でした。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ごっそーさんっと！", ActionEvent.None);

      Message(ref m_list, ref e_list, food_menu, ActionEvent.HomeTownCallRequestFood);
      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownExecRestInn);

      Message(ref m_list, ref e_list, "【 パーティは休息を取りました】", ActionEvent.MessageDisplay);
    }
  }
  #endregion
  #region "ツァルマンの里"
  public static void Message500010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message500010 == false)
    {
      One.TF.Event_Message500010 = true;

      Message(ref m_list, ref e_list, "アイン：へえ・・・ここがツァルマンの里か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：なんだか不思議な感じがする場所ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：初めて来た所だが、何となく懐かしい感覚がするな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。あそこ見てみろよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どこだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あっちだよ。ほら、長老の家っぽい場所があるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、本当だな。おまえ本当そういうのすぐ見つけるよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ。何とやらの里とくれば長老の家で決まりだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ、そいつはそうかも知れないな。見つけてくれてサンキュー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：いきなりその長老宅に行くわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあそうだな。ここに住んでいる人達の目線もそれを望んでいるようだし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン達一行は周囲からの視線を感じている ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：ッチ・・・面倒くせえ連中だな。挨拶してこいって事か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういう事だ。というわけで、長老宅に行ってみよう。", ActionEvent.None);
    }
  }

  public static void Message500019(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：（いや、この里をもう少し探索しておこう）", ActionEvent.None);
  }

  public static void Message500020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message500020 == false)
    {
      One.TF.Event_Message500020 = true;

      Message(ref m_list, ref e_list, "アイン：よし、ここだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ごめんください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：うむ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ええと。俺の名前は", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アイン・ウォーレンス。そう聞いておる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え、何で俺の名前を！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：うむ。ファージルの国王より、仰せつかっておる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主がかならずここへ訪れるとな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え、そうなんですか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：要件を聞こうか。国王からきっての頼みじゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え、ええ。まあ、そのややこしい話なんですが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：" + Fix.AREA_VINSGARDE + "のほうへ船で渡ろうとしたんですけど、今は封鎖中みたいで。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それで、こちらの方に迂回ルートがあると聞いてやってきたんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：うむ、そういった経緯であったか、なるほど・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ふむ・・・　ふむ・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主。ファージル国王より、何か受け取ってはおらぬか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、何も受け取っていないです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ふむ。とすると、おそらくそちらの間者の方かの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　長老はまっすぐラナ・アミリアの方に眼を向けた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：わ、私？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、お前国王から何か授かっていたのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：べ、べべ、別に隠してたとか、そういうのじゃないわよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：い、いやいや・・・悪い悪い。そういうつもりで聞いたわけじゃない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：持ってないとは言わさぬぞ。ワシの目はごまかせん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：え、ええ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：確かに持っています。私が間者扱いというのはちょっとあれだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：コレです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　ラナは【法剣？？？】を長老へと差し出した　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "長老：うむ、どれ・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：うむ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：これは確かに、ファージル国王が持っていた宝剣じゃな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：しかし、あれじゃの。ObsidianStoneが無いようじゃな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：って、もう一度だけ。ObsidianStoneって言いました？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ああ、そうじゃ。何じゃ食らいついとるの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、何ていうかまあ、成り行きで気になってるんで。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：成り行き。。。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主、そのObsidianStoneについて成り行きと言うたか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、はい。何て言えばいいのか分からなくて、つい・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ホッホッホ！これはまた、面白いヤツじゃの。それは成り行きでどうにかなる代物ではないぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、そうなんだ・・・ハハハ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：気に入った。良いじゃろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主達の要件、おおよそは掴めた。ヴィンスガルデ王国へ通りたいという事じゃな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、それじゃあ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：いや、すまないがお主達をここから先へ通すわけにはいかん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え、どうしてですか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：それは言えん。これは、掟である。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうしても、って感じですか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：掟じゃからの。ここは引いてもらう以外に道はない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　長老は一呼吸おき、そして・・・　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "長老：ッゴホン。では、その代わり、お主らに・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おいジジイ！そりゃねえだろーが！？理由ぐらい言えよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：なっ、何じゃお主は！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：とりあえず引けったって、俺たちは遠路はるばるやってきたんだ！ちゃんと言えコラ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：なっ、なっ！！　ま、間違ってもお主だけは通さん！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：バ、バカ！　お前こんな所で挑発してどうすんだよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：と、とにかく！ここを通してくれないか？その掟とやらは、俺も従ってみせるからさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ええい、ならぬ！　ならぬと言ったらならぬ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：出てゆくがよい！！　もう二度と顔を見せるでないぞ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アイン達は部屋の外へ放り出されてしまった　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：な・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：追い出されちゃったわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あのジジイ。始めっから通す気がねーだろ。もったいぶりやがって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、ここはしょうがないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何がしょうがねえんだ？このまま引き下がるってのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：でも、今なんとかしようとしても、あの感じだとさすがに無理だろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃ、どうすんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、今考えてる所だが・・・。", ActionEvent.None);

      Message(ref m_list, ref e_list, "門番：あの・・・お取込み中とは思いますが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、すみません、こんな所で騒いでしまって", ActionEvent.None);

      Message(ref m_list, ref e_list, "門番：いえ、それは問題ありません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "門番：さきほど、ファージル宮殿からの使者が、アインさん宛てに連絡があるとの事です。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ファージル宮殿からの・・・使者？", ActionEvent.None);

      Message(ref m_list, ref e_list, "門番：それでは、私はこれにて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、おお。分かった。ありがとな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　しばらくした後、宮殿の使者がアインの元へやってきた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "宮殿の使者：アイン・ウォーレンス様。ファージル国王より言伝があって参りました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "宮殿の使者：【至急、ファージル宮殿へお戻りになられるように】とのことでした。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何かあったのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "宮殿の使者：お答えはできません。私の役割はここまでとなります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか。分かった。じゃあ、ここは諦めてひとまず戻るとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：使者さんよ、ありがとうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "宮殿の使者：それでは、失礼いたします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　宮殿の使者はその場から立ち去っていった　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：行ったみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうする？じゃあ、一旦戻りましょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ファージル宮殿に戻るのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。ビリーも一緒に来るか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おお！もちろんだ！このまま引き下がれるかよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：事実上、一旦は引き下がるんだけどな、ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあこの件は一旦置いといて、まずは皆でファージル宮殿に戻ろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_2 + " 】が更新されました！", ActionEvent.QuestUpdate);
    }
  }

  public static void Message500021(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：（いや、今は長老の所に行くのは止めておこう）", ActionEvent.None);
  }

  public static void Message500022(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message500022 == false)
    {
      One.TF.Event_Message500022 = true;

      Message(ref m_list, ref e_list, "アイン：あの、ごめんくださーい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：何じゃお主か。はよ帰るがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、ちょっと待ってください。用件は別にあって来たんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ふむ、申すがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この里の奥には何があるんでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：それをお主に申すわけには行かぬ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、この里には何かあるのでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：何もありはせぬ。早々に立ち去るがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何もないなら、適当に通過しても良いのですよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：それはならぬ。神聖な場所へとお主を導くわけには行かぬ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：神聖な場所が、やっぱりあるんですね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：っぐ・・・ぐむ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そこはおそらく・・・【神秘の森】と呼ばれる場所。違いますか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：何をしに来た。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーランの塔に上りました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そこから空を観察して、赤い星を見かけたんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エルミ国王からはその件については、特に示唆はされませんでしたが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これは、きっと何かの予兆。俺はそう感じたんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お願いします、【神秘の森】を探索させていただけないでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ふむ、そうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：では、早々に帰るがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうですか・・・それでは失礼いたします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ふむ、で、少し待たれよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：おーい、アデルや。ちょっとお使いを頼まれてくんれかね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：はーい。ちょっと待ってー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　部屋の奥から一人の女性が姿を現し ～～～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "？？？：やっ。お待たせ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アデルや。いつものお使いだ。【神秘の森】へ行き、どんぐり、りんご、きのこ、たけのこを取ってきてくれないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：あー、良いわよ。じゃ行ってくるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：これこれ、待たんか。節操の無さは相変わらずじゃの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ほれ、そこの者達に挨拶をしなされ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：おー、みんな！アデル・ブリガンディってんだ。はじめまして！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺はアイン。アイン・ウォーレンスだ。よろしくな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ラナ・アミリアよ。お初にお目にかかります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ビリー・ラキだ。元気よく行くぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ッホッホッホ。アデルや、それでは行ってくるがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ああ、それじゃなじっちゃん！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：それともう一つ、アデルや。その者達と共に【神秘の森】へ入ってはくれんか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ああ、もちろん良いぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っえ！？それじゃあ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主らが入るのではない。お主らが帰る所を、たまたま、アデルが同行するだけの事じゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ありがとうございます！助かります！！", ActionEvent.None);

      Message(ref m_list, ref e_list, " 【" + Fix.NAME_ADEL_BRIGANDY + "】が仲間になりました！", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, Fix.NAME_ADEL_BRIGANDY, ActionEvent.HomeTownAddNewCharacter);

      Message(ref m_list, ref e_list, "長老：礼はよい。アデルよ、では頼んだぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ああ、任せておいてよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_22 + " 】が更新されました！", ActionEvent.QuestUpdate);

    }
    else
    {
      Message(ref m_list, ref e_list, "長老：アデルや、その者達を連れて【神秘の森】へお行きなさい。", ActionEvent.None);
    }
  }

  public static void Message500023(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アデル：神秘の森へ行くのか？アタシが案内してあげるよ。みんなこっちだよ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "【神秘の森】へ入りますか？", ActionEvent.HomeTownYesNoMessageDisplay);
  }

  public static void Message500024(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message500024 == false)
    {
      One.TF.Event_Message500024 = true;

      Message(ref m_list, ref e_list, "長老：おおアデルや。お帰りなさい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ただいま、爺ちゃん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：収穫物を拾ってきたよ。ほら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　アデルは神秘の森で採取した作物を長老に納めた。 ～～～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "長老：ホッホッホ、いつもありがとうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うんー、ありがとう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ところでじゃ、お主ら、アデルと神秘の森を探索してどうじゃった？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：えっ、どうと言いますと？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：その、アデルはあまり外部の方と関わった事が無くての。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：回りの人から見て、その、アデルの事をどう思ってもらえたか心配での。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：えっ、ていうか、全然普通な感じで喋ってましたけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうね。バカアインよりは全然喋りやすかったわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ああ、そこの意味わかんねー言葉ならべるヤツよりもはるかに喋りやすかったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：みんな、ありがとう！バカアインもありがとう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・ま、まあそういう事だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アデル、神秘の森の案内は助かったぜ、ありがとうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：いやいやー、いつでも呼んでちょうだい。案内してあげるよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：こら、アデル。そんな言い方があるか。失礼でおろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：はーい。ごめんなさいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、まあまあ。そこは大丈夫ですよ、気にしなくても。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ええと、そしたら一旦失礼します。また用があったら・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お待ちくだされ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アイン・ウォーレンス殿。１つ頼まれてはくれんか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：いや、正直な所、３つ頼まれてくれまいか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい。何でしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：１つ目、お主には神秘の森に入るため、この首飾りを授けたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 " + Fix.ZHALMAN_NECKLACE + " 】を獲得しました！", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, Fix.ZHALMAN_NECKLACE, ActionEvent.GetItem);

      Message(ref m_list, ref e_list, "長老：受け取っていただけるかな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：良いんですか！？ありがたく喜んで！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ふむ、よろしい。では２つ目じゃが、", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アデルを、お主の仲間として連れていってはもらえんかの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アデルを一緒に連れて行くと？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：そうじゃ。その子はもう大きくなってはおるが、世間の事をあまりに知らなすぎるのでな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主の仲間として様々な大地を歩み、成長して欲しいと思っておるのじゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アデルや。この者と一緒に行くことはできるかの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うん、いいよー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：本当に良いのか？しばらくはここに帰ってこれなくなるかも知れないんだぞ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：いいよー。爺ちゃんにずっと会えないワケじゃないんだし、ねー爺ちゃん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：分かって言っておるのかのう・・・まったく。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：まあそういうわけじゃ。ふつつかではあるが、よろしくお頼み申す。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、じゃあアデル。今後ともよろしくな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うんー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：それで、最後の３つ目じゃが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あの・・・ひょっとして、私達は外した方が良いのでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：いいや、そういうわけではないのだ。いて頂いた方が助かる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・ふむ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アイン・ウォーレンス殿よ。とある人物を探して欲しいのじゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい。誰を探せばいいんでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：それはじゃな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：エルミ・ジョルジュという存在じゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・・・・・・・え？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主に託したい。では、頼んだぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：えっ、ちょっと待ってくださいよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：衛兵ども！こやつらは盗人じゃ！ひっ捕らえよ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "衛兵：ハハ！！ただちに！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ウワッ、マジかよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　アイン達は衛兵に囲まれた！ ～～～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "長老：こっそりとワシの壺を盗もうとしたな！この者どもを捕らえよ！！キエエエエェェ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ヤベ、皆逃げるぞ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　アイン達は一目散にその場から逃げ出した ～～～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：ふう・・・ここまでくれば大丈夫かな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：危なかったわね。あのお爺さん、本当強引よね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：好き勝手に衛兵を呼べるっつうのは強敵だよなマジ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じいちゃん、いつもあんな感じだよ。あと、衛兵も本気出してないよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なっ、そうなのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うんー。必要以上に追ってこない、ギリギリの距離感、捕まえそうで捕まえない感覚。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：全部わざとだよー。みんな慣れてる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃ・・・じゃあ、どうりで・・・なるほど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今度、いっぺんお手合わせ願いたいな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何言ってるのよ、そんなことしたら本当にお陀仏よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・悪い悪い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、アデル。俺達と一緒に来てくれ。よろしく頼む！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うんー。よろしくねー！", ActionEvent.None);
    }
  }

  public static void Message500030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message500030 == false)
    {
      One.TF.Event_Message500030 = true;
      One.AR.PartyJoin_AdelBrigandy = true;
      One.UpdateAkashicRecord();

      Message(ref m_list, ref e_list, "門番：アイン殿および御一同、お待ちください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうかしたのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "門番：長老が今、こちらにあらせられます。しばらくこの場にてお待ち頂きたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、分かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　しばらくして　～～～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "？？？：じいちゃん！　こっちでいいの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：こ、これ！　勝手に走り回ってはイカンと言うておろうが！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：アハハハ！　こっちだよねー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：コラ、待てと言うとるのに。まったく・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、どうも・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：いやはや。幼児としての年齢はとうに過ぎとると言うのに・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの、俺たちに何か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：そうじゃったな。ちと、待ってくれないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：おお、あった。これじゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　長老は一つの書状をアイン・ウォーレンスへ差し出した　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：こ・・・これは？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主がここを訪れた事、見聞を深められた事、間者達を連れておる事。その事実内容を現国王へ伝える書簡じゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなんですか。恐縮です。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：これも一つの儀式の様なものじゃ、気になされるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただし、ちょっと待ってください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺達はここに来てから日も経たない内にファージル宮殿へと戻ります。あまり実感はないのですが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：見聞を深められたとは、どの辺りを指しているんでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ふむ・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・　・・・　ふむ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、いや、何でもありません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：面白いやつじゃ。やはり、伝えておこうかの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：経過した時間が重要なのではない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：その一瞬一瞬で、耳を傾け、様々な事象をその眼に収め、どれだけ熟慮したかどうかで決まるものじゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主の場合、とても良き心と卓越した知恵を授かっておるようじゃの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：最初にこのツァルマンの里へ到着した時から見ていたが", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：他の来訪者からすると、お主は一線を画しておった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主はあの時点で既に見聞は深まっていたとワシは見ておる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いえ、とんでもありません。あの時はちょっと気になった感じがしただけです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：そういうな。ワシの眼に狂いは無いはずじゃ。例えばそうじゃな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主の横におる無礼な間者、ッホレお前さん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あぁ！？間者って俺かよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：決まっておろうが。して、ビリーと言ったかの。お前さん、この里についた時、どこを視ていたかね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そりゃまあデケー長老の家があるからな。そこを眺めていたのは確かだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ほれみろ。これが通常の他愛もない間者の視点じゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：だっ、うっせーな！気になったもんは仕方ねーだろが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：まったくこの間者は非常にけしからんわけじゃが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：うぉっほん", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アイン・ウォーレンスよ。お主はどこを視ておった？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう・・・ですね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：言っても良いんですかね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：無論じゃ。遠慮するでない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この里の全体の景色と構造、そのものかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：景色と・・・構造ですって？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、まずそこの中央のデカい家はそもそも長老の家じゃない。合ってますかね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：鋭いの。お主のいう通り、あそこはワシの家ではない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだとお！！！　おいジジぃ、マジかよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ほんに無礼であるの！間者は引っ込んどれ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ビリー、今はそういう威圧は良いから・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ったくよー。まあ分かった。ここは任せるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ごっほん。それではアイン・ウォーレンスよ、続けるがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：とすると、長老の家はどこかって話になるが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここは奥深い森の中にある里。つまり、里にいる人達は互いに信頼できる仲間みたいなものだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう考えると、それ以外の来訪者達は要監視って事になるんじゃないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なので、眼を配らせておきたいのは、信頼できる里の住人達よりも不特定の出入りする者達の監視だろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：・・・　・・・ほう・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正面ゲートは今俺達が来たルートだが、そこは門番が複数人でちゃんと見張っている。長老が自ら見張る必要はない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：とすると、俺達が入ってきた場所ではないどこかに通路があり", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その通路を誰が通るかを監視する必要はある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それは信頼のおける里の住人よりも自分の眼で監視するのが筋だろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここまで来ればあとは簡単だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今俺達がいるこの立ち位置から見える景色があり、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そしてここからは見通す事が出来ない場所が隠されている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：長老の家があるとすればソコだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺達は本来であれば、何らかの儀式を経て、その家に赴かなければいけなかったんじゃないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、そこで始めて長老からのお言葉を受け取り、見聞が深まる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうですかね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じーちゃん。ここまでお見通ーしなのは始めてだねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：うむ。見事じゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：その存在を知ろうとする心得が無い者には、何も伝えずお帰り頂くのが里の習わしではあるが", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：今回、そこにおる無礼な間者のせいでシナリオが台無しじゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：悪かったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：うおっっっっっっほん！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：とはいえ、今回の想定外の件。陣を構えられなかったワシらにも非がある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：そこでこうしてお主達の所へワシが来たという次第じゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いえ、本当に助かります。ありがとうございました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：しかし、その思考の仕方、奴にホント良く似ておるわい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：奴・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：おおおぉっ、ウォッホン！ゴホン、ゴッホン！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：ふむ。それでは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：おーじぃーちゃん！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：こら、邪魔するでない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ワタシにもちょっと喋らせてよー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ねえねえ、お姉ちゃん達って不思議な恰好してるよね！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えっ？私達の事？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：名前。ねえ、名前は何て言うの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私はラナ・アミリア。よろしく。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺はビリー・ラキってんだ！よろしくな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：こら！アデル！勝手に名前を聞くものではないとあれほど言うたじゃろ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：えーーー、良いじゃない。掟には記されてないんだし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：な、何という事じゃ。掟をそういう類のものとして扱うとは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：で、アイン・ウォーレンスさん、ですよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだ。何か用か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アタシね。この広い世界へ飛び出そーと思ってるの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：なので！アタシも連れて行って欲しーな☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：これ、待たんか。まったく・・・節操が無い行動と発言ばかりしおって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じーちゃんの話は聞き飽きた！私、行くもん☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょ・・・長老どの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：すまぬ、アイン・ウォーレンス殿よ。これはしつけが出来なかったワシの問題じゃ。。。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、いえ。おそらく、何か本来の目的があるんですよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：おお、そうじゃ。ッゴホン、では改めて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アイン・ウォーレンスよ。お主に一つ頼みたい事がある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主に渡したその書状を収めていただくのと同時に", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：貴君らの今後行く末を見守るため、因果律を見定める調停者を一人、お主に同行させてもらいたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アデル・ブリガンディよ。今ここにお主を調停者として命ずる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：さあ、こちらへ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：はーーーい！", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：『はい』は短く丁寧にと言うとろうが。ほれ、こちらで挨拶せい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じゃ、よろしくね、アイン・ウォーレンスさん☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：アデルよ。それだけじゃなかろう。きちんと言うのじゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ハイハイ。じゃあ、このぐらいにしてっと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アデル・ブリガンディは明朗な表情と真っすぐな視線をアインへ向けた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アデル：世界の理とは、現世に在らず、具象にあらず、抽象にあらず", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：過去　現在　未来　永劫の時の中", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：常に変化し、故に、常に不変である事を知るであろう", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：道（どう）を進む者、拒む者、見据える者", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：全ての生命へとこの言葉を授けよう", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：我は調停者　アデル・ブリガンディ", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アイン・ウォーレンスよ、行く末を見守ろうぞ", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アデル・ブリガンディはゆっくりと眼を閉じた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ハーイ、以上だヨー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：だヨー☆　は余計じゃ。せっかくの言霊を台無しにするでない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何かこう・・・洗われた感じがするな。不思議な感じですね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：掟に示される内容は、古くからの知が凝縮されておる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：受け取っていただければ幸いじゃ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "長老：お主とその間者達にツァルマンの導きがあらんことを。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとうございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、アデルもまずは一緒にファージル宮殿に来てくれ。よろしく頼む！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アハハ、いいよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと、ずっとそこで待ってくれているエオネも、入ってもらって良いか？頼む！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あっ、分かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさん、いつの間にか居たのね。ちょっとビックリしちゃったけど、よろしくね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい、またよろしくお願いします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じゃあ、ラナさん、エオネさん、アインさん、よろしくお願いします！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、よろしくな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：よろしくお願いしますね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：よろしくお願いします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・あれ、俺は？", ActionEvent.None);

      Message(ref m_list, ref e_list, " 【アデル・ブリガンディ】と【エオネ・フルネア】が仲間になりました！", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, Fix.NAME_EONE_FULNEA, ActionEvent.HomeTownUpdateCharacter);

      Message(ref m_list, ref e_list, Fix.NAME_ADEL_BRIGANDY, ActionEvent.HomeTownAddNewCharacter);

      Message(ref m_list, ref e_list, "　パーティ画面でサブ・グループが追加されました。", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "　サブ・グループのメンバーは戦闘に参加する事はできませんが、経験値は入ります。", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "　また、サブ・グループメンバーは戦闘中のメンバが倒れた場合、入れ替わる事が出来ます。", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "　メイン・グループと同じように装備を整えておく事をお勧めします。 ", ActionEvent.MessageDisplay);

      // Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_1 + " 】を達成しました！", ActionEvent.QuestComplete);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあファージル宮殿へ向かうとしよう。", ActionEvent.None);
    }
  }
  #endregion

  #region "ゴルトラム洞窟"
  public static void Message600010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, Fix.GORATRUM_Event_1_O, ActionEvent.UpdateUnknownTile);
  }

  public static void Message600015(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600001 == false)
    {
      One.TF.Event_Message600001 = true;

      Message(ref m_list, ref e_list, "アイン：おっ、看板があるな。どれどれ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　本エリア奥にて凶暴な生物が発生。全面的に通路を封鎖する。　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：穏やかな内容じゃないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今まで通ってきた道でも、モンスターなら普通に出現してるけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あの・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ぁ・・・いえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんか気になる事があれば、どしどし言ってくれ。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、バカアインは変な誘導しないでくれる？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさん、そこのバカは放っておいてくださいね。無視して良いですから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ハ、ハイ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあモンスターの位置は把握出来てないんだし、慎重に進んだ方がよさそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ慎重に進めるとするか、了解！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　本エリア奥にて凶暴な生物が発生。全面的に通路を封鎖する。　』", ActionEvent.None);
    }
  }

  public static void Message600020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600010 == false)
    {
      One.TF.Event_Message600010 = true;
      if (One.TF.Event_Message600020 == false)
      {
        Message(ref m_list, ref e_list, "アイン：ん、扉みたいだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：この扉、鍵がかかってるみたいね。封鎖っていうのはこの事かしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：封鎖っていうからには、多分そうなのかもな。", ActionEvent.None);

        if (One.TF.FindBackPackItem(Fix.ITEM_COPPER_KEY))
        {
          One.TF.FieldObject_Goratrum_00001 = true;

          Message(ref m_list, ref e_list, "ラナ：そういえば、さっき入手していた銅製の鍵は使えないのかしら？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：なるほど、さっそくで悪いがちょっと開錠を頼めるか？", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：任せておいて。", ActionEvent.None);

          Message(ref m_list, ref e_list, "（ カッ・・・　・・・　・・・　ッカチ！）", ActionEvent.None);

          Message(ref m_list, ref e_list, Fix.GORATRUM_CopperDoor_1_O, ActionEvent.RemoveFieldObject);

          Message(ref m_list, ref e_list, "ラナ：開いたわよ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：サンキュー。じゃあ先に進むぞ！", ActionEvent.None);
        }
        else
        {
          Message(ref m_list, ref e_list, "ラナ：どこかしっくり来ないわけ？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：いや、何でもない。ここはひとまず止めて別の通路を探そう。", ActionEvent.None);
        }
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：ん、扉みたいだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：この扉もさっきと同じね。鍵がかかってるみたいだわ。", ActionEvent.None);

        if (One.TF.FindBackPackItem(Fix.ITEM_COPPER_KEY))
        {
          One.TF.FieldObject_Goratrum_00001 = true;

          Message(ref m_list, ref e_list, "アイン：そういや、さっき入手した銅製の鍵が役に立ちそうだな。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ラナ。さっそくで悪いがちょっと開錠を頼めるか？", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：任せておいて。", ActionEvent.None);

          Message(ref m_list, ref e_list, "（ カッ・・・　・・・　・・・　ッカチ！）", ActionEvent.None);

          Message(ref m_list, ref e_list, Fix.GORATRUM_CopperDoor_1_O, ActionEvent.RemoveFieldObject);

          Message(ref m_list, ref e_list, "ラナ：開いたわよ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：サンキュー。じゃあ先に進むぞ！", ActionEvent.None);
        }
        else
        {
          Message(ref m_list, ref e_list, "アイン：ここはひとまず止めて別の通路を探そう。", ActionEvent.None);
        }
      }
    }
    else
    {
      if (One.TF.FindBackPackItem(Fix.ITEM_COPPER_KEY))
      {
        One.TF.FieldObject_Goratrum_00001 = true;

        Message(ref m_list, ref e_list, "アイン：よし、じゃあラナ。開錠を頼む。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：任せておいて。", ActionEvent.None);

        Message(ref m_list, ref e_list, "（ カッ・・・　・・・　・・・　ッカチ！）", ActionEvent.None);

        Message(ref m_list, ref e_list, Fix.GORATRUM_CopperDoor_1_O, ActionEvent.RemoveFieldObject);

        Message(ref m_list, ref e_list, "ラナ：開いたわよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：サンキュー。じゃあ先に進むぞ！", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：鍵がかかってるな。他を当たろう。", ActionEvent.None);
      }
    }
  }

  public static void Message600030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600020 == false)
    {
      One.TF.Event_Message600020 = true;
      if (One.TF.Event_Message600010 == false)
      {
        Message(ref m_list, ref e_list, "アイン：ん、扉みたいだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：この扉、鍵がかかってるみたいね。封鎖っていうのはこの事かしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：封鎖っていうからには、多分そうなのかもな。", ActionEvent.None);

        if (One.TF.FindBackPackItem(Fix.ITEM_COPPER_KEY))
        {
          if (One.TF.Event_Message600110 == false)
          {
            One.TF.Event_Message600110 = true;
          }
          Message(ref m_list, ref e_list, "ラナ：そういえば、さっき入手していた銅製の鍵は使えないのかしら？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：なるほど、さっそくで悪いがちょっと開錠を頼めるか？", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：任せておいて。", ActionEvent.None);

          Message(ref m_list, ref e_list, "（ カッ・・・　ッカリカリ・・・　ッカリ・・・　）", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：駄目ね。鍵穴の方がだいぶ破損しているみたい。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：この扉の構造上、向こう側からバカアインが適当に蹴ってくれれば開くと思うんだけど。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：こっちからじゃ開けられないって事か。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：分かった。他をあたろう。", ActionEvent.None);
        }
        else
        {
          Message(ref m_list, ref e_list, "ラナ：どこかしっくり来ないわけ？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：いや、何でもない。ここはひとまず止めて別の通路を探そう。", ActionEvent.None);
        }
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：ん、扉みたいだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：この扉もさっきと同じね。鍵がかかってるみたいだわ。", ActionEvent.None);

        if (One.TF.FindBackPackItem(Fix.ITEM_COPPER_KEY))
        {
          if (One.TF.Event_Message600110 == false)
          {
            One.TF.Event_Message600110 = true;
            Message(ref m_list, ref e_list, "ラナ：そういえば、さっき入手していた銅製の鍵は使えないのかしら？", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：なるほど、さっそくで悪いがちょっと開錠を頼めるか？", ActionEvent.None);

            Message(ref m_list, ref e_list, "ラナ：任せておいて。", ActionEvent.None);

            Message(ref m_list, ref e_list, "（ カッ・・・　ッカリカリ・・・　ッカリ・・・　）", ActionEvent.None);

            Message(ref m_list, ref e_list, "ラナ：駄目ね。鍵穴の方がだいぶ破損しているみたい。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ラナ：この扉の構造上、向こう側からバカアインが適当に蹴ってくれれば開くと思うんだけど。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：こっちからじゃ開けられないって事か。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：分かった。他をあたろう。", ActionEvent.None);
          }
          else
          {
            Message(ref m_list, ref e_list, "アイン：こっちからじゃ開けられないな。他を当たろう。", ActionEvent.None);
          }
        }
        else
        {
          Message(ref m_list, ref e_list, "アイン：ここはひとまず止めて別の通路を探そう。", ActionEvent.None);
        }
      }
    }
    else
    {
      if (One.TF.FindBackPackItem(Fix.ITEM_COPPER_KEY))
      {
        if (One.TF.Event_Message600110 == false)
        {
          One.TF.Event_Message600110 = true;
          Message(ref m_list, ref e_list, "ラナ：そういえば、さっき入手していた銅製の鍵は使えないのかしら？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：なるほど、さっそくで悪いがちょっと開錠を頼めるか？", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：任せておいて。", ActionEvent.None);

          Message(ref m_list, ref e_list, "（ カッ・・・　ッカリカリ・・・　ッカリ・・・　）", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：駄目ね。鍵穴の方がだいぶ破損しているみたい。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：この扉の構造上、向こう側からバカアインが適当に蹴ってくれれば開くと思うんだけど。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：こっちからじゃ開けられないって事か。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：分かった。他をあたろう。", ActionEvent.None);
        }
        else
        {
          Message(ref m_list, ref e_list, "アイン：こっちからじゃ開けられないな。他を当たろう。", ActionEvent.None);
        }
      }
      else
      {
        if (One.TF.Event_Message600110)
        {
          Message(ref m_list, ref e_list, "アイン：こっちからじゃ開けられないな。他を当たろう。", ActionEvent.None);
        }
        else
        {
          Message(ref m_list, ref e_list, "アイン：鍵がかかってるな。他を当たろう。", ActionEvent.None);
        }
      }
    }
  }

  public static void Message600040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600040 == false)
    {
      One.TF.Event_Message600040 = true;

      Message(ref m_list, ref e_list, "アイン：おっ、これは何か使えそうなアイテムだな。", ActionEvent.None);

      if (One.TF.Event_Message600030)
      {
        Message(ref m_list, ref e_list, "ラナ：結構しっかりした素材で出来てるわね。さっきの穴があった場所で上手く使えば、渡れるんじゃないかしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：っしゃ、早速使ってみるとするか！　さっきの場所に行ってみるぞ。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：結構しっかりした素材で出来てるわね。設置個所を誤らなければ、遠く離れた所へ渡れるかも知れないわね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：遠く離れた地点か。ちょっと探してみるとするか。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "エオネ：あ・・・そ、その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうした？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：い、いえ・・・えっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何かおかしな点があったら教えてね。私も分かってない事が沢山あるから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、そうではないんです。大丈夫です。ただ・・・", ActionEvent.None);

      if (One.TF.Event_Message600030)
      {
        Message(ref m_list, ref e_list, "エオネ：その穴の場所で使うのでしたら、設置は私に任せてもらっても良いでしょうか？", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "エオネ：使う場面がありましたら、設置は私に任せてもらっても良いでしょうか？", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "アイン：おお、マジか！設置してもらえるのは助かるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、でも慎重に・・・やりますので・・・ちょっと時間かかりますが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：こんな道具使った事ないから本当助かるわ。その時は、お願いしますね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、ありがとうございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、続けて探索開始と行きますか！", ActionEvent.None);
    }
  }

  public static void Message600050(ref List<string> m_list, ref List<ActionEvent> e_list, string number)
  {
    One.TF.Event_Message600050 = true;

    Message(ref m_list, ref e_list, "アイン：ゲッ！！足元が！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：オワアアアアァァァ～～～・・・　（・・・・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, number, ActionEvent.DungeonGotoDownstair);
  }

  public static void Message600060(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600060 == false)
    {
      One.TF.Event_Message600060 = true;

      Message(ref m_list, ref e_list, "アイン：イデ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッツツツ・・・痛えなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みんな大丈夫か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私は大丈夫よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：特には・・・。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うっかり落ちてしまったな・・・次からはもう少し気を付けて探索するか・・・", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：イデ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッツツツ。またしても・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みんな大丈夫か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私は大丈夫よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：少しは気を付けるとするか・・・", ActionEvent.None);
    }
  }

  public static void Message600070(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600070 == false)
    {
      GoratrumCrossHoleFirst(ref m_list, ref e_list, Fix.Direction.Bottom);
    }
    else
    {
      GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Bottom);
    }
  }

  public static void Message600080(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600070 == false)
    {
      GoratrumCrossHoleFirst(ref m_list, ref e_list, Fix.Direction.Top);
    }
    else
    {
      GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Top);
    }
  }

  public static void Message600090(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600070 == false)
    {
      GoratrumCrossHoleFirst(ref m_list, ref e_list, Fix.Direction.Bottom);
    }
    else
    {
      GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Bottom);
    }
  }

  public static void Message600100(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600070 == false)
    {
      GoratrumCrossHoleFirst(ref m_list, ref e_list, Fix.Direction.Top);
    }
    else
    {
      GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Top);
    }
  }

  public static void Message600110(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600070 == false)
    {
      GoratrumCrossHoleFirst(ref m_list, ref e_list, Fix.Direction.Bottom);
    }
    else
    {
      GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Bottom);
    }
  }

  public static void Message600120(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600070 == false)
    {
      GoratrumCrossHoleFirst(ref m_list, ref e_list, Fix.Direction.Top);
    }
    else
    {
      GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Top);
    }
  }

  public static void Message600130(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Bottom);
  }

  public static void Message600140(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Top);
  }

  public static void Message600150(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Right);
  }

  public static void Message600160(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    GoratrumCrossHole(ref m_list, ref e_list, Fix.Direction.Left);
  }

  public static void GoratrumCrossHoleFirst(ref List<string> m_list, ref List<ActionEvent> e_list, Fix.Direction direction)
  {
    One.TF.Event_Message600070 = true;

    Message(ref m_list, ref e_list, "アイン：ココだな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：では、設置しますね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、すまねえが頼む。", ActionEvent.None);

    Message(ref m_list, ref e_list, "～ エオネは足元の床を入念に調べ、綱渡りロープを固定し始めた ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "エオネ：できました。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ、あとは・・・ちょっと・・・すみません・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ん？なんだ？？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：向こう側に投げてその先端のフックをひっかけるのよね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：え、えぇ・・・それで・・・えぇと・・・。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：バカアインがそこで突っ立って邪魔だから、どいてって事よ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マジかよ。悪い悪い。じゃあ、場所を空けるんで、頼む。", ActionEvent.None);

    Message(ref m_list, ref e_list, "～ エオネは向こう側の床に向かって綱渡りロープの先端を投げた ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "（ ッヒュ・・・　・・・　・・・　ッカ！）", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：出来ました。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：な・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：うまいわね。正直驚いたわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：い、いえ・・・全然・・・なので・・・。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、本当助かったぜ。ありがとな！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：じゃ、早速わたってみましょ♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：っしゃ、行ってみるぜ！", ActionEvent.None);

    if (direction == Fix.Direction.Top)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
    }
    else if (direction == Fix.Direction.Left)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveLeft);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveLeft);
    }
    else if (direction == Fix.Direction.Right)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveRight);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveRight);
    }
    else if (direction == Fix.Direction.Bottom)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveBottom);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveBottom);
    }

    Message(ref m_list, ref e_list, "アイン：オーケー、渡れたみたいだな。みんなも無事か？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：大丈夫よ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、じゃあ次の探索へと進むとするか！", ActionEvent.None);
  }

  public static void GoratrumCrossHole(ref List<string> m_list, ref List<ActionEvent> e_list, Fix.Direction direction)
  {
    Message(ref m_list, ref e_list, "アイン：よし、渡るか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネ、よろしく頼む。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ ッヒュ・・・　・・・　・・・　ッカ！）", ActionEvent.None);

    if (direction == Fix.Direction.Top)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
    }
    else if (direction == Fix.Direction.Left)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveLeft);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveLeft);
    }
    else if (direction == Fix.Direction.Right)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveRight);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveRight);
    }
    else if (direction == Fix.Direction.Bottom)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveBottom);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveBottom);
    }

    Message(ref m_list, ref e_list, "アイン：よし、行こう。", ActionEvent.None);
  }

  public static void Message600170(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600080 == false)
    {
      One.TF.Event_Message600080 = true;

      Message(ref m_list, ref e_list, "アイン：おっ、看板だな。ええと、なになに・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　大きな断裂が発生。足元注意！！　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうやらここは渡らない方が良さそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：例の綱渡りロープは届きそうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ううん、どうかしら・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：えっ・・・っと・・・届かないと思います・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここは、止めておくか。他をあたろう。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　大きな断裂が発生。足元注意！！　』", ActionEvent.None);
    }
  }

  public static void Message600180(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600090 == false)
    {
      One.TF.Event_Message600090 = true;

      Message(ref m_list, ref e_list, "アイン：ここで看板だな。どれ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　聖堂へと向かい、地を経て、道を拓かん　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　っ　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうかしたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そこまで考える必要はねえか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：行こう、こいつは多分そんなに気にしなくて良い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：行こうってどこを探索するつもりなのよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：最初の地点だろう。道なりに行けって事だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：よく分かんないけど、行き先は分かったって事かしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫だ。任せておけ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　聖堂へと向かい、地を経て、道を拓かん　』", ActionEvent.None);
    }
  }

  public static void Message600190(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600100 == false)
    {
      One.TF.Event_Message600100 = true;
      Message(ref m_list, ref e_list, "アイン：おっと、扉だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：鍵穴は全くないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・っ・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：きっと、こっちからは開かないんだろう。他の箇所を探索しよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：なんでそう言い切れるわけ？", ActionEvent.None);

      if (One.TF.Event_Message600090)
      {
        Message(ref m_list, ref e_list, "アイン：さっき見た看板の通りだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：もう少し解説が欲しい所だけど。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：さっきの看板には【聖堂】と書かれていただろ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で、俺たちはまだその【聖堂】らしき場所には辿り着いていない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：【聖堂】を探して【地】を経てからだろうな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：というかココはそこまで重要な所じゃないのは確かだけどな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：微妙にベクトルが違うんだけど、まあバカアインらしい解釈ね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ここは多分良い。一旦戻ろう。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：さっきの看板。見てはいないがおそらくこの扉に関する内容が書かれているんだろう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：もう少し解説が欲しい所だけど。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ここは行き止まりって事さ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ここから先に行くには別のルートを迂回する必要がある。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：おそらく最初の地点辺りなんじゃないかな。ちょっと予想的ではあるが。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：というかココはそこまで重要な所じゃないのは確かだけどな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：微妙にベクトルが違うんだけど、まあバカアインらしい解釈ね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ここは多分良い。一旦戻ろう。", ActionEvent.None);
      }
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：この扉は開かないみたいだ。他をあたろう。", ActionEvent.None);
    }
  }

  public static void Message600200(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よっしゃ、鍵をゲットだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：これを使えば、鍵がかかった扉を開ける事が出来るかもしれないわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：さっそく使いに行ってみるとするか！", ActionEvent.None);
  }

  public static void Message600210(ref List<string> m_list, ref List<ActionEvent> e_list, int number)
  {
    if (One.TF.Event_Message600120 == false)
    {
      One.TF.Event_Message600120 = true;
      Message(ref m_list, ref e_list, "アイン：・・・待て。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうしたのよ、突然？", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ アインは注意深く周辺を見回した ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "2", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほどな。ココが聖堂か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・ッ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：なんでそう言い切れるのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まず、そこの看板を見てみよう。", ActionEvent.None);

      if (number == 0)
      {
        Message(ref m_list, ref e_list, "1", ActionEvent.MoveRight);

        Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
      }
      else if (number == 1)
      {
        Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
      }
      else if (number == 2)
      {
        Message(ref m_list, ref e_list, "1", ActionEvent.MoveLeft);

        Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
      }

      Message(ref m_list, ref e_list, "『　満たされるは精神と英知。語り継ぎし者よ、安らぎと平穏を。　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ビンゴの様だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どの辺りがビンゴなのよ？ちゃんと説明してちょうだい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：部屋に２つ穴が開いているだろう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、看板のすぐ後ろにあるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：きっと元々は何かが祀られていたんじゃないのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そう・・・なのかしら。ちょっと分かりにくいけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ調べようがないからな。特に気にしなくてもいい所だが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、若干気になるエッセンスはあるんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何がよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・いや、いいか。この時点だとどうにも分からない感じはする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：で、どうするわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの２つ穴。上手く降りられるかどうか、少し調べてみよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);
    }
  }

  public static void Message600220(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "『　満たされるは精神と英知。語り継ぎし者よ、安らぎと平穏を。　』", ActionEvent.None);
  }

  public static void Message600230(ref List<string> m_list, ref List<ActionEvent> e_list, int number)
  {
    One.TF.Event_Message600130 = true;

    if (One.TF.Event_Message600140 == false)
    {
      One.TF.Event_Message600140 = true;
      Message(ref m_list, ref e_list, "アイン：ちょっと、深さを見てみるか・・・どれどれ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：行けそうだな。二人とも準備はいいか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はっ、はい・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：特に問題ないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあちょっと降りるぞ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：二人とも準備はいいか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。　　　ラナ：いいわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあ降りるぞ。", ActionEvent.None);
    }

    if (number == 0)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
    }
    else if (number == 1)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveRight);
    }
    else if (number == 2)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveLeft);
    }
    else if (number == 3)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveBottom);
    }

    Message(ref m_list, ref e_list, "12", ActionEvent.DungeonGotoDownstair);
  }

  public static void Message600240(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600150 == false)
    {
      One.TF.Event_Message600150 = true;
      Message(ref m_list, ref e_list, "アイン：よっと。無事に着地っと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：２人とも大丈夫か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：狭い通路だな・・・元々今までも狭かったが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、このまま進めてみるとするか。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：着地っと。２人とも大丈夫か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。　　　ラナ：ええ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー。このまま進めよう。", ActionEvent.None);
    }
  }

  public static void Message600250(ref List<string> m_list, ref List<ActionEvent> e_list, int number, string event_number)
  {
    One.TF.Event_Message600130 = true;

    if (One.TF.Event_Message600140 == false)
    {
      One.TF.Event_Message600140 = true;

      Message(ref m_list, ref e_list, "アイン：ちょっと、深さを見てみるか・・・どれどれ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：行けそうだな。二人とも準備はいいか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：えっ、ええ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：特に問題ないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあちょっと降りるぞ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：二人とも準備はいいか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ。　　ラナ：いいわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあ降りるぞ。", ActionEvent.None);
    }

    if (number == 0)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
    }
    else if (number == 1)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveRight);
    }
    else if (number == 2)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveLeft);
    }
    else if (number == 3)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveBottom);
    }

    Message(ref m_list, ref e_list, event_number, ActionEvent.DungeonGotoDownstair);
  }

  public static void Message600260(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600140 == false)
    {
      One.TF.Event_Message600140 = true;
      Message(ref m_list, ref e_list, "アイン：ここも深くはない。行けそうだな。二人とも準備はいいか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：えっ、ええ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：特に問題ないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあちょっと降りるぞ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：二人とも準備はいいか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ。　　ラナ：いいわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあ降りるぞ。", ActionEvent.None);
    }
    Message(ref m_list, ref e_list, "1", ActionEvent.MoveBottom);

    Message(ref m_list, ref e_list, "14", ActionEvent.DungeonGotoDownstair);
  }

  public static void Message600270(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.FieldObject_Goratrum_00002 = true;

    Message(ref m_list, ref e_list, "アイン：ラナ、この扉はどうだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：見せてみて。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：・・・特に仕掛けはないみたい。こちらから押せば普通に開くわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：っしゃ。じゃあ、この扉は開けておくぜ。", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.GORATRUM_CopperDoor_3_O, ActionEvent.RemoveFieldObject);
  }

  public static void Message600280(ref List<string> m_list, ref List<ActionEvent> e_list, int number)
  {
    One.TF.Event_Message600160 = true;
    Message(ref m_list, ref e_list, "アイン：ここも降りれそうな箇所だな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どうしたのよ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、何でもねえ。おそらく、大丈夫だろう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ちょっと降りてみるぞ。二人とも良いか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：いつでも良いわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：オーケー。じゃあ行くぞ。", ActionEvent.None);

    if (number == 0)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
    }
    else if (number == 1)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveRight);
    }
    else if (number == 2)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveLeft);
    }
    else if (number == 3)
    {
      Message(ref m_list, ref e_list, "1", ActionEvent.MoveBottom);
    }

    Message(ref m_list, ref e_list, "15", ActionEvent.DungeonGotoDownstair);
  }

  public static void Message600290(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600170 == false)
    {
      One.TF.Event_Message600170 = true;
      Message(ref m_list, ref e_list, "アイン：よっと。無事に着地っと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：２人とも大丈夫か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、このまま進めてみるとするか。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：着地っと。２人とも大丈夫か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。　　　ラナ：ええ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー。このまま進めよう。", ActionEvent.None);
    }
  }

  public static void Message600300(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600180 == false)
    {
      One.TF.Event_Message600180 = true;
      One.TF.AvailablePotentialGauge = true;
      One.TF.AvailableArchetype_EinWolence = true;
      One.TF.PotentialEnergy = 0;

      Message(ref m_list, ref e_list, Fix.GORATRUM_2_Event_1_O, ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：こ、ここは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうしたのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんでも、ねえ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そこに、石が設置されているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えっ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと待っててくれ。調査してくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えっ、ちょっと？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);

      Message(ref m_list, ref e_list, "アイン：これは・・・", ActionEvent.None);

      Inscribe_MatrixDragon_X(ref m_list, ref e_list);

      Message(ref m_list, ref e_list, Fix.GORATRUM_2_ObsidianPortal_1_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.ReturnToNormal);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっとそこのバカアイン？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何ボサっと突っ立ってるのよ？どうかしたわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：い、いや・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：汗を・・・だいぶ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何でもない。気のせいだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それはそうと、何か気になる物でもあったの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ！　とんでもない物をゲットしたぞ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何を見せているわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺の手元をよく見てくれ。石があるだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは、ラナとエオネに向けて、手を拡げて見せた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：っえ・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・あの・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは自分の手元に目をやり・・・ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：なっ、無い！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジかよ？　正直な所、ラナとエオネはあの石を見なかったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：正直な所、私は見てないわよ。何の事かさっぱり。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、お前もか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：す、すみませんが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あんたが勝手に一人で何もない所にフラフラっと寄って行ったのよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ、それで・・・そのまま・・・動かなくて・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハーッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すまないが、次へ進めよう。これは無かった事にしてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあいいけど。ホント、大丈夫なのかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、大丈夫だ。さて、次へ向かうとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　アイン・ウォーレンスが【元核】を使えるようになりました。", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "　【元核】はポテンシャル・ゲージが溜まる事で使用可能となります。", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "　ポテンシャル・ゲージは、アクションコマンドを使っていくことで溜まります。 ", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "　ポテンシャル・ゲージが溜まったら【元核】を使ってみましょう。 ", ActionEvent.MessageDisplay);

    }
  }

  public static void Message600310(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600190 == false)
    {
      One.TF.Event_Message600190 = true;

      Message(ref m_list, ref e_list, Fix.GORATRUM_2_Event_2_O, ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：なるほど・・・コイツは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうしたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ＧＯＡＡＨＨＨＨＨ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：キャッ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あぶねえ、ちょっと一旦退くぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "1", ActionEvent.MoveRight);

      Message(ref m_list, ref e_list, "アイン：さて・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：見た感じ、巨大な砲台って感じのモンスターだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナは、今まで通りのスタイルで戦闘に挑んでくれ。ダメージは普通通り当たるだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネも、基本的にはこれまで通り、聖魔法による後方支援を頼んだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それから、敵へ影響を与える効果もおそらく大丈夫だ。余力があれば頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、ピンチな時は全員で徹底して防御も忘れないでくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：他は特に気にする事はないだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし。じゃ行くとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・あの・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうした？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ・・・その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：勝てる見込みって・・・あるんでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何でだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：え・・・ええっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そこのバカアインにそういう話しても無駄よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ・・・そうなんですか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：バカアイン、もう少し補足を付けてよね。エオネさんが不安がってるじゃない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：わ、悪い悪い・・・ええとだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、大技はあるかもしれないが、それまでって事だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：深く詮索する必要はない。順当にやれば良いって事さ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・ッ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさん、ごめんなさい。後でゆっくり説明してもらうから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ハ、ハイ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ準備が出来次第突撃だ。行くぜ！", ActionEvent.None);
    }
  }

  public static void Message600320(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "？？？：ＳＰＡＡＡＡＡＫ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ラナ、エオネ。準備はいいか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：いつでも良いわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：っしゃ、行くぜ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.MAGICAL_HAIL_GUN, ActionEvent.EncountBoss);

  }

  public static void Message600330(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message600200 == false)
    {
      One.TF.Event_Message600200 = true;

      Message(ref m_list, ref e_list, "？？？：ＡＡＡＡＡ！！ＲＲＲＡＡＲＡ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、まだ動くのか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ＧＡ・・・ＧＧＩ・・・ＰＰＰＳＳＳＨＨＨＵ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：と、止まったんじゃないかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：コアの駆動部分が破壊された以上、もう動けないはずです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：順当とはいえ、ちょっと危なかったな・・・予想以上だった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ見て。向こう側にまだ通路があるわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、行ってみよう。", ActionEvent.None);
    }
  }

  public static void Message600340(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.FieldObject_Goratrum_00003 = true;

    Message(ref m_list, ref e_list, "アイン：ラナ、この扉についてチェック頼む。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ええ、良いわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：・・・そうね。仕掛けはないみたい。こちらからなら普通に開くわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：っしゃ。じゃあ、開けておくぜ。", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.GORATRUM_CopperDoor_2_O, ActionEvent.RemoveFieldObject);
  }
  #endregion

  #region "ファージル宮殿"
  public static void Message700010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message700010 == false)
    {
      One.TF.Event_Message700010 = true;

      Message(ref m_list, ref e_list, "アイン：よし、着いたみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、早速ファージル宮殿へ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと待って。宮殿行く前に少し休憩がしたいんだけど、良いかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、もちろんだ。じゃあ、今日はハンナ叔母さんの宿屋で一泊するか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：皆も良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺は良いぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：いいよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあまずは宿屋へ行こう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　ハンナの宿屋にて　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：っしゃ、ごちそうさまでした！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：これ、すごーい美味しかったねー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：アッハハハ、気に入ってもらえた様で何よりだね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：バッチャン、これマジでウメーよ！感動した！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：欲しけりゃいくらでも作ってあげるよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・ありがとうございました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：ああ、また寄ってくんな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：叔母さん、部屋は幾つ空いてますか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：人数分だけちゃんと取ってあるよ。心配無用さ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：いつも助かります、ありがとうございます♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ皆。明日もよろしく頼む。おつかれさん！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：あ、ちょっとアイン。アンタは少しだけこちらへ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あっと、はい。何でしょう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン、宿泊部屋にて　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（さてと・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownBlackOut);

      if (One.AR.InscribeObsidianStone_1 == false || One.AR.InscribeObsidianStone_2 == false)
      {
        Message(ref m_list, ref e_list, "（　何か重要な事を忘れている気がする。　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　何だろう・・・思い出せない。　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　この後、国王の所へ赴き　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　そして・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　駄目だ。どうにも考えがまとまらない　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　この消失したままで進めたとしても、きっと・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　俺は一体どうすべきだったんだろうか　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　今となっては、もう分からない　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　今・・・今とは一体・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・）", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　THE　END　～　（未来の欠落）", ActionEvent.None);

        Message(ref m_list, ref e_list, "", ActionEvent.DungeonBadEnd);
      }
      else
      {
        Message(ref m_list, ref e_list, "（　国王エルミ・ジョルジュ　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　ラナに託されていた宝剣　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　Obsidian Stone　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　違和感というよりは　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　一貫した何かを感じる　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　国王は俺達に何を依頼しているのか　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　分からない・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　あのObsidianStoneについては、とにかく辻褄が合わない　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　いや、辻褄という表現自体も整合性が取れないか　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　色々とおかしな点が多い　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　ただ、この”おかしな点”という感覚そのものが　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　明らかに視点がズレているから、とも思える　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　ツァルマンの里から託された書状は極めて一般的な内容だった。　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　わざわざ書状として渡す様な代物ではない気がする　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　いや、というか、元々あの長老は国王と接点が合ったような口ぶりだった　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　考え方の原点となる軸が未だに定まらない　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　国王と何を話すべきだろう　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　決めておかないとな・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "", ActionEvent.ReturnToNormal);

        Message(ref m_list, ref e_list, "", ActionEvent.HomeTownExecRestInn);

        Message(ref m_list, ref e_list, "【 パーティは休息を取りました】", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アイン：さて、何すっかな。", ActionEvent.LastMessage);
      }
    }
  }

  public static void Message700020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {                  
    if (One.TF.Event_Message700020 == false)
    {
      One.TF.Event_Message700020 = true;

      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownHideAllSubView);

      Message(ref m_list, ref e_list, "ラナ：ハンナおばさん、こんにちはー♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：ラナちゃん、久しぶりだねぇ、いらっしゃい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：一泊で空き部屋はあるかしら？今日泊っていきたいんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：ああ、大丈夫だよ。今日はこの宿屋でゆっくりと休んでいきなさい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あっ、ちょっと俺の部屋も予約取りたいですけど、良いですかね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：もちろん、あんたの分も用意済みだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン／ラナ：用意済み？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：ありゃりゃ、しまった口が滑っちまったようだね。アッハハハ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：じゃあ、夕飯のメニューを選んでおきな。用意しておくよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン／ラナ：ありがとうございます！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【宿屋で夕飯のメニューが選べる様になりました。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "【夕飯のメニューは次の日から加算されるパラメータの内容を決定します。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "【状況に応じた選択を行う事でより効果的なパラメタ調整を行って行くことをお勧めします。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownCallRestInn);
    }
  }

  public static void Message700030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message700020 == false)
    {
      Message(ref m_list, ref e_list, "ラナ：悪いんだけど、少し疲れてるの。先に宿屋に行ってもらえないかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、そうだったな。了解了解。", ActionEvent.None);
    }
    else
    {
      if (One.TF.AlreadyRestInn == false)
      {
        Message(ref m_list, ref e_list, "ラナ：悪いんだけど、少し疲れてるの。先に宿屋に行ってもらえないかしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：おお、そうだったな。了解了解。", ActionEvent.None);
      }
      else
      {
        One.TF.Event_Message700030 = true;

        Message100021(ref m_list, ref e_list);
      }
    }
  }

  public static void Message700031(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：（今、ファージル宮殿に行く用事はないな・・・他を当たろう）", ActionEvent.None);
  }

  public static void Message700040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "ラナ：ちょっと・・・遠征許可証は？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・もちろん、今から取得しに行くぜ！", ActionEvent.None);

  }

  public static void Message700045(ref List<string> m_list, ref List<ActionEvent> e_list, string food_menu)
  {
    if (One.TF.Event_Message700040 == false)
    {
      One.TF.Event_Message700040 = true;

      string dummy = string.Empty;
      One.TF.AvailableFirstEssence = true;
      One.SelectCharacter(Fix.NAME_EIN_WOLENCE).LevelUpEssenceTree(3, ref dummy);
      One.SelectCharacter(Fix.NAME_LANA_AMIRIA).LevelUpEssenceTree(3, ref dummy);
      One.SelectCharacter(Fix.NAME_EONE_FULNEA).LevelUpEssenceTree(3, ref dummy);

      Message(ref m_list, ref e_list, "アイン：よし、今日はもう休むとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：飯は【" + food_menu + "】を頼むとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すみません。【" + food_menu + "】をお願いできますか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ハンナ：はいよ、ちょっと待ってな。今すぐ用意してあげるよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "・・・しばらくして・・・", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ハンナ：さあどうぞ、召し上がれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとうございます。いただきます！", ActionEvent.None);

      Message(ref m_list, ref e_list, " ～　食事中にて・・・　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：しかし、どうするかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か考えこんでるわね。どうかしたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、戦術論について色々考えてるんだが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：３人って結構できる事があるなと思ったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：例えばどういう内容なわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだなあ・・・例えばか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そこで既に考え込むわけね。わかったわ、例えばじゃなくても良いわ。今の現状だとどうなの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今の現状だと、ある程度陣形を組む様な構成になっている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺が前衛を張って、ラナは柔軟な対応、そしてエオネが後方からの支援だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この構成は非常に強い陣形だ。結構、満足している。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：満足してるのね。それでいて考え込むのがバカアインらしいけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：何か・・・私の行動で気になる事でもあるのでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ！いやいやいや、そうじゃないんだ！悪い悪い、ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：たださ。何かこう、もったいない気がしたんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：もったいない？その言葉を使う場面が間違ってる気がするけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何て言うんだろうな・・・難しいんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：満足のいく内容っていうのは結構穴があったりするんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：形がきっちり固定化するればするほど、強い容にはなるんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、いざという時に別の手筋が必要だった場合、それがないと対処に困る場合があるんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だから、少しだけ作戦の幅は持たせておきたい。という感じだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・なるほどね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：バカアインらしくない物凄くまともな内容だったわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、師匠からの受け売りだけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、何かリクエストでもあれば言ってちょうだい。出来る範囲で応えるわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、じゃあ、ちょっとそうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナは確か、聖フローラ女学院で魔法系統を勉強したんだよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうね。一般的なものなら勉強だけじゃなく、ある程度実践訓練もやっていたわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなのか。じゃあ、そうだなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：戦術を大きく変える必要はないんだが、今使っている氷属性と似たようなやつを扱えるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：似たような系統・・・難しい事言うわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、いや良いんだ。ラナが好き好んで使える類なら何でもオーケーだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：好き好んでっていうのもちょっと引っかかるんだけど・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ゲッ、わ、悪い悪い。正直どれでもオーケーだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どれでもって・・・それはそれでテキトー過ぎるわね。まあ良いけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうね。じゃあ、闇スペルなんかどうかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：敵へ影響を与える魔法があるのに加えて、味方へ力を与えるタイプの魔法もあるわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：氷と闇の相性は良く、戦術がそこまで変わるわけじゃないわ。普通に組み込む事は可能ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それだ、さすがラナ！助かるぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、闇スペルって事で良いかしら。少し思い出しながらになるから、あまり過度に期待はしないでね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、分かった！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あの・・・そ、それでしたら・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：私は、無心スキルでよろしかったでしょうか・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：後方支援という位置づけなら・・・カウンター系統が良いかなと思ったので・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお！支援に加えて、カウンターか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、助かる助かる。もちろん、それでオーケーだ！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうなると、アインはどうするつもりなの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺はそうだな・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：護衛スキルをしやってみようと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この構成だと、下手に俺が攻撃にまわるよりも、場全体を見た方が良いと思うんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：良いかな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アンタがそう思うんなら、それでいいんじゃないの。私は構わないわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：サンキュー。じゃ、決まりだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナは闇スペル。エオネは無心スキル。俺は護衛スキルを取り込んでいく。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：無理に一気にやる必要はない。少しずつ付け足す感じでやっていこう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：了解よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：分かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 各メンバーに新しいコマンド属性が追加されました！ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "【 バトル設定画面で新しく追加されたコマンドの内容を確認してみましょう！ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ明日からそれで行こう！ごちそうさまでした！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ご馳走様でした。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ごちそうさまです。", ActionEvent.None);

      Message(ref m_list, ref e_list, food_menu, ActionEvent.HomeTownCallRequestFood);
      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownExecRestInn);

      Message(ref m_list, ref e_list, "【 パーティは休息を取りました】", ActionEvent.MessageDisplay);
    }
  }
   
  public static void Message700050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message700050 == false)
    {
      One.TF.Event_Message700050 = true;
      {
        Message(ref m_list, ref e_list, "アイン：よし、じゃあファージル宮殿に行くとしよう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～ ファージル宮殿にて ～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "　　【受付嬢：ファージル宮殿へようこそ。】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　　【受付嬢：アイン・ウォーレンス様ですね。ご用件をどうぞ。】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：国王様にお会いしたい。要件があると伝令の者から教えてもらっている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "　　【受付嬢：エルミ・ジョルジュ国王陛下への謁見ですね。しばらくお待ちください。】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "　　【受付嬢：お待たせいたしました。】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　　【受付嬢：それでは、謁見の間へ行かれます様、よろしくお願い申し上げます。】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、サンキューな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：じゃあ、ちょっと行ってくるぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "　　【受付嬢：なお、今回の謁見については、アイン様および関係者ご一同様も含めご参席ください。】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あ、そうなのか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：い、い、い、意外よね。たいていは一人ずつだけど。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ラナ、なんでお前の方がうろたえてるんだ？別に一緒に入るだけだろ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：え、ええ、えーーそうよ！問題無いんだから。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：珍しく意味が分かんねえな・・・まあ、そこは良いか・・・。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：じゃあ、受付さん。俺とラナ、エオネ、ビリー、アデルの５人で入るが問題ないかな？", ActionEvent.None);

        Message(ref m_list, ref e_list, "　　【受付嬢：はい。】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：よし、じゃあこのメンバーで謁見の間へ向かおう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～ " + Fix.TOWN_FAZIL_CASTLE + "、謁見の間にて ～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アイン：ご・・・ご拝受つかまつります。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：アイン君。よく来てくれたね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：それから、ラナ君、ビリー君、エオネ君、アデル君も来てくれてありがとう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：喋り方については楽にしてくれて構わないよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：は、はい。それでは・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：今回、港町コチューシェには行ってみて、調査する事はできました・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：しかし、港からは船が出てないため、ヴィンスガルデ王国に渡ることはできず。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で、港町から北に向けて行くルートを町の方達から情報を入手した上で、", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そこへ向けて俺達は万全の準備を整えて・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：あ、ちょっと良いかな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：そのあたりについてはアイン君も喋る意味はあまりないと既に思っているんだよね？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・いえ、そういうわけでは。", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　国王エルミは、いつになく威厳あるオーラを前面に放ち始めた　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：アイン君、普段通り気軽にしゃべってくれて良いんだよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：これは僕からのお願いでもある。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：僕はね。アイン君、ラナ君、エオネ君、ビリー君、アデル君。君達がここに今来てくれている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：その事に関する【理】を見出すのが僕の役割なんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：【理】・・・ですか？そう言われても・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：大丈夫。ありのままで喋ってくれれば良いから。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：じゃまあお言葉に甘えまして・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：正直な所、こうなるとは思ってなかったんですよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：エオネからの依頼内容から始まって、まずは古い聖堂のダンジョンへ寄る。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で、アイテムらしき物をGETしたんだが、勘違い。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：しょうがないから、そこは置いといて、コチューシェに到着したら、ビリーと偶然再会。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：その他はこれといった情報なし。ヒントなし。ついでに船も出ない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：しょうがないから神秘の森のルートを教えてもらい、ツァルマンの里へ到着。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・いや、その前に神秘の森で・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：良いよ、ペース配分は好きな感じで。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：確かに、手に入れたんです。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ですが、それは幻", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：幻なのは間違いないんですが、感覚が受け入れないというか・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：結局、その感覚を拭いきれず、ツァルマンの里へ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そして、現れたのが・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：長老だね。書状は授かったのかな？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：はい。これを。", ActionEvent.None);

        Message(ref m_list, ref e_list, " ～　アインは長老から受け取った書状を国王エルミへと差し出した ～　", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "エルミ：拝見させてもらうよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：なるほど、なかなか面白いね。やっぱりアイン君には興味が湧いてくるよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あの、すみません。ちょっと聞いても良いでしょうか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：ああ、何でも聞いてくれて構わないよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ラナが持っていた例の剣。あれは国王様がラナに渡したものですよね？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：なっ！ちょっ！ちょ、何言ってるのよ！！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：アハハ。ラナ君、そこまで慌てなくても良いよ。ここまで来た以上隠す必要はもうないんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：確かに、その剣はファージル宮殿の宝物庫に厳重に保管していた宝剣だ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：僕がラナ君に頼んで、秘密裏に管理してもらう事にしていたんだ。間違いないよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：やっぱりそうだったのか。何か違和感があったからさ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ど、ど、どーいうふーに違和感があったって言うわけ！！？？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：港町コチューシェの時でハッキリしたが、ラナ。お前はそういうところは分かりやすい。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：な！なっ何がよ！？ちゃんと言いなさいよね！？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：え、あ、いや・・・悪い。そこは別に良いんだ。察してしまった俺も悪いわけだし・・・ハハハ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：もう、この場では良いわよ。後でちゃんと教えて。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あ、ああ。分かった。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：じゃあ、もう一つだけいいですか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：いくつでも良いよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：この宝剣はObsidianStoneと何らかの関連性があるのでしょうか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：関連性がある事までは把握できている。ただし、", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：関連性そのものを証明できる事象は今の所発見されていない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・なるほど・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：でも、それって・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ちょっとバカアイン。何突っかかってんのよ！？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：ラナ君。良いんだよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　国王エルミの眼差しは静謐な雰囲気を彩りはじめる ～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "エルミ：アイン君、続けて。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あ、ええとですね・・・つまり・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：本来ならファージル国の調査部隊が証明できる材料を見つけてくるんだと思うんですが", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：それが中々進まないのと、同時に", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：国王様は今何等かの事情があって、動けない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：だから一般市民である俺達に調査依頼を行っている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：宝剣も何らかの事象が発生した際、偶発的に何か新たに分かる事があるかもしれない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：だから、宝剣を託しておいた。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：これで辻褄としては合う事になりますよね？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：いいや。残念だが「ハズレ」と答えておこう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：え！？あれ！？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：今のは何となくアイン君らしくはなかったな。常人のセンスによる一般的な追跡だね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：アイン君、もっと君らしく言ってくれて良いんだよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あ、えっとじゃあまあ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　国王、一瞬だけアイン以外のメンバーに眼を向け、すぐに眼をアインへ戻す ～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "エルミ：なるほど、事情は分かった。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：この場ではちょっと限界があるね。じゃあ、少しだけ譲歩しよう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：アイン君が最初にここに訪れる前に", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：僕はとある人とこの謁見の間で情報を取り交わしている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：その相手とは？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：え、だってそれは毎日山のようにやってるから、誰って言われても・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ま、まさか！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　アインはふと、後ろで黙っているエオネの方に顔を向けてみた！　）", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "エオネ：・・・っ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あ、そうだったのか！", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：でも、アイン君なら薄々と勘づいてたんじゃないかな？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：いや、これは本当に意識は行ってなかったです。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：って、待てよ。ちょっとこれって・・・ひょっとして。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：エオネ、すまねえが、ちょっとだけ教えてくれ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：えっ、あ。ハイ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：俺達があのツァルマンの里に到着した時は、俺達は始めてだったかもしれないが、", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：エオネは過去、あのツァルマンの里に何度か出入りした経験があるって事か？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：はい。ツァルマンの里は始めてではありません。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうか・・・だとすると偶発的と思ってはいたが・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・【理】・・・か。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：いや", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：それもまた、理由の連鎖が合致していない感じがする。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：一つ一つは些細な道標でしかなく、", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：選ぶべき対象があるが、", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：その選ぶべき事象が、まだ、存在していない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で、あるにも関わらず、認識に至らなければ、存在の可能性も潰える。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：それを防ぐために、国王は俺達にミッションを与えた。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：すみません、駄目です。正直、辿り着ける気がしない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：いや、そこまで手繰り寄せられるのはアイン君だけじゃないかな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：今のはアイン君らしくて良かったよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：ラナ君。どうだい？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：勿体なきお言葉。そこにいるバカ者とここまで対話頂けた事が奇跡にも等しい時間です。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：ビリー君、アイン君と話をするのは楽しいかい？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：え！！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：いやいやいや、スンマセン！俺なんかとてもじゃありませっせっせんが！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：ア、ア、アインのヤローとは、セリフは何時もお互いに楽しんでるだけ！っというかノリ会話１０００％なわけで・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：ハ、ッハハハハハ！な、なあアイン！？なぁ！？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ビリー、落ち着けって。まあ、ありがとな。お前のそういう所もありがたいぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：オ、オウ！ハハハ！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：それと、アデル君だね。ツァルマン爺は今も元気かな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　アデル・ブリガンディは眼を閉じ、顔を床に落とし、声のみを国王へと向ける　～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アデル：はい。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アデル：国王から仰せつかった【教え】をこの世に広める。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アデル：その責務、片時も忘れた事は無い事をここに証明します。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アデル：ご無礼、お許しください。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：ありがとう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：それから、ツァルマン爺に伝えておいてほしい。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：現在も、そしてこれからも、私は感謝し続けると。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アデル：はっ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：アイン君。良い仲間を持ったね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：心から感謝の気持ちを忘れずに。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：はい、ありがとうございます。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：エルミ国王。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：なんだい？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：後は俺自身が何とか考えます。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そして、また分かった事をお伝えしに来ます。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：必ず、また来ます！", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：さて、どこまで辿り着き、どこまで見出せるかな。後々のお楽しみだね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　国王エルミの眼差しは元の雰囲気へと戻っていった ～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "エルミ：あ、それと。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：実は別の案件を頼みたい事があるんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：はい、なんでしょうか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：ここから北東に進み、オーランの塔に上り、本大陸全土の視察をしてきてくれないかな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：オーランの塔？そんな場所があるんですか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：ああ、ちょっと面倒なお使いなんだけど、やってもらえるかな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：い、いえいえ。もちろん喜んで。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：オーランの塔周辺は突然危険なモンスターも出没する。準備は怠らないように。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：これは軍資金とアイテムだ。好きに使ってくれて良いからね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "【 50000 gold 】を獲得しました！", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "【 " + Fix.ARTIFACT_ZIHI + " 】を獲得しました！", ActionEvent.MessageDisplay);

        // Message(ref m_list, ref e_list, "50000", ActionEvent.GetGold); // クエスト達成時に取得するため、ここでは取得しない。

        Message(ref m_list, ref e_list, "アイン：あ、わざわざすみません！大事に使います！", ActionEvent.None);

        Message(ref m_list, ref e_list, "エルミ：じゃ、頼んだよ。くれぐれも気をつけて。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：はい！失礼いたします！", ActionEvent.None);

        Message(ref m_list, ref e_list, "～ " + Fix.TOWN_FAZIL_CASTLE + "、エントランスにて ～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アイン：オーランの塔・・・か・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：が、その前にエオネ。ちょっと今度また教えてくれ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：はい。今がよろしいでしょうか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あ、いや正直な所、今は良いんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：絶妙な機会とタイミングがあればで良い。これからもよろしくな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：はい、分かりました。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：よし、じゃオーランの塔へ向けて出発とするか！", ActionEvent.None);

        Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_2 + " 】を達成しました！", ActionEvent.QuestComplete);

        Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_11 + " 】が開始されました！", ActionEvent.GetNewQuest);
      }
    }
  }

  public static void Message700060(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message700060 == false)
    {
      One.TF.Event_Message700060 = true;

      Message(ref m_list, ref e_list, "アイン：よし、着いたみたいだな。早速ファージル宮殿に行くとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ ファージル宮殿にて ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "　　【受付嬢：ファージル宮殿へようこそ。】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　　【受付嬢：アイン・ウォーレンス様ですね。ご用件をどうぞ。】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：国王様にお会いしたい。オーランの塔で視察を行ってきた結果を報告したい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　　【受付嬢：エルミ・ジョルジュ国王陛下への謁見ですね。しばらくお待ちください。】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "　　【受付嬢：お待たせいたしました。】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　　【受付嬢：それでは、謁見の間へ行かれます様、よろしくお願い申し上げます。】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　　【受付嬢：なお、今回の謁見については、アイン様および関係者ご一同様も含めご参席ください。】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、サンキューな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、受付さん。俺とラナ、エオネ、ビリー、アデルの５人で入るが問題ないかな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "　　【受付嬢：はい。】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあこのメンバーで謁見の間へ向かおう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ " + Fix.TOWN_FAZIL_CASTLE + "、謁見の間にて ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：ご拝受つかまつります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：アイン君、ラナ君、ビリー君、エオネ君、アデル君。ようこそファージル宮殿へ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：喋り方はいつもの通りでお願いするよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい。それでは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーランの塔の最上階でエリア全域を視察してきました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：それで、何か見えたものはあったのかな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ええ、赤い星が空に出ているのを確認しました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：ラナ君、エオネ君、ビリー君、アデル君も一緒にそれは見えたのかい？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ、私はあまりちゃんと見てませんでしたので・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私は塔の最上階へは行っていないため、見えませんでした。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：当方の稚拙なる知見では、その対象の認識すら及びません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺も正直覚えてねーな。あの時の事は。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、お前。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ん？なんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・えっ、ええと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：フフ、別に良いんじゃないの♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま・・・まあ、良いか。それはそれで。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：じゃあ、その赤い星が見えたというのはアイン君一人だけなんだね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい、そういう事になります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：その他に気づいた点はあるかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いいや、報告できるような内容はあまり・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：アイン君、重要なポイントなんだ。皆にも伝えるつもりで気軽に喋ってくれないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ！す、すみませんでした！じゃあちょっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まず、あの赤い星の方角なんだが、おおよそ北西のちょい左ぐらいだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それって西北西に事ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それだ。西北西辺りといえば、", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ムーンフォーダー雪原区域ですね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あとは何か湖の奥の方に建物らしきものが見えた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、遠くから見た感じだが、いつもより水域が少し下がっている感じがした。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そんなのアンタが分かるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何となくだよ。直感的だからあまり当てにもならねえし、報告するレベルではないと思ったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと、ヴィンスガルデ王国側が山に隠れてほとんど見えなかったが、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：一か所だけちょっと見えたのがある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれはあきらかに自然の地形じゃなかった。人工的な建物だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：それはきっと・・・ダルの門ですね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、それだそれ。エオネ、詳しいな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：え、いえ・・・私も詳しくは知らないです・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、別に良いんだ。内容は後でちょっと調べてみよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと、西側の方によくわからないが残骸らしきものがあったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：残骸というか・・・あれは何等かの形成物だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、東側はそこら中が山だらけ。特に何も発見は出来てない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それから、南西側には、何か妙にくぼんだ島も見えたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それから後は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょ、ちょっと。話が拡がり過ぎてるんじゃないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：良いんだよラナ君。おそらく今のがアイン君本来の喋りだろうからさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すみません。つい何か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：いや、ありがとう。凄く助かるよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：でもなんか気になるんですよね。色々と入ってくる事象に意図があるような気がして。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：関係性よりも先に秘められし内容がそこにある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ・・・はい。なんとなくですが、そう感じるんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：確かに、その赤き星は重要なポイントだったね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：でも、今喋った中で、他にも重要なポイントと感じたのは実はあるんじゃないかな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      // 条件を満たしていない場合は、バッドエンド
      if (One.AR.InscribeObsidianStone_1 == false || One.AR.InscribeObsidianStone_2 == false || One.AR.InscribeObsidianStone_3 == false)
      {
        Message(ref m_list, ref e_list, "～　ファージル宮殿の外にて　～", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：さて、報告終了だな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：これから、どうするの？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうだな。国王からは特に新しい依頼を受けていないし、適当にクエストでも探すとするか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：討伐タイプなら、俺も付き合うぜ！", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうだな。難解なやつよりも手っ取り早く片づけられそうなものにするか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：私はこれにて、失礼いたします。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、今までありがとうな。またどこかで会ったら声をかけてくれ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：・・・それでは。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　エオネ・フルネアはその場から立ち去って行った　～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アイン：アデルはどうする？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アデル：ん－、それがねー。じーちゃんから突然言伝があって、帰ってこいって。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうか。分かった。オーランの塔では色々とガイドしてくれてサンキューな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アデル：うん、こっちも楽しかった。アリガトー☆　またねー。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　アデル・ブリガンディはその場から立ち去って行った　～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アイン：よし、じゃあ討伐のクエストが無いか、掲示板に立ち寄ってみるとするか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：私、ちょっと準備があるから、少し離れるけど行く時になったら呼んでね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：俺も出かける前にひとっ走り行ってくるぜ！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　ビリーとラナはその場から立ち去って行った　～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アイン：さてと・・・掲示板、掲示板っと・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "", ActionEvent.HomeTownBlackOut);

        Message(ref m_list, ref e_list, "（　掲示板・・・クエスト・・・報酬・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　安定した収入源　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　そもそも、何が目的だったっけ・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　充実した生活になる事には変わりない、ただ　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　そういう風に悪い点が見当たらないとか、そういう表現をしていると　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　【充実とか収入源とか安定とか考えてんじゃねーぞボケ】、って師匠から言われそうだな　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　すまねえ、師匠・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　ただ、今の俺ではたどり着けそうにない　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　どうすればよかったのか　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　当初の目的は確か　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　・・・　）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　・・・　）", ActionEvent.None);
        
        Message(ref m_list, ref e_list, " ～　THE　END　～　（断絶されし世界）", ActionEvent.None);

        Message(ref m_list, ref e_list, "", ActionEvent.DungeonBadEnd);

        return;
      }

      Message(ref m_list, ref e_list, "エルミ：いや、今のはこちらの非礼だったかもしれない。申し訳ない。", ActionEvent.None);
      
      Message(ref m_list, ref e_list, "アイン：あ、いえそんなつもりじゃないんです！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、何というか・・・見ただけじゃ錯覚という事もあるし", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：師匠からも散々言われているんです。自分の感覚は常に疑えと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：師匠？オル・ランディスの事かな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい、なのであまりにも不確かな件は、口で言うべきではないと考えています。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：アイン君。その最も喋り難い内容が一番君の中で重要な事象なのではないかな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、それは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：周りの皆の反応が答えそのもの、だね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：ObsidianStone", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：そうなんだね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正確には分からないです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：確かに事象はあったと思うんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、事実としてはすっかり証拠がなくなったというか", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：元々、事実も証拠も無いんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なので、その出来事自体が、ObsidianStoneの事を指しているのかすら分からないんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もっと厳密にいうと、分からないというよりも・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そもそも存在していない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう感じるんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：うん。そうだね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：アイン君、僕は君の言っている事を信じるよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：ファラ。今の発言、間違いなさそうだよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：ええ、間違いないですわ（＾＾", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：適当に答えないでさ。王妃としてちゃんと答えてくれよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：ウフフ。だって、当時のエルミとそっくりですもの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：またそういう事を言う。もう良いから、頼むよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：分かりましたわ。では、改めて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【ファラ王妃の表情はいつも以上に凛となり・・・】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ファラ：アインさんの言うObsidianStoneについてはファージル宮殿の王、そして王妃である私として", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：真の報告であったことを心から受諾いたします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：アインさん。それからラナさん、ビリーさん、エオネさん、アデルさん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：視察のほど、ご苦労様でした。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：では、アインさん。ちょっとこちらへいらして。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：は、はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：ウフフ、そんなにかしこまらなくても大丈夫ですよご心配なく（＾＾", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：い、いえいえ。では・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ アインは謁見の間へ顔を上げ、玉座の方へ少し近づいた ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ファラ：はい、じゃあこれをどうぞ（＾＾", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こ、これは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, " 【 " + Fix.ARTIFACT_ZIHI + " 】を手に入れました！", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, Fix.ARTIFACT_ZIHI, ActionEvent.GetItem);

      Message(ref m_list, ref e_list, "エルミ：ファージル王家に代々から伝わるアイテム【慈悲の宝珠】", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：これををアイン君に授けようと思うんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こ、こんな大事な物、俺なんかに勿体ないです！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：王の命令です。受け取ってください（＾＾", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい、わかりました！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：うん、良い返事だね。ありがとう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：あと、ついでにこれもどうぞ（＾＾", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：こら。ついでじゃなくて、そちらの方が本来大事なものだろ。ちゃんと渡してくれないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ファラ：しょうがないですわね。ではアインさん、こちらを正式にお受け取り下さい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ 【ムーンフォーダー区域遠征許可証】を手に入れた！ ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：あ、これは遠征許可証ですね！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：やったじゃないアイン。それがあればムーンフォーダー雪原区域に行くことができるわね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、助かるぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：許可証については、今いる皆の分も配布しておいたから、各自が持っておくように。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、ありがとうとございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っしゃ、許可証ゲット！やったぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうもありがとうございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：王よ。深き配慮、感謝いたします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：では、アイン君。ムーンフォーダー方面に行ったら、パルメティシア神殿へ行くと良いだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：パルメティシア神殿？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：ムーンフォーダー方面はパルメティシア神殿にいる教皇が統治を行ってくれている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：ただし、ムーンフォーダーは正直開放された国交が無いため、情報は入手しにくい状況なんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：そこで、アイン君には実際に赴いてもらって、今どのような状態になっているかを確認してきてほしいんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：引き受けてもらえるかな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい！喜んで！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エルミ：アッハハハ、元気が良いね。じゃあ、よろしく頼んだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい！それでは失礼いたします！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ " + Fix.TOWN_FAZIL_CASTLE + "、エントランスにて ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし、いよいよムーンフォーダー方面か！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何かやたらと張り切ってるわね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ムーンフォーダー方面っていえば昔から行ってみたいと思ってたし、張り切らないわけには行かないだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ッフフ、何かそういえば昔小さい頃そんなこと言ってたわね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：じゃあ・・・準備を整えておきますね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なあ、ところでアデルさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：なーにー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お前さ。この謁見の時になると、何であんな言葉が出てくるんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じーちゃんに叩き込まれたのー。「ふざけるのは止めなさい！」って☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そ、そんなもんか・・・あの雰囲気もか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：そーだねー。「言葉だけじゃ駄目じゃろ！」ってよく言われるし☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：やっぱツァルマンの里で育ったのは伊達じゃねーんだな。すげーぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：確かに、アデルの声、風貌、全体的な印象は誰もが驚くレベルだよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アハハー、アリガト☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ皆！早速ムーンフォーダーにあるパルメティシア神殿へ向かうとしよう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_11 + " 】を達成しました！", ActionEvent.QuestComplete);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_21 + " 】が開始されました！", ActionEvent.GetNewQuest);
    }
  }

  public static void Message700070(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800230 == false)
    {
      One.TF.Event_Message800230 = true;

      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownResetMenuView);

      Message(ref m_list, ref e_list, "アイン：・・・よし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、お前。ちょっと待て、どこへ行こうとしてんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーランの塔だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いやいやいや、待てって。あの塔の視察はもう終わっただろーが？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：視察の件じゃないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：行かなきゃいけない所がある。おそらくだが、きっとある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アデル。聞きたい事がある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アデル・ブリガンディはいつもの笑顔を伏せ、両目を閉じた ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アデル：我はオラクルの声を届けしもの、アデル・ブリガンディ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：蒼穹を捉えし人の子よ。発するがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：率直に聞きたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーランの塔は、一体いつ頃から存在しているんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：かの塔は永劫の時を刻み、常在を映し出す像そのもの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：人が生きる時代に建てられしは事象の一つでしかない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ゆえ、一つの理であると認識するがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・そういう事か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとう、アデル。参考になった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：迷えし人の子に、導きがあらん事を", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アデル・ブリガンディは両目を開け、いつもの笑顔をしはじめる ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アデル：どーだったかなー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、良い雰囲気が出てたよ。ありがとう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：エヘヘ、どういたしましてー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：しっかし、すげー雰囲気だよな。声も全然違うし。それも、じーちゃんの教えによるものなのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：どーだろうねー、ちょっと分かんない時もあるけど☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今の伝承からすると、このオーランの塔。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：絶対に何かあるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、クリアはしたと思うんだけど、もう１回行くのね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すまないが、そうなる。頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。じゃあ行ってみましょ。", ActionEvent.None);
    }
  }
  #endregion

  #region "オーランの塔"
  public static void Message800010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800010 == false)
    {
      One.TF.Event_Message800010 = true;

      Message(ref m_list, ref e_list, "アイン：へえ・・・ここが・・・。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ アインは塔の中を全体的に見回した ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：なかなか面白い構造だな。遠くまで見渡せる様になっている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：フロア全体が吹き抜け構造になってる感じよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あと、足元に注意して進まないと危ないかも知れません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：塔の階層がそれなりにありそーだね☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お・・・おいアイン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうした。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：これ、まさか上へ登るって話じゃないだろうな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：上へ登るために来たんだろ。塔に来たんだしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、お前まさか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っんでもねえよ！ああもう良いから、黙って俺に付いてこいや！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かった。じゃあビリー様を先頭にして付いて行くとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っんで俺が先頭なんだよ！！先頭はてめえが先に行けば良いだろうが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジかよ。じゃあまあルートの選択は俺がやる。それで良いかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ああ、頼んだぜ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあオーランの塔を進んでみるとするか！", ActionEvent.None);
    }
  }

  public static void Message800020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800020 == false)
    {
      One.TF.Event_Message800020 = true;

      Message(ref m_list, ref e_list, "アイン：このタイル、変な感じで浮いているな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アデル、これ何だか分かるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ゼタニウム鉱石素材を使った飛翔するタイルだねー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：乗ればビューンって飛んで行ってくれるよ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジか。面白そうだな。じゃあ早速乗ってみるとするか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうしたんだ？ビリー", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おぉよ。なんでもねえよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネとラナも良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：お構いなく、好きに進めていいわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：どうぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、早速乗ってみよう。", ActionEvent.None);
    }
  }

  public static void Message800030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800030 == false)
    {
      One.TF.Event_Message800030 = true;

      Message(ref m_list, ref e_list, "アイン：ん、ちょっと待て・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうかしたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　そうだな　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ アインは少し遠い地点まで視点を移し始めた ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、いったい何処見てんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ。悪い悪い。ちょっと順序性があるのかどうかを確認してただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：順序性だぁ？んなもん、やってみねーと分からねえだろが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ結局の所はそうかも知れないけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・てめー。ウソついてんじゃねーぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：この時点で何か見抜こうとしてんだろ、違うか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・まあ、見抜くとかそういう類じゃ無いけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：巻き戻し不可な要素が無いかちょっと気になっただけなんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：巻き戻し・・・不可だぁ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：このタイルってさ。直線的に進むだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ああ、そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、基本的には行って戻っての繰り返しで巻き戻しは出来るんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっとここのタイルはどうかなって思っただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：それがさっき言ってた順序性ってーのと、どう関係があるんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：万が一巻き戻しが出来ない場合は、一方通行的な操作になる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もしそういった事態に陥ったら、行ったは良いが、戻ってこれなくなる可能性があるんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ココがそうだとすると、慎重に進まなければならない、と考えただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただし、今見た感じだと、杞憂だったみたいだ。ここは大丈夫！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さあ、行こう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：勝手に完結しやがったな・・・まあ、いつものテメーらしくて何よりだがな。", ActionEvent.None);
    }
  }

  public static void Message800040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800040 == false)
    {
      One.TF.Event_Message800040 = true;

      Message(ref m_list, ref e_list, "アイン：扉か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうやら鍵がかかってるみたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：鍵穴の上部に不思議な紋章が描かれているわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どんな紋章だ。ちょっと見ても良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、どうぞご自由に。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：月の形状・・・かな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：これは専用の鍵が無いと開かないわね。鍵を探してみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、分かった。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：扉に記された紋章をもう１回確認してみるか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：月の形状をしているわね。専用の鍵が無いと開かないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解、月の形状を示す鍵を探そう。", ActionEvent.None);
    }
  }

  public static void Message800041(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800041 == false)
    {
      One.TF.Event_Message800041 = true;

      if (One.TF.Event_Message800040 == false)
      {
        One.TF.Event_Message800040 = true;

        Message(ref m_list, ref e_list, "アイン：扉か・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：どうやら鍵がかかってるみたい。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：鍵穴の上部に不思議な紋章が描かれているわね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：どんな紋章だ。ちょっと見ても良いか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ええ、どうぞご自由に。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：月の形状・・・かな？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：だとすると、この月影の鍵で開くんじゃないかしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ちょっと、やってみてもらえるか？頼む。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ええ、やってみるわね。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：扉だな。月の形状をした紋章が描かれている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：この月影の鍵で開くんじゃないかしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ちょっと、やってみてもらえるか？頼む。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ええ、やってみるわね。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～　ッカチリ　～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・っと、どうだ？", ActionEvent.None);

      if (One.TF.Event_Message800043 == false)
      {
        Message(ref m_list, ref e_list, "ラナ：ウソ、開かないわね。そ、そんなはずは・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：でも、今何かスゲー良い音したよな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：他に何か条件があるって事かな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：鍵は間違いなく合致しているわ。他をもう少し探索してみましょ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、了解だ。", ActionEvent.None);
      }
      else
      {
        One.TF.Event_Message800044 = true;

        Message(ref m_list, ref e_list, "ラナ：あ・・・開かないわ・・・ウソでしょ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：今のもスゲー良い音がしてたのは確かだぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：どういう事だろうな・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ラナが鍵開けを見誤るとは思えない。となると・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうか。ひょっとして。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ラナ、もう一度だけ、向こう側の扉へ行ってみるぞ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：え？どういう事？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、良いから。ここは一つ頼む。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：分かったわ。じゃあ、行ってみましょ。", ActionEvent.None);
      }
    }
    else if (One.TF.Event_Message800043 == false)
    {
      Message(ref m_list, ref e_list, "アイン：この扉はまだ開かないよな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：鍵は間違いなく合致しているわ。他をもう少し探索してみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解だ。", ActionEvent.None);
    }
    else if (One.TF.Event_Message800044)
    {
      Message(ref m_list, ref e_list, "アイン：どうすっかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：この扉をもう一度調べてみるの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、こちらの方はもう良いはずだ。もう一方の扉へ行ってみよう。", ActionEvent.None);
    }
    else if (One.TF.Event_Message800046 == false)
    {
      One.TF.Event_Message800046 = true;
      Message800046(ref m_list, ref e_list);
    }
  }

  public static void Message800042(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800042 == false)
    {
      One.TF.Event_Message800042 = true;

      Message(ref m_list, ref e_list, "アイン：扉か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうやら鍵がかかってるみたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：鍵穴の上部に不思議な紋章が描かれているわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どんな紋章だ。ちょっと見ても良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、どうぞご自由に。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：日輪を司る形状・・・かな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：これは専用の鍵が無いと開かないわね。鍵を探してみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、分かった。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：扉に記された紋章をもう１回確認してみるか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：日輪を司る形状をしているわね。専用の鍵が無いと開かないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解、日輪を示す鍵を探そう。", ActionEvent.None);
    }
  }

  public static void Message800043(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800043 == false)
    {
      One.TF.Event_Message800043 = true;

      if (One.TF.Event_Message800042 == false)
      {
        One.TF.Event_Message800042 = true;

        Message(ref m_list, ref e_list, "アイン：扉か・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：どうやら鍵がかかってるみたい。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：鍵穴の上部に不思議な紋章が描かれているわね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：どんな紋章だ。ちょっと見ても良いか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ええ、どうぞご自由に。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：日輪を司る形状・・・かな？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：だとすると、この日輪の鍵で開くんじゃないかしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ちょっと、やってみてもらえるか？頼む。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ええ、やってみるわね。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：扉だな。日輪の形状をした紋章が描かれている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：この日輪の鍵で開くんじゃないかしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ちょっと、やってみてもらえるか？頼む。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ええ、やってみるわね。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～　ッカチリ　～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・っと、どうだ？", ActionEvent.None);

      if (One.TF.Event_Message800041 == false)
      {
        Message(ref m_list, ref e_list, "ラナ：ウソ、開かないわね。そ、そんなはずは・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：でも、今何かスゲー良い音したよな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：他に何か条件があるって事かな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：鍵は間違いなく合致しているわ。他をもう少し探索してみましょ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、了解だ。", ActionEvent.None);
      }
      else
      {
        One.TF.Event_Message800045 = true;

        Message(ref m_list, ref e_list, "ラナ：あ・・・開かないわ・・・ウソでしょ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：今のもスゲー良い音がしてたのは確かだぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：どういう事だろうな・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ラナが鍵開けを見誤るとは思えない。となると・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうか。ひょっとして。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ラナ、もう一度だけ、向こう側の扉へ行ってみるぞ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：え？どういう事？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、良いから。ここは一つ頼む。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：分かったわ。じゃあ、行ってみましょ。", ActionEvent.None);
      }
    }
    else if (One.TF.Event_Message800041 == false)
    {
      Message(ref m_list, ref e_list, "アイン：この扉はまだ開かないよな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：鍵は間違いなく合致しているわ。他をもう少し探索してみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解だ。", ActionEvent.None);
    }
    else if (One.TF.Event_Message800045)
    {
      Message(ref m_list, ref e_list, "アイン：どうすっかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：この扉をもう一度調べてみるの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、こちらの方はもう良いはずだ。もう一方の扉へ行ってみよう。", ActionEvent.None);
    }
    else if (One.TF.Event_Message800046 == false)
    {
      One.TF.Event_Message800046 = true;
      Message800046(ref m_list, ref e_list);
    }
  }

  public static void Message800046(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ラナ。ちょっとこの扉に差し込んだ鍵をもう１回調べてくれないか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ええ、良いわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：鍵は・・・間違いなく合致してるわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：その鍵なんだが、もう少し回すとか出来ないか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どうかしら・・・ちょっと待ってね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：・・・　・・・あっ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：さっきはこんな状態じゃなかったのに。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：やっぱりか。どうだ今度こそ行けそうか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっ、急かさないで。もう少しだけ待って。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：こうね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "～～　ッカチリ　～～", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　ギッギギィ・・・バタン　）", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.OHRANTOWER_KEYDOOR_1_O, ActionEvent.RemoveFieldObject);
    Message(ref m_list, ref e_list, Fix.OHRANTOWER_KEYDOOR_2_O, ActionEvent.RemoveFieldObject);

    Message(ref m_list, ref e_list, "ラナ：フゥ、開いたわね♪", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー；どっ、どういう事だよ？？おい？？？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン；どうやら、２つの扉が同時に開く仕組みだった様だな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：月影の鍵で開く扉、日輪の鍵で開く扉にそれぞれ鍵を差し込む事が条件だったんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン；で、それだけじゃダメで片方の扉を開けようとした段階では鍵は最後まで回らない仕掛け。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン；２つとも鍵が差し込まれた段階から、最初に開けようとした方の鍵を最後まで回せる様になるんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン；合ってるか？ラナ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：説明がおかしいけど、まあ大体そんな所よ。ホンット驚かされたわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー；・・・どういう事だよ？？？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アデル：アハハハハ、ビリーのお兄ちゃんって面白いよねー☆", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ま、まあ開いたからオーケーって事で、ハハハ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：でも、ちょっと危うかったわね。こんな構成は見た事無かったし、動揺させられたわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうだな。最初に鍵が合致したのに開かなかった時は焦ったよな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：それだけじゃないわよ。この塔はマップも取りづらいし、ルート探索も把握が難しいし", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ホント、勘弁してほしいわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アデル：オーランの塔は、攻撃タイプの人より、索敵や調査を行う人を拒む構造になってるみたいだよー☆", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：そうだったのね・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：って、アデル。何でそんな事知ってるの？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アデル：じいちゃんが伝承って言って何度も叩き込んでくるから嫌でも覚えちゃったの、めんどーくさいけど覚えておけって。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：でも、ありがと。今ので少し楽になった感じがするわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：バカアインはこういう所はちっとも気が利かないから、不安になるこっちの事も察して欲しいものだわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ハハハ・・・悪い悪い。まあでも。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ラナの鍵開けは絶対だからな。お前のおかげで右往左往せずに済んでいるんだ。サンキュー。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、じゃあせっかく開い事だし、進めるとしますか！", ActionEvent.None);
  }

  public static void Message800050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800050 == false)
    {
      One.TF.Event_Message800050 = true;

      Message(ref m_list, ref e_list, "アイン：待て。何か気配がある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：敵かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：敵かどうかはこの地点からは分からないが・・・おそらくは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー；気配っつーか、なんか妙にビリビリする感じがするけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、結構ヤバイ感じはする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　突如、アイン達の前に稲光が発生した！ ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "～～～ッピシャ！ッバアアァァァン！！～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　放たれた稲光は、一か所へ集約し、一定の容を形成し始めた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "？？？：ワレは雷光ランスボルツ", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：コノ地へナニをしにキタか？ノベよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何をって訳じゃねえ。単純な視察だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ランスボルツ：シサツ程度のレベルでこの地にはタドリつけはシマイ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ランスボルツ：キデンからは、イシとドウサツがカンジられる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ランスボルツ：コタエよ。ナニをしにキタか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：要件を受けている。それに、応えなくちゃならない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ランスボルツ：ヨウケンとはナニか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：このオーランの塔にて本大陸全土の視察を行う事だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ランスボルツ：シサツは貧の階層のみ。カノ地、栄の階層にクルことはアリエナイ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ランスボルツ：ヒキカエスがヨイ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういう訳には行かないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大陸全土の視察っていうぐらいだ。この塔の頂には少なくとも進まなくちゃならない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなった時、何か取りこぼしがあると進められない事態に陥るかもしれない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：となると、この区画。特に怪しい感じはする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ランスボルツ：無礼ナル者よ。ヒキカエスがヨイ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こりゃ、決まりみたいだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：皆、万全の戦闘態勢を保って進めよう。各自準備してくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：準備オーケーよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：闘うみてーだな！かかってこい！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：分かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：りょーかい☆", ActionEvent.None);
    }
  }

  public static void Message800051(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatLightThunderLancebolts == false)
    {
      Message(ref m_list, ref e_list, "ランスボルツ：退かぬモノにはシをアタエン", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし！皆構えろ！戦闘だ！", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.LIGHT_THUNDER_LANCEBOLTS, ActionEvent.EncountBoss);
    }
  }

  public static void Message800052(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatLightThunderLancebolts && One.TF.Event_Message800051 == false )
    {
      One.TF.Event_Message800051 = true;
      Message(ref m_list, ref e_list, "ランスボルツ：グッ・・・ッグオオオォァァァァ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　エリア全体に稲光が降り注いだ！！　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "～～　ッバアアァァァンン！！！ ～～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：派手なヤツだったな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そこらじゅうに散らかす様なヤツだったな。マジでしんどかったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：私はけっこー面白かったな☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：これを楽しめるってどんな感覚してんだ、ったくよー・・・前衛の身は辛いぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさんは結構上手くあの電光を避けてたわよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ、常にギリギリではありましたが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの距離感を保つ感じはさすがだなと思ったよ。本当に助かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナの支援もバッチリだったしな。サンキューな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ、これで道が拓けたって所かしら。見る限り宝箱が一つあるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：待ってました。ではさっそくお宝ゲットと行きますか！", ActionEvent.None);
    }
  }

  public static void Message800053(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800052 == false)
    {
      One.TF.Event_Message800052 = true;

      Message(ref m_list, ref e_list, "アイン：鍵か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どこで使うものかしらね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだなあ・・・おそらく、今の段階では分からないんじゃないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：でも、テメー的にはここは要所って感じがしたんだろ？全部分かってるんじゃねーのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それはそうだけど、全容を把握しているわけじゃない。何がどうなっているかは分からないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：断片的に見て、ここは通った方が良いなって思っただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ふうん、そんなもんかね。まあ、鍵を手に入れた事は重要そうだし、良いんじゃねーのか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、ここはもう大丈夫だと思う。次へ行こう。", ActionEvent.None);
    }
  }

  public static void Message800060(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800060 == false)
    {
      One.TF.Event_Message800060 = true;

      Message(ref m_list, ref e_list, "アイン：へえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　アインは周囲をスっと見回した ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうかしたわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、良くできた造りだな、って思ってさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：奇麗な構成に切り替わったなと感じたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おう、で？この塔の攻略にカンケーしてんのかよ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、攻略的な観点には直接は結びつかないけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そもそもの目的は視察だからな。別に攻略っていうので来ているのではないわけで・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：上手くは言えないな・・・ハハハ", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあ良いけどよ。攻略視点か奇麗視点かはテメーに任せるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、見た感じだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらく一本道だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、合っているか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　ッ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何でいちいちエオネさんに聞いてるのよ。バカアイン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、そこは何となくだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：特に何もいう事は無いです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか、分かった。ありがとう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：一本道って事はある程度見えたって事かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと気になる箇所もあるが、まあおそらく大丈夫だろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：難しい御託は置いといて、サクっといこーぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解だ。", ActionEvent.None);
    }
  }

  public static void Message800070(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800070 == false)
    {
      One.TF.Event_Message800070 = true;

      Message(ref m_list, ref e_list, "アイン：・・・ん？", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　アインは一旦全体を見渡し、その直後、目の前の柱へと注目した ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・どういう事だろうな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ココに来てからテメー突っかかってばかりだな。奇麗な造りが気になるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、攻略視点だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そこの柱、見てみろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ああ、この柱なら何も書いてねーけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そっちじゃない。もう一方の方だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あぁ！？もう一方に柱なんてねーだろうが！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その通り。柱が無いんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アハハハ、アインのおにーちゃんって本当に言い方が面白いよね☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：悪ぃ・・・そこの柱の相対性を見てみろと言いたかったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んな、最初っからそう言えよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：スマンかった。でだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、違うかな。ちょっと待ってくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：読めた・・・かな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただな・・・ちょっと気がかりが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アデル。ちょっと良いかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：はい、なんでしょうか☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：このオーランの塔。カラクリ的な要素はリセット可能か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：どーいう意味だろー、ん－とね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：この塔を一回出ればリセットされるよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：少なくとも、この塔に出てくる浮遊石の位置は例外なく、元に戻るのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：そーだねー。その辺りは安心して良いんじゃないかなー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとう。だいぶ助かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：行けそうな目星は付いたわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、五分五分だが、大丈夫だろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、途中で迷ったら迷ったで、ちゃんと言えよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);
    }
  }


  public static void Message800080(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800080 == false)
    {
      One.TF.Event_Message800080 = true;

      Message(ref m_list, ref e_list, "アイン：よしっ、結構かかったが行けたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・おい、アイン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん、なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そのよぉ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：テメーはここがゴール地点だっていつ分かったんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いつ・・・いつ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そこを考える時点でちょっ待てって言ーてえんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ強いて言えば、あの浮遊石で中央からスタートしたって辺りからだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：それがヒントになってるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ヒントってわけじゃないんだが、何ていうんだろうな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この塔は構造上、回帰するような構造になっている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：通路を進める時、スタート　→　通路　→　ゴールってなるんだが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：このオーランの塔はゴール地点とスタート地点が結構近い事が多い気がするんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だから、スタートが中央近辺という事は、このスタート近辺の所へ行ければ良いと考えたのさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：少し違うかなー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なっ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じーちゃんの教えによると、このオーランの塔は何度か改修があったそうだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：だから最初からぜーんぶ完全に奇麗に作られた構造はもう残ってないんだってー", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだったのか・・・、こいつは一本取られたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ全部が全部そうって訳でもなさそうだしな。気にしすぎだったかもしれない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そのテキトー加減で、言い得てない割には、クリアに漕ぎつける所がバカアインのおかしな所よね。ホント。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあまあ、良いじゃねえか・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：結果オーケーって事かよ。後はそこに乗るだけなんだな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだ。行ってみよう。", ActionEvent.None);
    }
  }

  public static void Message800090(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800090 == false)
    {
      One.TF.Event_Message800090 = true;

      Message(ref m_list, ref e_list, "（・・・ォ・・・ッゴオオオオォオォォ・・・ン！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：んっ・・・何か今・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：突風みたいなのが吹き抜けていったわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあ、こんな作りなんだし、風ぐらいあんじゃねえの？何か気になるってのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：気になるというか、ちょっと引っかかる感じだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、この通路の構造上、突風は起きやすいと思うか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ:この階層の通路は対流の方向性を制御しているので、不規則な突風は考え難いと思います。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：という事は・・・やっぱり何か居るって事かしら。要警戒ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この塔、おそらくもうすぐだ。ともかく、気をつけて行こう。", ActionEvent.None);

      // Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_20 + " 】が開始されました！", ActionEvent.GetNewQuest);
    }
  }

  public static void Message800100(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatYodirian == false && One.TF.QuestMain_Complete_00020 == false)
    {
      if (One.TF.Event_Message800160 == false)
      {
        One.TF.Event_Message800160 = true;
        Message(ref m_list, ref e_list, "？？？：ッフウウゥゥゥ・・・ッシュアアァァ！！！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：おっと、出たみたいだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：常に空中に浮いてますね。何らかの生物な様ですが。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：鳥類にしては形態がちょっと異質よね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：行動パターンもちょっと読みにくそうだけど・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：アインはどう思う？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：正直言って、この距離からだと殺気の様なものは感じられない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：守護者的な印象があるな。ガンガン攻めてくる様なタイプでは無いんだろう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ただ守護者とはいえ、実際に戦闘になればいよいよ本領発揮するって感じだろうな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：攻守を兼ね備えていそうだ。あまり無理に突っ込み過ぎず、持久戦前提で戦闘を行おう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で、相手が何かやらかしそうだったら、一旦防御に徹するのも手の一つだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：後方が安全とは限らない。この狭さでは後方まで届く様なエリア全体攻撃もやってくると見た方が良いだろう。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：各自で防ぎ切るか、または誰かが全体防御をできるように準備しておいた方が良いかもな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：よし、じゃあ行くぞ。エオネ、ラナ、アデル、ビリー、準備は良いか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：私はいつでも良いわよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アデル：いいよー☆", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：任せとけや！", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：よし、じゃあ行くぞ！！", ActionEvent.None);
      }
    }
  }

  public static void Message800105(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：戦闘だ！みんな、構えろ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.THE_YODIRIAN, ActionEvent.EncountBoss);
  }

  public static void Message800110(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatYodirian && One.TF.Event_Message800100 == false)
    {
      One.TF.Event_Message800100 = true;

      Message(ref m_list, ref e_list, "ヨーディリアン：フッ・・・ッシュウウウウゥゥゥゥ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、終わったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヨーディリアン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：だ、大丈夫みたいね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ふう、相変わらずこういう系統は疲れるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし！制覇制覇！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃ、そろそろ戻ろうぜ。もうここに用は無いだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあそう焦るなって。全体の視察を依頼されているんだ。奥にまだ何かありそうだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あぁ！？もうボスは倒したろーが。もうそろそろ引き上げ時なんじゃねーのかよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、ボス討伐は依頼じゃない。視察は一度しないといけないんだ。頼むぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：グッ・・・そりゃまあ・・・まあな・・・おうよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあこの先の通路に進むとしよう。", ActionEvent.None);
    }
  }

  public static void Message800120(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800170 == false)
    {
      One.TF.Event_Message800170 = true;

      Message(ref m_list, ref e_list, "アイン：おっ、こんな所にも扉があるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：鍵がかかってるみたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何か紋章は描かれているか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうね。鍵穴の上に星屑を示す紋章が描かれているわ。", ActionEvent.None);

      if (One.TF.FindBackPackItem(Fix.STAR_DUST_KEY))
      {
        One.TF.Event_Message800190 = true;

        Message(ref m_list, ref e_list, "アイン：なるほど、じゃあ例の場所で拾った星屑の鍵が使えそうだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：おそらくそうね。ちょっとやってみる？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：おお、ぜひ頼む。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：じゃあ、ちょっと待ってね・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：・・・こう・・・かしら・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "～～　ッカチリ　～～", ActionEvent.None);

        Message(ref m_list, ref e_list, "（　ギッギギィ・・・バタン　）", ActionEvent.None);

        Message(ref m_list, ref e_list, Fix.OHRANTOWER_KEYDOOR_3_O, ActionEvent.RemoveFieldObject);

        Message(ref m_list, ref e_list, "ラナ：開いたわ♪", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：サンキュー。後はどっちへ先に行くかだが・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ひとまず扉じゃない方を見てきても良いか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ご自由にどうぞ、お任せよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：よし、じゃあここはひとまず後にして、すぐそこの通路へ行ってみよう。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：しまったな・・・どこかで鍵を入手し忘れたか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：じゃあまずは鍵を探して来ないと、どうにもならないわね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ここを通るための鍵を探すしかないか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：探索ルートはお任せだから、ご自由にどうぞ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、分かった。", ActionEvent.None);
      }
    }
  }

  public static void Message800121(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }

  public static void Message800130(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800180 == false)
    {
      One.TF.Event_Message800180 = true;

      Message(ref m_list, ref e_list, "アイン：おっ、きっとこの先が最上階だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ行こうぜ、ビリー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、お、おうよ！ちょっと待ってろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ッグ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ビリーさん・・・あの、ひょっとしてですが、下を見るのが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ばっ、そ、そんなわけねーだろーが！女子供は引っ込んでな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、じゃあ私は怖いので、ビリーさん、この先はお願いします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なにーーーーーーー！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ビリーさん♪　私もちょっと高い所から見下ろすのは苦手なんで、お願いします♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なにーーーーーーー！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういうわけだ、ビリー。ここはもうお前しかいない。頼む！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おおおおおし、ま、ままままあ、任せておけば良いじゃねえかコラァ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っしゃあぁ、行ってやらぁ！見とけよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ ビリーは塔の最上階へ突貫していった ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：おーい、どうだ？何か見えるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おーい、ビリー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、見に行った方が良いんじゃないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。じゃ、俺が行ってくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ アインはビリーが向かった先へと向かっていった ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "", ActionEvent.HideMessageDisplay);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "～ １０分後 ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "", ActionEvent.HideMessageDisplay);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);

      Message(ref m_list, ref e_list, "ビリー：よーーー、てめぇら！元気にしてたか！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あら、無事だったのね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あぁ！？何の話か全然わかんねーな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやいやいや、お前のその応答だと、意味分からなくなるだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そんな事より。あそこで何か見つけたんだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おお。そうだった、忘れる所だったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：皆、俺はあの場所で驚くべき事象を見ちまったんだ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：良いか、聞いて驚くなかれよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お前のそのノリも意味不明だからな。普通に言った方が良いぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：良いじゃねえか、ちょっとぐらい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあその、なんだ。見ちまったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：空に・・・【" + Fix.WORLD_EVILPRIME_REDSTAR + "】が出てるのをな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：下を見て大陸を視察したのに、空に何かあるのを見つけたんですか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なに！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ ビリーは首を動かす事なく、刹那、アインへと視線を飛ばした ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "～ アイン、瞬間的なアイ・コンタクトでビリーへ応答を返した ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：あ、ああそうだ。大陸全土を見渡した後で、上空も視察したんだったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ヒソヒソ）（おい、ビリー、【したんだったな】じゃおかしいだろうが、おい）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：うぉっっっっっっほん！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：大陸も重要ではあるが、上空も全面的に視察した結果だ。間違いねえぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：凄いですね。さすがビリーさんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ザっとこんなもんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン；ビリー、お前やるじゃねえか。見直したぜ、本当に助かったよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ヘッ、今回だけだからな。次はねえぞ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン；分かった分かった。いやいやほんとサンキューな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン；よし、じゃあこの結果を持って国王エルミに報告に戻るとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あ、その前に待って。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン；ん？どうかしたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か見つけたんでしょ？その手に持ってる物。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン；ああ、そういえばそうだった。これを見てくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.ORIGIN_ROAD_KEY, ActionEvent.GetItem);

      Message(ref m_list, ref e_list, "～ アインは【" + Fix.ORIGIN_ROAD_KEY + "】をラナに見せた ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：それって・・・鍵？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン；そうみたいだな。さて、どうするかだが・・・とりあえずここは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン；エオネ、アデル、ラナ、ビリー。みんなありがとう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：どういたしましてー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうって事なかったわね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン；じゃあ、塔の最上階から視察も終えた事だし、一旦戻るとするか！", ActionEvent.None);

      // Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_20 + " 】が完了しました！", ActionEvent.QuestComplete);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_11 + " 】が更新されました！", ActionEvent.QuestUpdate);
    }
    else
    {
      if (One.TF.Event_Message800110 == false)
      {
        One.TF.Event_Message800110 = true;
        Message(ref m_list, ref e_list, "ビリー：おいちょって待て。そっちにもう用はねえだろ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうか？まあ、ここは一旦止めておくか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);

      }
      else
      {
        Message(ref m_list, ref e_list, "ビリー：おい、待てよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：悪い悪い。引き返すとするか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "0", ActionEvent.MoveBottom);
      }
    }
  }

  public static void Message800140(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800200 == false)
    {
      One.TF.Event_Message800200 = true;
      Message(ref m_list, ref e_list, "アイン：この扉、おそらく最初の入口の広間に繋がる箇所だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：こちらからだと鍵穴があるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：鍵穴の上には紋章が描かれているか・・・抽象的な形をしているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：専用の鍵を入手しない限り開けられそうにないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、鍵を探すとするか。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "ラナ：ここは、専用の鍵を入手しない限り開けられそうにないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、鍵を探すとするか。", ActionEvent.None);
    }
  }
  public static void Message800141(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800210 == false)
    {
      One.TF.Event_Message800210 = true;

      if (One.TF.Event_Message800200 == false)
      {
        One.TF.Event_Message800200 = true;

        Message(ref m_list, ref e_list, "アイン：この扉、おそらく最初の入口の広間に繋がる箇所だな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：こちらからだと鍵穴があるわね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：鍵穴の上には紋章が描かれているか・・・抽象的な形をしているな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：専用の鍵を入手しない限り開けられそうにないわね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：確か塔の頂上で鍵を入手してたわよね？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、おそらくそれで行けると思う。頼んだ。", ActionEvent.None);
      }
      else
      {

        Message(ref m_list, ref e_list, "アイン：しかし、不思議な形だな。この紋章は・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：例の鍵、使ってみる？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、頼んだ。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "ラナ：じゃあ、ちょっと待ってね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　ッカ・・・ッカリカリ・・・ッカ・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：普通のタイプね。じゃあ回すわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～　ッカチリ　～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ギッギギィ・・・バタン　）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.OHRANTOWER_KEYDOOR_4_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ラナ：開いたわ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おっしゃあ！これで入口から堂々と出られるな。おつかれさんっと！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アハハハ、おつかれさまー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：では、一旦戻りましょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー。じゃあオーランの塔から一旦出るとするか。", ActionEvent.None);
    }
  }

  // ファージル宮殿に帰還しているので番号が違うが、ストーリーの繋がり重視でこの番号（オーランの塔の続き）とする。
  public static void Message800150(ref List<string> m_list, ref List<ActionEvent> e_list)
  { 
    if (One.TF.Event_Message800220 == false)
    {
      One.TF.Event_Message800220 = true;

      Message(ref m_list, ref e_list, "アイン：よし、街に戻ってきたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：結構疲れたわね。私はもう今日は適用に食事を済ませて休むとするわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺も今日はそっこー寝るぜ。。。マジで疲れたわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：それでは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じゃ、またねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、皆またな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　メンバ一同はその場から去っていった ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：さてと、俺も休むとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：バックパックを整理しておいて・・・後は起きてからの行動だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownBlackOut);

      Message(ref m_list, ref e_list, "（　どう、行動するか　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　オーランの塔で見た事、起きた事をエルミ国王に伝えるんだろうか　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　エルミ国王は視察を俺達に任せてきた　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　あの頂上から見えた事は色々あった　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　フィオーネの湖は少し水位に変化が発生している　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　キルクード山脈の各箇所にある監視エリアに変化はない　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　キージク山道はちょっと土砂崩れがあるようには見えた、現在も工事中の所だろう　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　アーケンダイン街はいつも通り賑わっている。東西南北どちらかも交流は閉ざされていない　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ダルの門、いずれ解除予定とは聞いた事あるが、今もなお厚い壁として存在し続けている　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　廃墟サリタン、悪い意味で復興の兆しは見えない。破棄された当時のままだ。　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ただし・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　これらは、どれもこれも一般的な内容ばかりだ　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　これらを一つずつ報告する事になるんだろうか　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　そもそも、エルミ国王は俺にこれを見せたかったんだろうか　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　大陸全土の視察　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　それ自体はそれでいいと思うんだが、どうも違和感がある　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　視察自体は名目としての理由付けでしかなく　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ともかく、オーランの塔へ向かわせたかったんだろう。　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　そこが焦点なんだが・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　特に意識したわけじゃないんだが、ふと　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ビリーの様子を見に言った時に、ふと空を見上げたんだっけな　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　そこで、あの" + Fix.WORLD_EVILPRIME_REDSTAR + "が見つかった　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ただ、空にはそれ以外の色の星も無数に見える。　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　あの星自体が特別だったわけじゃない　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ただし、ちょっと気がかりになったのは位置関係だ　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　俺自身、星に関する知識は乏しいし、毎日きちんと把握しているわけじゃないが　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　元々あの位置に星があったかどうかだ　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　少なくとも、いままではあんな位置に星は無かった　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　これから、何かが起ころうとしているのか　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　いや、既に起きているのかもしれない　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　当初の依頼は　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ObsidianStone　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　あの依頼がずっと引っかかっている　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　最初に接触した時の感覚は今でも忘れていない　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　何らかの物質に触ったようにも感じたんだが　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　何も残っていなかった　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　いいや、きっとその何かに触れる事すら出来ていないのだろう　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ただし対象の認識はできた気がする　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　これを誰かに説明するのは難しい　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ツァルマンの里で育ったアデルなら、何か知っているだろうか　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　明日、動くしかないな　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　よし、寝よう　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.ReturnToNormal);

      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownExecRestInn);
      Message(ref m_list, ref e_list, "【 パーティは休息を取りました】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし、ラナおはよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：おはよう。バカアインも疲れの方はだいぶ取れたかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、完全回復さ！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アンタの場合もうちょっと疲れててもおかしくないんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：結構、皆が頑張ってくれてるからな。助かってるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そ、なら良いんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おーー！アイン！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、元気だな。ビリー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：てめー、そういやさ。一つ忘れてる事があるぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？何だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：国王様へご報告を忘れてるだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そのことか。忘れちゃいないぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：報告ネタが出来たらきちんと報告しに行くつもりだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なあ、そん時にさ。俺らも付いて行っていいのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫だろう。特にそんな厳密なルールはないはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でも言っとくけど、謁見できる事自体が奇跡に近いんだから、あまりハメを外さないようにね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。分かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、そこにいるアデルとエオネも同じ意向って事で良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：何でも良いよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：私も、特には。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：と、そういえばアデル。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：なーにー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、まあ後で良いか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：なんだろー、アハハ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ早速行動開始といくか。", ActionEvent.None);
    }
  }

  public static void Message800160(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800230 && One.TF.Event_Message800240 == false)
    {
      One.TF.Event_Message800240 = true;

      Message(ref m_list, ref e_list, "アイン：よし、来たな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なあ、何処へ行くつもりなんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すぐそこ、もう目の前だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：すぐそこって・・・どこの事よ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この塔の中枢部分だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、どうかしたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ、何でも。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺の読みが正しければ・・・合ってるはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：行こう。", ActionEvent.None);
    }
  }

  public static void Message800170(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800240 && One.TF.Event_Message800250 == false)
    {
      One.TF.Event_Message800250 = true;
      Message(ref m_list, ref e_list, "アイン：ここだ。やっぱりあったか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いつもの浮遊石じゃねえか。これで最上階へ行くつもりかよ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いいや、向かう先は最上階じゃないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直な所、これは行ってみないと分からないがおそらくは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：最下層だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：はああぁぁ！？マジかよっ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：論より証拠だ。行ってみよう。", ActionEvent.None);
    }
  }

  public static void Message800180(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800260 == false)
    {
      One.TF.Event_Message800260 = true;
      Message(ref m_list, ref e_list, "ビリー：いや、ちょっと待てって！おい！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうした？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：確かにテメーの読み通り、最下層っぽい所には来たが", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：信じられねーぜ。どうやってここがあるって分かったんだよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まず、この位置だが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：元々気になっていた節はある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：最上階に上るまでの間、俺達は色々な通路を通ってきたわけだが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：一か所だけどうしても通れなかった箇所がある。どこだと思う？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：タイルが無い場所なんていくらでもあっただろ。行けない箇所なんてそこら中にあったと思うぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、タイルが無い場所かどうか、って訳じゃないんだが・・・そうだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：表現を少し訂正しよう。俺達は何度かそのポイントを横切る様に通過してきているんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：最上階から最初の入口の層まで一気に降りてきたラインがそれに当たる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そのラインが中枢って事になるんだが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの中枢ラインには、最上階の浮遊石ともう一つ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：たった今乗ったこの浮遊石が元々設置されていたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺はそれを何度か確認している。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：見てきていたのかよ！？そんなの気にも留めてなかったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：全体を見なくちゃならないんだが、全体を見る際、細かい粒度の所まで見なくちゃならない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その辺りは師匠の受け売りだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：つまり、塔の最上階に行くまでの間、中枢の存在を認識しつつ調査していたら", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：中枢ラインの所にもう一つタイルがある事に気付いたって事かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その通りだ。さすがラナ、分かりやすい説明で助かる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なるほどな、そいつは分かったぜ。でだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：視察は、最上階からの確認で済んでるはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：これ以上、何があるってんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それは・・・上手く表現できないんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらく、例の件だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：例の件って・・・ひょっとしてObsidianStoneの事？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直、自分で言うのもなんだが、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺自身、何が起こっているのかは、はっきりとは分からないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれがObsidianStoneなのかどうかすらも把握できないでいる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そもそも接触できているのかどうかすら、分からないままだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だから、どういった事象が起こるのかは、完全な意味で予測できないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：危ない感じがしたらちゃんと引き返してよね。傍から見ていても突っ立っているだけにしか見えないんだから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、考えておく。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。おまえ、ほんと気を付けろよ。俺達は見てるだけなんだからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解だ。", ActionEvent.None);
    }
  }

  public static void Message801000(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message801000 == false)
    {
      One.TF.Event_Message801000 = true;
      One.TF.AvailableThirdEssence = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Inscribe_MatrixDragon_X(ref m_list, ref e_list);

      Message(ref m_list, ref e_list, Fix.OHRANTOWER_ObsidianPortal_1_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.ReturnToNormal);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、そんなまさか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：無かったって事なのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：バーカーアーイーン、聞こえてるのかしらー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンスの眼球は一段と拡がり続け・・・ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：お、おい。お前、ほんと大丈夫かよ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だ、大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：額の汗、びっしょりじゃねぇか。後、てめぇの両手だが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、おぉ。。。悪い悪ぃ。大丈夫だって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：血、出てるぜ。拳を握りすぎなんじゃねえのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンス、一瞬静止し、剣の切っ先を空中へ向けた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：血か・・・そうなんだろうか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺は一体・・・どこに対して・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あの、すみません・・・アイン・・・さん・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：その、戦闘態勢を解除してもらえないでしょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まさかとは思うけど、アンタ自分の立ち位置とそのモーション、分かってないわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ。分かってないつもりだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かってないって自分で言ってる時点でおかしいでしょうが。ボケに磨きがかかったのかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ッホラ。この部屋には何もないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：一応アンタがボサっとしてる間に壁の隙間とか通路近辺もチェックしておいたから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：だから、その臨戦態勢を解きなさい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：臨戦・・・体制？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あっ！！　本当だ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンスの眼球は元に戻り始めた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：皆、すまない。心配かけた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：っふう。心配というか・・・いつも以上に違和感を感じたわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あっぶねえ感じだったよな。なあ、アデル？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うーん？そーかなぁ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：いつもの姿って感じには見えたけどね☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いつもの姿って・・・お前、あれがいつもの姿って事はないだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：そーだねー。いつもの姿ってワードは筋違いだったかもね。気を付けるー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあここは制覇したんだ。一旦街へと戻ろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：待ちなさい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何を見たって言うの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：言いなさい。", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.TOWN_FAZIL_CASTLE, ActionEvent.GotoHomeTownForce);
    }
  }

  // ファージル宮殿に帰還しているので番号が違うが、ストーリーの繋がり重視でこの番号（オーランの塔の続き）とする。
  public static void Message801010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message801010 == false)
    {
      One.TF.Event_Message801010 = true;

      Message(ref m_list, ref e_list, "アイン：（　俺はあの場所で起きた事象について話をした　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　ただ、おそらく正確な説明はできていない　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　いや、厳密には正確な説明というのがそもそも出来ない事を出来る限り説明したつもりだ　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なので、このままじゃ何も言えないのは確かだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：だから、何でそういう話になるのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何でって言われてもな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：奇妙な石が見えている所までは覚えている。それだけは間違いじゃない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：だから、その奇妙な石って何よ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それは形容しがたいというか、何と言うか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：石", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハーッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "『ッシャゴオォォオォォ！！！』（ラナのテリブル・ストライクがアインに炸裂）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッグ・・・おま・・・ッゴホゴホ", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これで何回目だ。さすがの俺でもキツイぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：もうこれで７回目よ。一向に話が見えてこないからじゃない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よくわかんねーけどさ。蜃気楼かなんかじゃねえの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：蜃気楼・・・あの距離でそれはあり得ません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：わ、悪かったな。いや蜃気楼っつうか、なんか幻でもみたんじゃねーのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：幻・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう、それだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おぉ！やっぱそうか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：遠くから目視で見識があった時点では石の形状はしてないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：最初は幻か何かかと思って気にも止めないレベルなんだが、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、何かなと思って近づくと、徐々に容が形成され始めていくんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：近づくにつれ、その形成は少しずつ石の様なの形状になり始める。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：最終的には奇妙な石の容になっていて、微妙に声がするんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：というわけで、その石に触れてみたって所さ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：【というわけで】じゃねーだろが。全然説明になってねーぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：わ、悪い悪い・・・ハハハ", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：埒が明かないわ。ちょっとその正体不明の石に接触するまでの件は置いときましょ。もうホンット話が進まないわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやあ、でもココが重要なポイントなんだよ。こうなんつうか、波動と脳の痛覚と視覚がシンクロするというか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：もうそういうのは良いわ。聞いてるこっちが疲れてくるから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：もう一度聞くわ。その石と呼んでいる対象っていうのかしら。それに接触した時・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何を見たのかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何だったんだろうな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺が居ない所へ行ってた。って感じかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どこか別の所へ飛ばされてるという事？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・どうだろうなあ・・・移動しているのかどうかは分からない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、確かにそこで会話の様な事はしたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやでも、あれは会話というか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そもそも俺は口で喋ってないな。うん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：イメージだ。イメージで語りかけていただけだ。うん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、そんなところだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：【ま、そんなところだ】じゃねーだろが。全然説明になってねーぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なあ、アデル。このボケアインの言葉は的を得ているのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：さっすがに、分かんないねー。アッハハハ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ほらみろ。アデルですらこの反応だ。お前もっとちゃんと説明しろよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん、そういわれてもなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：具体的に何を話したのかを教えてちょうだい。いいわね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん、いや口で会話はしてねえんだよな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ああもう、分かったわ。じゃあその【口で会話はしてない】でも良いから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どういうイメージだったわけ？その内容を教えてちょうだい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そもそもイメージってものを口に出来ねえんだろ？お前さ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう、そうなんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：イメージで像や事象が発生して、そこで会話ではない何らかを通して事象把握を行っている感じなんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだ。伝わるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：やっぱりな。こいつから情報を聞き出すのは無理じゃねえか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：要領を得ないわね・・・無理かしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何となくだが、そのイメージではエルミ国王とファラ王妃の像が映し出されてたんだよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えええぇぇええ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うわっ、いきなり大きな声出すなって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そ、それを早くいいなさいよ！何なのよもう、まったくもう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、で？エルミ国王様とファラ王妃様とは何か会話したわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、そういうのはない。単にこうボワっと出ただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そこで俺はその像を見ながら、何とはなく語りかけたわけだが", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：え、でもエルミ様とファラ様とは会話してないのよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、誰と会話してるのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん、あれは会話というか何というか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：それ、さっきと同じやりとりになってるぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん、なるほど・・・誰と・・・誰と・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：誰・・・誰というか存在がそもそもよく分からなくてだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれがエルミ国王とファラ王妃だったのかどうかについては、はっきりと断言できない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：この際、その【誰】っていうのも良いわよ、カット。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エルミ様とファラ様の様な像との間で、何かがあったのね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、何というかだな。それなんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：起こりうる内容なんだと思う。そこの具体的なエッセンスは分からない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、その内容は俺達じゃ捉える事は不可能ではあるが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何も言えない状態、という事を創り出す事は出来ているのは確かだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なので、このままじゃ何も言えないのは確かだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：だから、何でそういう話になるのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何でって言われてもな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、アデル。この会話のやりとりも何回目だろーな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：８回目じゃない？まだまだ足りないねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ハーァ・・・おいアイン。この話は終わりだ。もー無理だろお前。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すまねえ、要領を得ないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：あ☆　質問ひとつ、いーですか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いいぞ。何だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：赤き星は偽。じーちゃんから教えられた事なんだけど、意味は分かる？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：赤き星は偽・・・そうだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらく、それ自体に意味がない。という意味じゃないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：なるほどー、ありがとー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ、もういいか？俺はそろそろ寝るぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、またな。ビリー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 ビリー・ラキは宿屋の食堂を出て、自分の部屋へ行った 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アデル：あ、じゃあアタシも戻るー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：失礼いたします", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アデル、エオネ共それぞれの部屋へと戻っていった 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、私も部屋に行くわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、ありがとな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か分かった事があれば必ず教えてね。協力するから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、分かった。サンキューな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 ラナ・アミリアはの自分の部屋へと戻っていった 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownBlackOut);

      Message(ref m_list, ref e_list, "アイン：（何か分かった事があれば・・・か）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（分かった事・・・把握できた事・・・理解しえた事・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（何だろうな　・・・　一体あれは　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.HometownNextDay);
    }
  }

  public static void Message801020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message801020 == false)
    {
      One.TF.Event_Message801020 = true;

      Message(ref m_list, ref e_list, "ラナ：どこ行くの？ファージル宮殿に行って国王様に報告するんじゃないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。そうだったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあファージル宮殿に向かうとするか。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "ラナ：ファージル宮殿に行って国王様に報告するんでしょ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：悪い悪い。ファージル宮殿が先だったな。", ActionEvent.None);
    }
  }

  public static void Message801030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message801030 == false)
    {
      One.TF.Event_Message801030 = true;

      Message(ref m_list, ref e_list, "アイン：よし、行こう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　俺達はファージル宮殿を出て、ムーンフォーダー方面にあるパルメテイシア神殿に向かった　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ファージル地方とは違い、ムーンフォーダー方面は足を踏み入れた事が無い場所だ　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　道中はあまり急ぎ過ぎず、通常のペースで進めるようにした　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　だが、この時の俺は　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ムーンフォーダー方面に行ける事で、少々気が緩んでいたかもしれない　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　迂闊とは言えないまでも　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　後手でも何とかなると考えた事が失策だった　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　こういった事態が起こり得るという事は常に想定しておくべきだったんだ　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なあ、ところでビリー。お前結構色んな所を旅して回ってるんだったよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アインが後ろに振り返った瞬間、場全体は異様な気配に包まれた！　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・ん？居ない・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っ！　しまった！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：アイン・ウォーレンスだな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：油断していたわけではないのだろう。ただ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：思慮がいつもと比べて浅い。その刻を狙わせてもらったぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ビリーだけじゃない・・・アデル、ラナ・・・エオネもか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　黒いフードを被った人物達は、一斉に全員の喉元にナイフを突きたてた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：ック・・・ごめんなさい。迂闊だったわ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：しくじった・・・すまねえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っく・・・用件は？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：今すぐに引き返してもらおう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：遠征許可証は持っている。それじゃ駄目なのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：駄目だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：交渉の余地はない。引き返せ、さもなくば", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　付きたてられたナイフから、赤い筋が発生し始めた　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まて、分かった！！　分かったから止めてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺は言葉がそんなに上手じゃない。ただ、何となくだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：引き返せば良いのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　どういう意味だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺達が一旦引き返したとしても、また別のタイミング、別のルートで潜ろうとするかもしれない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ほぅ・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その度にこんな感じで仕掛け続けるんなら、お互い消費するだけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そっちの用件を率直に聞きたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ひょっとしたら、何かの助けが出来るかもしれない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・　・・・ッフ", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ッフ・・・ッフハ・・・ッフハハハハ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：フザけた奴だ。こんな交渉は生まれて始めてだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：助けになるかもしれないだと？貴様、今自分達が置かれている状況が本当に分かっているのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：状況的には、完全に俺達は貴方がたの支配下に置かれている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こちらからは何もできない。要求を聞く以外に選択肢はないと思っている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だからこれは交渉ではない。俺は貴方の言う通りにするしかないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：噂通りか。本当に不思議なやつだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：では、要求内容を変更するとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうすればいい？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：簡単な内容だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：私との決闘を受けてもらおう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：完全に1vs1の状態での死闘だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "フードをかぶった男：セルモイ・ロウ様、そ、それは！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：黙ってろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "フードをかぶった男：し・・・失礼しました・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：どうだ？アイン・ウォーレンス。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：早速だ。構えろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンスは戦闘態勢を取りはじめた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ロウ：完全なる1vs1だ。行くぞ", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：３", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：２", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：１", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.NAME_SELMOI_RO, ActionEvent.EncountDuel);
    }
  }

  public static void MoveFloatingTile(ref List<string> m_list, ref List<ActionEvent> e_list, Fix.Direction direction, int num, int move)
  {
    Message(ref m_list, ref e_list, "アイン：さてと、このタイルで移動するか。", ActionEvent.None);

    if (direction == Fix.Direction.Right)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);
    }
    else if (direction == Fix.Direction.Left)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveLeft);
    }
    else if (direction == Fix.Direction.Top)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);
    }
    else if (direction == Fix.Direction.Bottom)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);
    }

    if (num == 1)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 2)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 3)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 4)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 5)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 6)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 7)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 8)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 9)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 10)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 11)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 12)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 13)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 14)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 15)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 16)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 17)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 18)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 19)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 20)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 21)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 22)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 23)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 24)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 25)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 26)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 27)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 28)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 29)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 30)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 31)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 32)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 33)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 34)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 35)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 36)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 37)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 38)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 39)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 40)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 41)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 42)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 43)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 44)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 45)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 46)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 47)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 48)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 49)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 50)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 51)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 52)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 53)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 54)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 55)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 56)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 57)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 58)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 59)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 60)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 61)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 62)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 63)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 64)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 65)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 66)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 67)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 68)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 69)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 70)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 71)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 72)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 73)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 74)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 75)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 76)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 77)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 78)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 79)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 80)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 81)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 82)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 83)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 84)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 85)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 86)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 87)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 88)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 89)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 90)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 91)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 92)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 93)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 94)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 95)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 96)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 97)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 98)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 99)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 100)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 101)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 102)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 103)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 104)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 105)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 106)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 107)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 108)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 109)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 110)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 111)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 112)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 113)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 114)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 115)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 116)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 117)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 118)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 119)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 120)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 121)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 122)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 123)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 124)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 125)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 126)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 127)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 128)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 129)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 130)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 131)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 132)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 133)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 134)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 135)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 136)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 137)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 138)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 139)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 140)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 141)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 142)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 143)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 144)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 145)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 146)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 147)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 148)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 149)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 150)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 151)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 152)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 153)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 154)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 155)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      } 
    }
    else if (num == 156)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 157)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 158)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 159)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 160)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 161)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 162)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 163)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 164)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 165)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 166)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 167)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 168)
    {
      if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 169)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 170)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 171)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 172)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 173)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 174)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 175)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 176)
    {
      for (int ii = 0; ii < move; ii++)
      {
        if (direction == Fix.Direction.Top)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
        else if (direction == Fix.Direction.Left)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
    }
    else if (num == 177)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 178)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 179)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 180)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 181)
    {
      if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
      else if (direction == Fix.Direction.Bottom)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
        }
      }
    }
    else if (num == 182)
    {
      if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
      else if (direction == Fix.Direction.Right)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
        }
      }
    }
    else if (num == 183)
    {
      if (direction == Fix.Direction.Left)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
        }
      }
      else if (direction == Fix.Direction.Top)
      {
        for (int ii = 0; ii < move; ii++)
        {
          Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
          Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
        }
      }
    }
    else if (num == 184)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 185)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 186)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 187)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 188)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 189)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall);
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjFall2);
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveFall); // 早め
      }
    }
    else if (num == 190)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise2);
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRise); // 早め
      }
    }
    else if (num == 191)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjLeft);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 192)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRight);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 193)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjBottom);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 194)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);
        Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
      }
    }
    // else if (num == 195) // 190に統合されているため、ココはコメントアウト
    else if (num == 196)
    {
      for (int ii = 0; ii < move; ii++)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise);
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjRise2);
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRise); // 早め
      }
    }

    Message(ref m_list, ref e_list, "（シュウウウゥゥン）", ActionEvent.None);

    if (num == 1)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 2)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 3)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 4)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 5)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 6)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 7)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 8)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 9)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 10)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 11)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 12)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 13)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 14)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 15)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 16)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 17)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 18)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 19)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 20)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 21)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 22)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 23)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 24)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 25)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 26)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 27)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 28)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 29)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 30)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 31)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 32)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 33)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 34)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 35)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 36)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 37)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 38)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 39)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 40)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 41)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 42)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 43)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 44)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 45)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 46)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 47)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 48)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 49)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 50)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 51)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 52)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 53)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 54)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 55)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 56)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 57)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 58)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 59)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 60)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 61)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 62)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 63)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 64)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 65)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 66)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 67)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 68)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 69)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 70)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 71)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 72)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 73)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 74)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 75)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 76)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 77)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 78)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 79)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 80)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 81)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 82)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 83)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 84)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 85)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 86)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 87)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 88)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 89)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 90)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 91)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 92)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 93)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 94)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 95)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 96)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 97)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 98)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 99)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 100)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 101)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 102)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 103)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 104)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 105)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 106)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 107)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 108)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 109)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 110)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 111)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 112)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 113)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 114)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 115)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 116)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 117)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 118)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 119)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 120)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 121)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 122)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 123)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 124)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 125)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 126)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 127)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 128)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 129)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 130)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 131)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 132)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 133)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 134)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 135)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 136)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 137)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 138)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 139)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 140)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 141)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 142)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 143)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 144)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 145)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 146)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 147)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 148)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 149)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 150)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 151)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 152)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 153)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 154)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 155)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 156)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 157)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 158)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 159)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 160)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 161)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 162)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 163)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 164)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 165)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 166)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 167)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 168)
    {
      if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 169)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 170)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 171)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 172)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 173)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 174)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 175)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 176)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 177)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 178)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 179)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 180)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 181)
    {
      if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
      else if (direction == Fix.Direction.Bottom)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 182)
    {
      if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
      else if (direction == Fix.Direction.Right)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 183)
    {
      if (direction == Fix.Direction.Left)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
      }
      else if (direction == Fix.Direction.Top)
      {
        Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 184)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 185)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 186)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 187)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 188)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 189)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 190)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }
    else if (num == 191)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);
    }
    else if (num == 192)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveRight);
    }
    else if (num == 193)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveBottom);
    }
    else if (num == 194)
    {
      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveTop);
    }

    Message(ref m_list, ref e_list, "アイン：よし、行こう。", ActionEvent.None);
  }

  public static void MoveFloatingTileFail(ref List<string> m_list, ref List<ActionEvent> e_list, Fix.Direction direction, int num)
  {
    Message(ref m_list, ref e_list, "アイン：さてと、このタイルで移動するか。", ActionEvent.None);

    if (direction == Fix.Direction.Right)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);
    }
    else if (direction == Fix.Direction.Left)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveLeft);
    }
    else if (direction == Fix.Direction.Top)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);
    }
    else if (direction == Fix.Direction.Bottom)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);
    }

    if (num == 1)
    {
      if (One.TF.Event_Message800130 == false)
      {
        One.TF.Event_Message800130 = true;
        Message(ref m_list, ref e_list, "アイン：・・・あれ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：おい、動かねーぞ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ちょっと待てよ。何らかの前提条件が整ってないのかもな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：条件？　そんなもんが、あるってのかよ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、おそらくな。他を当たってみよう。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：やっぱり駄目か。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：条件なんだろ？早く探そーぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
      }
    }
    else if (num == 2)
    {
      if (One.TF.Event_Message800140 == false)
      {
        One.TF.Event_Message800140 = true;
        Message(ref m_list, ref e_list, "アイン：・・・あれ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：おい、動かねーぞ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ちょっと待てよ。何らかの前提条件が整ってないのかもな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：条件？　そんなもんが、あるってのかよ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、おそらくな。他を当たってみよう。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：やっぱり駄目か。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：条件なんだろ？早く探そーぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
      }
    }
    else if (num == 3)
    {
      if (One.TF.Event_Message800150 == false)
      {
        One.TF.Event_Message800150 = true;
        Message(ref m_list, ref e_list, "アイン：・・・あれ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：おい、動かねーぞ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ちょっと待てよ。何らかの前提条件が整ってないのかもな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：条件？　そんなもんが、あるってのかよ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、おそらくな。他を当たってみよう。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：やっぱり駄目か。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：条件なんだろ？早く探そーぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
      }
    }

    if (direction == Fix.Direction.Right)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveLeft);
    }
    else if (direction == Fix.Direction.Left)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);
    }
    else if (direction == Fix.Direction.Top)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);
    }
    else if (direction == Fix.Direction.Bottom)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);
    }
  }

  public static void CallbackFloatingtile(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message800120 == false)
    {
      One.TF.Event_Message800120 = true;

      Message(ref m_list, ref e_list, "アイン：そうか・・・ここのタイルはもう下に行ってるんだったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：待って。足元をよく見ると何か小さいスイッチがあるわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：本当だな。これはおそらくあのタイルを元に戻してくれるヤツだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：見た所トラップはなさそうよ。私が慎重に押すから、アンタはそこにいなさい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハイ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：よし、行くわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      for (int ii = 0; ii < 16; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveObjRiseWithoutPlayer);
      }

      Message(ref m_list, ref e_list, "（シュウウウゥゥン）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、助かったぜ。サンキューな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：トラップ系が無いとは限らないから。今後もこういうのは私がやるわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー、頼んだぜ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：ラナ、タイル移動のスイッチを頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、いいわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      for (int ii = 0; ii < 16; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveObjRiseWithoutPlayer);
      }

      Message(ref m_list, ref e_list, "（シュウウウゥゥン）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：サンキュー。じゃあ、行くとしよう。", ActionEvent.None);
    }
  }

  public static void MoveWarpHoleTile(ref List<string> m_list, ref List<ActionEvent> e_list, Fix.Direction direction, int num)
  {
    Message(ref m_list, ref e_list, "アイン：さてと、これでワープ移動するか。", ActionEvent.None);


    if (direction == Fix.Direction.Right)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);
    }
    else if (direction == Fix.Direction.Left)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveLeft);
    }
    else if (direction == Fix.Direction.Top)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);
    }
    else if (direction == Fix.Direction.Bottom)
    {
      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);
    }

    Message(ref m_list, ref e_list, "", ActionEvent.HidePlayer);

    if (num == 1)
    {
      for (int ii = 0; ii < 13; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 2)
    {
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRise);
      }
      for (int ii = 0; ii < 13; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 3)
    {
      for (int ii = 0; ii < 13; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRise);
      }
    }
    else if (num == 4)
    {
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveFall);
      }
      for (int ii = 0; ii < 13; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 5)
    {
      for (int ii = 0; ii < 10; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
      for (int ii = 0; ii < 33; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 6)
    {
      for (int ii = 0; ii < 33; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
      for (int ii = 0; ii < 10; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 7)
    {
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRise);
      }
      for (int ii = 0; ii < 3; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 8)
    {
      for (int ii = 0; ii < 3; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveFall);
      }
    }
    else if (num == 9)
    {
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
      for (int ii = 0; ii < 4; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 10)
    {
      for (int ii = 0; ii < 10; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 11)
    {
      for (int ii = 0; ii < 6; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 18; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 12)
    {
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 2; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 13)
    {
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 4; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 14)
    {
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 4; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 15)
    {
      for (int ii = 0; ii < 7; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 14; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 16)
    {
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 18; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 17)
    {
      for (int ii = 0; ii < 10; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
      for (int ii = 0; ii < 9; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 18)
    {
      for (int ii = 0; ii < 10; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
    }
    else if (num == 19)
    {
      for (int ii = 0; ii < 11; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 20)
    {
      for (int ii = 0; ii < 18; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
      for (int ii = 0; ii < 6; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 21)
    {
      for (int ii = 0; ii < 18; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 22)
    {
      for (int ii = 0; ii < 7; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 5; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 23)
    {
      for (int ii = 0; ii < 2; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
      for (int ii = 0; ii < 4; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
    }
    else if (num == 24)
    {
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveRight);
      }
      for (int ii = 0; ii < 11; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveTop);
      }
    }
    else if (num == 25)
    {
      for (int ii = 0; ii < 5; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
      for (int ii = 0; ii < 7; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
    }
    else if (num == 26)
    {
      for (int ii = 0; ii < 2; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveBottom);
      }
      for (int ii = 0; ii < 8; ii++)
      {
        Message(ref m_list, ref e_list, "0.05", ActionEvent.ForceMoveLeft);
      }
    }

    Message(ref m_list, ref e_list, "", ActionEvent.VisiblePlayer);

    Message(ref m_list, ref e_list, "（シュワアアァァン）", ActionEvent.None);

    if (num == 1)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
    }
    else if (num == 2)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
    }
    else if (num == 3)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
    }
    else if (num == 4)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
    }
    else if (num == 5)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
    }
    else if (num == 6)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
    }
    else if (num == 7)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
    }
    else if (num == 8)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
    }
    else if (num == 9)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
    }
    else if (num == 10)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
    }
    else if (num == 11)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
    }
    else if (num == 12)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
    }
    else if (num == 13)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
    }
    else if (num == 14)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
    }
    else if (num == 15)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
    }
    else if (num == 16)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
    }
    else if (num == 17)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
    }
    else if (num == 18)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
    }
    else if (num == 19)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);
    }
    else if (num == 20)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
    }
    else if (num == 21)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
    }
    else if (num == 22)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
    }
    else if (num == 23)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);
    }
    else if (num == 24)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
    }
    else if (num == 25)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);
    }
    else if (num == 26)
    {
      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveRight);
    }

    Message(ref m_list, ref e_list, "アイン：よし、行こう。", ActionEvent.None);
  }
  #endregion

  #region "神秘の森"
  public static void Message900010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900010 == false)
    {
      One.TF.Event_Message900010 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。ええと、なになに・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　辿るべき道筋はなし。印無き者は通さずが掟　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・なるほど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なるほどって、てめぇ何か分かったのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もちろん、分からない。ただ、ある程度の雰囲気は掴んだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：雰囲気ってなによ。もうちょっと詳しく解説。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだなあ・・・何て言うんだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大概こういうのは壁を辿って行けば、大方網羅はできるだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただし、この森はそれだけは進ませてくれない。って所だろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：後、印無き者と書いてあるが、これは進めていくうちに分かるレベルじゃないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：入ってきた者はそのままの状態ではなく、何らかの経路を経て進む事を示しているんだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今の時点ではわからない。ただし、気に留めておけばそれで十分。って事だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：って事だ。じゃねーよ、全然意味不明じゃねえか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：頭が痛くなってきたわ・・・やっぱり聞くんじゃなかったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、まあ、看板は何度でも確認できる。気になったらまた見るとしよう！ッハッハッハ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　辿るべき道筋はなし。印無き者は通さずが掟　』", ActionEvent.None);
    }
  }

  public static void Message900020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "33:1:-13", ActionEvent.JumpToLocation);

    if (One.TF.Event_Message900020 == false)
    {
      One.TF.Event_Message900020 = true;

      Message(ref m_list, ref e_list, "アイン：なっ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：今・・・突然景色が変わったわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。大丈夫なんだろうな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：若干想定外だったが、まあ大丈夫さ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この手の仕掛けは何度か搔い潜った事はある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：気にせず、考えすぎず、注意しつつ、進めていこう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：わけわかんねぇ言い方だが、とにかく頼んだぜ！", ActionEvent.None);
    }
  }

  public static void Message900030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "5:1:-8", ActionEvent.JumpToLocation);
  }

  public static void Message900040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "15:1:-22", ActionEvent.JumpToLocation);
  }

  public static void Message900050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900030 == false)
    {
      One.TF.Event_Message900030 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。読んでみるか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　大自然を受諾し、森に選ばれし者のみ、過去と未来を繋ぐ権利が与えられる　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、オーケーオーケー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お前、ほんっと適当だよな。どこがオーケーなんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これは明らかに示唆を提示している。十分だろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ええと、すまない。解説だったな、よし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらくだが、何らかをこの森から授かって、森の中を通れるようにならないといけないって事だろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：最初は結構迷うのかもしれないが、きっと潜り抜けられる方法がある。そんな感じだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、過去と未来を繋ぐ権利の前に、重要な要素として【最初の迷い方】そのものについてだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ハイハイ、ありがとう。バカアインの奇妙奇天烈な解説はその辺りで結構よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか、悪いな。ちょっと説明は難しいんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ともかく探索を続けよう。きっと抜けられる道があるはずだ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　大自然を受諾し、森に選ばれし者のみ、過去と未来を繋ぐ権利が与えられる　』", ActionEvent.None);
    }
  }

  public static void Message900060(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "5:1:-8", ActionEvent.JumpToLocation);
  }

  public static void Message900070(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "18:1:-6", ActionEvent.JumpToLocation);

    if (One.TF.Event_Message900075 == false)
    {
      One.TF.Event_Message900075 = true;
      Message(ref m_list, ref e_list, "アイン：っな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：また別の場所に飛ばされたわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：結構、厄介だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：だな。これだけワープさせられてんだし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、そこじゃないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ、どこなんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：配置そのものが広範囲でバラついてるんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：茂みが深くて入れない場所もあるし、今みたいに飛ばされる場合もある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、問いかけの様なものも見当たらない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：道標がない以上は感覚的に進めるしかないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：感覚派のテメーがそれを言うかよ。おもしれー意見だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・ま、まあな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ、じゃあ本当にやみくもに進むしかないわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうかな。やみくもと言えば、そうなるのかもな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、広範囲にバラついている事自体がヒントにはなっている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それ自体を手がかりの一つと考えて進めればいいだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：だけどよ。その広範囲っていうのは本当かよ？こんだけ飛ばされてると位置関係なんか分かんねーだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：広範囲っていうのは確かに微妙だったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、今の所、通路はまだどこも繋がってないのは確かって事さ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なるほど、確かにな。まあその辺りはわかんねーから、任せるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、ここで悩んでいても先には進めない。まずは探索していってみよう。", ActionEvent.None);
    }
  }

  public static void Message900080(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "1:1:-28", ActionEvent.JumpToLocation);
  }

  public static void Message900090(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "3:1:-28", ActionEvent.JumpToLocation);
  }

  public static void Message900100(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "5:1:-28", ActionEvent.JumpToLocation);
  }

  public static void Message900110(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "48:1:-1", ActionEvent.JumpToLocation);
  }

  public static void Message900120(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "46:1:-1", ActionEvent.JumpToLocation);
  }

  public static void Message900130(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "44:1:-1", ActionEvent.JumpToLocation);
  }

  public static void Message900140(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
    {
      if (One.TF.FieldObject_MysticForest_00001 == false)
      {
        One.TF.FieldObject_MysticForest_00001 = true;

        UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_1_O);
      }
    }
    else
    {
      FailedBrushwood(ref m_list, ref e_list);
    }
  }

  public static void Message900150(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
    {
      if (One.TF.FieldObject_MysticForest_00004 == false)
      {
        One.TF.FieldObject_MysticForest_00004 = true;

        UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_4_O);
      }
    }
    else
    {
      FailedBrushwood(ref m_list, ref e_list);
    }
  }

  public static void Message900160(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "13:1:-1", ActionEvent.JumpToLocation);
  }

  public static void Message900170(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "9:1:-3", ActionEvent.JumpToLocation);
  }

  public static void Message900180(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "2:1:-5", ActionEvent.JumpToLocation);
  }

  public static void Message900190(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "8:1:-5", ActionEvent.JumpToLocation);
  }

  public static void Message900200(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "5:1:-2", ActionEvent.JumpToLocation);
  }

  public static void Message900210(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
    {
      if (One.TF.FieldObject_MysticForest_00002 == false)
      {
        One.TF.FieldObject_MysticForest_00002 = true;

        UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_2_O);
      }
    }
    else
    {
      FailedBrushwood(ref m_list, ref e_list);
    }
  }

  public static void Message900220(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "39:1:-13", ActionEvent.JumpToLocation);
  }

  public static void Message900230(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "43:1:-18", ActionEvent.JumpToLocation);
  }

  public static void Message900240(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "43:1:-8", ActionEvent.JumpToLocation);
  }

  public static void Message900250(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
    {
      if (One.TF.FieldObject_MysticForest_00003 == false)
      {
        One.TF.FieldObject_MysticForest_00003 = true;

        UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_3_O);
      }
    }
    else
    {
      FailedBrushwood(ref m_list, ref e_list);
    }
  }

  public static void Message900260(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
    {
      if (One.TF.FieldObject_MysticForest_00005 == false)
      {
        One.TF.FieldObject_MysticForest_00005 = true;

        UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_5_O);
      }
    }
    else
    {
      FailedBrushwood(ref m_list, ref e_list);
    }
  }

  public static void Message900270(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900050 == false)
    {
      One.TF.Event_Message900050 = true;

      Message(ref m_list, ref e_list, "アイン：看板があるな。読むぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　うつろいを重ね、遠くを廻りて、祈願を果たす　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。いつものテキトー理論で解説するんだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン、その場で微動だにせず目を細めた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：分からない、な。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：珍しいわね。そんな考えこむなんて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ゴラトラム洞窟の時も少し違和感はあったんだが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この看板はより色が濃い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：色が濃い？おい、何言ってんだ、意味わかんねーぞ。ある程度は解説しろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ある程度迷いながら進めて、祈願に相当する何かを会得するんだろうが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その祈願が、何を指しているのかがわからない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、何か知らないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっとピンと来ないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか・・・・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：いつものノリで進めて行くと危ないっていう印象はあるのかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、それは無いな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そんなに気になるんだったら一応メモしておくけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、すまない。頼んだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：他に何か気になった事があれば、ちゃんと言ってよね。バカアインの変な感覚は察知できないんだから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解だ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　うつろいを重ね、遠くを廻りて、祈願を果たす　』", ActionEvent.None);
    }
  }

  public static void Message900280(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "9:1:-20", ActionEvent.JumpToLocation);
  }

  public static void Message900290(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "4:1:-15", ActionEvent.JumpToLocation);
  }

  public static void Message900300(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "35:1:-11", ActionEvent.JumpToLocation);
  }

  public static void Message900310(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "36:1:-5", ActionEvent.JumpToLocation);
  }

  public static void Message900320(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "32:1:-1", ActionEvent.JumpToLocation);

    Message900385(ref m_list, ref e_list);
  }

  public static void Message900330(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "32:1:-5", ActionEvent.JumpToLocation);
  }

  public static void Message900340(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "28:1:-5", ActionEvent.JumpToLocation);
  }

  public static void Message900350(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "28:1:-1", ActionEvent.JumpToLocation);
  }

  public static void Message900360(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "24:1:-6", ActionEvent.JumpToLocation);
  }

  public static void Message900370(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "28:1:-6", ActionEvent.JumpToLocation);
  }

  public static void Message900380(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
    {
      if (One.TF.FieldObject_MysticForest_00011 == false)
      {
        One.TF.FieldObject_MysticForest_00011 = true;

        UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_11_O);
      }
    }
    else
    {
      FailedBrushwood(ref m_list, ref e_list);
    }
  }

  public static void Message900385(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900051 == false)
    {
      One.TF.Event_Message900051 = true;

      Message(ref m_list, ref e_list, "アイン：おっと！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：今、俺達目の前の通路をかっ飛ばしたよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これも、この森の仕掛けって事か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いや、仕掛けかどうかはわかんねーだろうが。俺達が早すぎただけかもしれないぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なっ、そう来るか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：考えられなくもねー。だろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：う、うーん。どうだろうな。。。まあ、否定はできない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っしゃ！もっかいだ！絶対に通ってみせる！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：うおおおお！", ActionEvent.None);

      Message(ref m_list, ref e_list, "32:1:-5", ActionEvent.JumpToLocation);

      Message(ref m_list, ref e_list, "ビリー：うおおおお！", ActionEvent.None);

      Message(ref m_list, ref e_list, "32:1:-1", ActionEvent.JumpToLocation);

      Message(ref m_list, ref e_list, "ビリー：クッソ、どうやっても駄目だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、突っ込んでどうにかなるとは考えられないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どーすんだよ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：気にはなるが、このまま進めるしかないだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んじゃあ、進めてみるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、何となくだが、行ける気はする。慎重に進めていこう。", ActionEvent.None);
    }
  }

  public static void Message900390(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "24:1:-12", ActionEvent.JumpToLocation);
  }

  public static void Message900400(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "24:1:-8", ActionEvent.JumpToLocation);
  }

  public static void Message900410(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "16:1:-11", ActionEvent.JumpToLocation);
  }

  public static void Message900420(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "20:1:-11", ActionEvent.JumpToLocation);
  }

  public static void Message900430(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "33:1:-7", ActionEvent.JumpToLocation);
  }

  public static void Message900435(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900055 == false)
    {
      One.TF.Event_Message900055 = true;

      Message(ref m_list, ref e_list, "アイン：おっと、何か面白いものを見つけたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっとそれ。面白いっていう代物じゃないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何なんだ？これは？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：古代栄樹。遥か昔から言い伝えられている幻の大樹の事よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：普通に言って、手に入れられる代物じゃないわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなのか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかし、何か不思議な感覚がするな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：持っているだけで、何かに誘導される様な感じが伝わってくるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：「古代栄樹」は大自然からの導きを指し示す「言霊」としてよく使われるわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：その古代栄樹の枝だから、何かを感じ取ってもおかしくはないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほどな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・そうか。分かったぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こいつを例の深い茂みにかざしてみよう。きっと何か起こる筈だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ可能性はありそうね。やってみましょう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
    }
  }

  public static void Message900436(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900056 == false)
    {
      One.TF.Event_Message900056 = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お前、また変な所で足を止めるよな。何か見つかったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：道筋が見つかった気はする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そーか？？普通の場所に見えるけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここに来る時、さっき例の深い茂みを通過しただろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあ、そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：例の茂みを通ったら必ずそうだっていうわけじゃないが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：少なくとも、このルートを少し進んでみた感じ、元のルートに戻る気配はない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なので、少し進んでいるのは確かだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあどっち行けば良いか正直俺にはわかんねー。その辺りは頼んだぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、続けて進んでみよう。", ActionEvent.None);
    }
  }

  public static void Message900440(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900060 == false)
    {
      One.TF.Event_Message900060 = true;

      Message(ref m_list, ref e_list, "ビリー：おお！？また何か使えそうなのが出てきたな！　アイン！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：祈願の御札・・・か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それを持っていれば、また何かに使えそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだよ、あんま嬉しそうじゃねえな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、そういう訳じゃねえ。このお宝は貴重なアイテムだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ早速このアイテムが使えそうな場所を・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと良いかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アンタらしくないわよ。いつもの意味不明な内容は展開しないわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：バカアインはいつも通りしゃべってた方が普通よ。ちゃんと言いなさいよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：悪い悪い。確かにそうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、改めて・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：" + Fix.KIGAN_OFUDA + "は使える。それは間違いじゃない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：例の看板にあった「祈願」というキーワードとも合致しているし、きっとそれで良いんだと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、その事のみを指しているのかどうか、どうにも合致しない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どういう意味よ？", ActionEvent.None);

      if (One.TF.Event_Message600120)
      {
        Message(ref m_list, ref e_list, "アイン：ゴラトラム洞窟で、こんな看板があっただろ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　満たされるは精神と英知。語り継ぎし者よ、安らぎと平穏を。 ～", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ビリー。覚えてるだろ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：俺はその洞窟に行ってねーよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうなのか。まあ、あったんだよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で、この看板も同じ感覚が湧いてくるんだよ。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：ゴラトラム洞窟で見た看板をきちんと覚えてないんだが、", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：悪いラナ。覚えてるか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：幾つかあったけど、おそらくこれの事よね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "～　満たされるは精神と英知。語り継ぎし者よ、安らぎと平穏を。 ～", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ビリー。お前も思い出したか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：俺はその洞窟に一緒には行ってねーよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ハハハ、そういやそうだった。悪い。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で、この看板からは同じ感覚が湧いてくるんだよ。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "アイン：【詩】っていえば良いのかな。上手くいえないんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何かの一節に感じないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：一節と言われてもね。ピンと来るものはないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：キーワード的な何かを指し示すようなものでは無い気がするんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：" + Fix.KIGAN_OFUDA + "は、実際この神秘の森を通過するための要素ではあるだろうが、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その要素を指し示すだけの代物とはちょっと思えないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すまねえが、これ以上は上手く言えない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ほんと、今の時点でもサッパリね。", ActionEvent.None);
      // 満たされるは精神と英知。語り継ぎし者よ、安らぎと平穏を。
      // うつろいを重ね、遠くを廻りて、祈願を果たす // todo

      Message(ref m_list, ref e_list, "アイン：まあ、そんな所だ。結局の所、進めるしかないかもな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か変な所で気づいたらまた言ってよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、分かった。", ActionEvent.None);
    }
  }

  public static void Message900450(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900070 == false)
    {
      One.TF.Event_Message900070 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。ええと、どれどれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　資格なき者、進むこと叶わず、立ち去るのみ　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何かと必要な物が無いと、通してくれそうなさそうだな。。。", ActionEvent.None);

      if (One.TF.FindBackPackItem(Fix.KIGAN_OFUDA))
      {
        Message(ref m_list, ref e_list, "ビリー：例の御札を持ってんだろ？行ってみよーぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：特に該当しそうなアイテムは入手してないわよね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、これは進んでも無駄かも知れないな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ここは一旦置いといて、他を当たってみよう。", ActionEvent.None);
      }
    }
    else
    {
      Message(ref m_list, ref e_list, "『　資格なき者、進むこと叶わず、立ち去るのみ　』", ActionEvent.None);
    }
  }

  public static void Message900460(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "29:1:-21", ActionEvent.JumpToLocation);
  }

  public static void Message900470(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "30:1:-16", ActionEvent.JumpToLocation);
  }

  public static void Message900480(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "27:1:-21", ActionEvent.JumpToLocation);
  }

  public static void Message900490(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "26:1:-18", ActionEvent.JumpToLocation);
  }

  public static void Message900500(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900080 == false)
    {
      One.TF.Event_Message900080 = true;

      Message(ref m_list, ref e_list, "アイン：なっ！これは！", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　突如、森の奥底から激しい突風がアイン達を襲い始めた！　～", ActionEvent.MessageDisplay);

      if (One.TF.FindBackPackItem(Fix.KIGAN_OFUDA) == false)
      {
        Message(ref m_list, ref e_list, "アイン：うわ！！やべ！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
        Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
        Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);

        Message(ref m_list, ref e_list, "アイン：みんな、大丈夫か？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：ああ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：私も平気よ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：これは駄目だな。あんな突風の中、強引に進む事は出来ない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ちょっと他を探索してみよう。きっと何かあるはずだ。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：ッグ・・・！", ActionEvent.None);

        Message(ref m_list, ref e_list, "　～　その時、アインの手元にある" + Fix.KIGAN_OFUDA + "が光り始めた！　～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アイン：こ、これは・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：みんな、大丈夫か？吹き飛ばされてないか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：お、お、おうよ。何とかな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：驚いたわね、大丈夫よ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：どうやらこの御札が効いたみたいだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "　～　数秒後、激しい突風は次第に勢いが弱くなり、そよ風に変わり始めた　～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "アイン：よし、無事突破できたみたいだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：その御札の中に何かカラクリがあるのかも知れないわね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、ちょっと内容は見ない事にするが、ココを通るときは持っておかないとな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：よく分かんねえが行けたって事だな！このままガンガン行こうぜ！", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：オーケー、進めるとしよう。", ActionEvent.None);
      }
    }
    else
    {
      Message(ref m_list, ref e_list, "　～　突如、森の奥底から激しい突風がアイン達を襲い始めた！　～", ActionEvent.None);

      if (One.TF.FindBackPackItem(Fix.KIGAN_OFUDA) == false)
      {
        Message(ref m_list, ref e_list, "アイン：クッ！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
        Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);
        Message(ref m_list, ref e_list, "1", ActionEvent.MoveTop);

        Message(ref m_list, ref e_list, "アイン：このままじゃ駄目だな。他を探索しよう。きっと何かあるはずだ。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：ッグ・・・確かこれだったな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "　～　アインは光り輝く" + Fix.KIGAN_OFUDA + "をかざした！　～", ActionEvent.None);

        Message(ref m_list, ref e_list, "　～　数秒後、激しい突風は次第に勢いが弱くなり、そよ風に変わり始めた　～", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：よし、行こう。", ActionEvent.None);
      }
    }
  }

  public static void Message900510(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "23:1:-28", ActionEvent.JumpToLocation);
  }

  public static void Message900520(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "23:1:-24", ActionEvent.JumpToLocation);
  }

  public static void Message900530(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "27:1:-26", ActionEvent.JumpToLocation);
  }

  public static void Message900540(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "23:1:-26", ActionEvent.JumpToLocation);
  }

  public static void Message900550(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "35:1:-24", ActionEvent.JumpToLocation);
  }

  public static void Message900560(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "31:1:-24", ActionEvent.JumpToLocation);
  }

  public static void Message900570(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "33:1:-28", ActionEvent.JumpToLocation);
  }

  public static void Message900580(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "33:1:-24", ActionEvent.JumpToLocation);
  }

  public static void Message900590(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "38:1:-26", ActionEvent.JumpToLocation);
  }

  public static void Message900600(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
    {
      if (One.TF.FieldObject_MysticForest_00006 == false)
      {
        One.TF.FieldObject_MysticForest_00006 = true;

        UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_6_O);
      }
    }
    else
    {
      FailedBrushwood(ref m_list, ref e_list);
    }
  }

  public static void Message900610(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "31:1:-28", ActionEvent.JumpToLocation);
  }

  //public static void Message900620(ref List<string> m_list, ref List<ActionEvent> e_list)
  //{
  //  if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
  //  {
  //    if (One.TF.FieldObject_MysticForest_00007 == false)
  //    {
  //      One.TF.FieldObject_MysticForest_00007 = true;

  //      UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_7_O);
  //    }
  //  }
  //  else
  //  {
  //    FailedBrushwood(ref m_list, ref e_list);
  //  }
  //}

  //public static void Message900630(ref List<string> m_list, ref List<ActionEvent> e_list)
  //{
  //  if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
  //  {
  //    if (One.TF.FieldObject_MysticForest_00008 == false)
  //    {
  //      One.TF.FieldObject_MysticForest_00008 = true;

  //      UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_8_O);
  //    }
  //  }
  //  else
  //  {
  //    FailedBrushwood(ref m_list, ref e_list);
  //  }
  //}

  //public static void Message900640(ref List<string> m_list, ref List<ActionEvent> e_list)
  //{
  //  if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
  //  {
  //    if (One.TF.FieldObject_MysticForest_00009 == false)
  //    {
  //      One.TF.FieldObject_MysticForest_00009 = true;

  //      UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_9_O);
  //    }
  //  }
  //  else
  //  {
  //    FailedBrushwood(ref m_list, ref e_list);
  //  }
  //}

  //public static void Message900650(ref List<string> m_list, ref List<ActionEvent> e_list)
  //{
  //  if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
  //  {
  //    if (One.TF.FieldObject_MysticForest_00010 == false)
  //    {
  //      One.TF.FieldObject_MysticForest_00010 = true;

  //      UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_10_O);
  //    }
  //  }
  //  else
  //  {
  //    FailedBrushwood(ref m_list, ref e_list);
  //  }
  //}

  public static void Message900660(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "46:1:-15", ActionEvent.JumpToLocation);
  }

  public static void Message900670(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "41:1:-17", ActionEvent.JumpToLocation);
  }

  public static void Message900680(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "40:1:-11", ActionEvent.JumpToLocation);
  }

  public static void Message900690(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "46:1:-9", ActionEvent.JumpToLocation);
  }

  public static void Message900700(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.FindBackPackItem(Fix.KODAIEIJU_EDA))
    {
      if (One.TF.FieldObject_MysticForest_00012 == false)
      {
        One.TF.FieldObject_MysticForest_00012 = true;

        UpdateBrushwood(ref m_list, ref e_list, Fix.MYSTICFOREST_BRUSHWOOD_12_O);
      }
    }
    else
    {
      FailedBrushwood(ref m_list, ref e_list);
    }
  }

  public static void Message900710(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "18:1:-16", ActionEvent.JumpToLocation);
  }

  private static void UpdateBrushwood(ref List<string> m_list, ref List<ActionEvent> e_list, string identity)
  {
    if (One.TF.Event_Message900040 == false)
    {
      One.TF.Event_Message900040 = true;

      Message(ref m_list, ref e_list, "アイン：おっ、この深い茂み・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうする？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：例の枝をかざしてみよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アインは" + Fix.KODAIEIJU_EDA + "を茂みに向かってかざした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "　（ザ・・・ッザザザァァァ）", ActionEvent.None);

      Message(ref m_list, ref e_list, identity, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：おっしゃ！開いたぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：実際に開くのは予想してたとはいえ、驚かされるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、正直なところ偶然だけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おめーの偶然はいつもインチキＬＶだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあインチキはさておき、これで色々と進めるようになるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：他の場所もあったわよね。探索を続けましょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：おっ、例の深い茂みだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、頼んだわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アインは" + Fix.KODAIEIJU_EDA + "を茂みに向かってかざした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "　（ザ・・・ッザザザァァァ）", ActionEvent.None);

      Message(ref m_list, ref e_list, identity, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：よし、行こう！", ActionEvent.None);
    }
  }

  private static void FailedBrushwood(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900041 == false)
    {
      One.TF.Event_Message900041 = true;

      Message(ref m_list, ref e_list, "アイン：おっ、何か茂みが深い所だが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ひょっとして強引に通れるんじゃねえのか！？突貫してみよーぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ！ビリー、待て！", ActionEvent.None);

      Message(ref m_list, ref e_list, "（突如、茂みの中から長くて黒い蔦がビリーに襲い始めた！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "　（ザザッ！！ザザザァァァ！！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ヌウウオオオオォォォ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ビリーは元の場所へ吹き飛ばされてしまった！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：グッフォー！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：やはり駄目か・・・通させてもらえそうにないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：痛ってーな、クソ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫か。無理やり突っ込むのは止せって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んなもん、突破できると思ったんだけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しばらくココは通れそうにない。他をあたろう。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：ここか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうする？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、他をあたろう。", ActionEvent.None);
    }
  }

  public static void Message900720(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900090 == false)
    {
      One.TF.Event_Message900090 = true;
      One.TF.AvailableSecondEssence = true;

      Message(ref m_list, ref e_list, "アイン：こ、この石は！！", ActionEvent.None);

      Inscribe_MatrixDragon_X(ref m_list, ref e_list);

      Message(ref m_list, ref e_list, Fix.MYSTICFOREST_ObsidianPortal_1_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.ReturnToNormal);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：はいはい、ボーっと突っ立ってるのもそこまでよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：今度もやたらと冷や汗をかいてるわね。どうしたのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやあぁ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、まあ何かが起きてるんだよ。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：さすがに意味不明過ぎるだろ。ヤキが回ったか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっとな、どうしても納得が行かない観点があってだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、まさかのひょっとしてだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは、何かを掴むような仕草で手のひらを上に向けて少し拡げて見せた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：無いんだよな、これが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうみても何もないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：アインさんとしては、何かに接触された様な感覚があったんでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは自分の手元に目をやり、同時に、視線を全体へと向けた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だが、証明するどころか痕跡一つすらない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：完全に不確定な出来事だ。こればかりは表現できない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：てめぇが何かその中央付近にフラフラと行ったのは確かだぜ。俺達はここで見てたしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなのか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：この神秘の森であんたにだけしか感じられない何かがあったのかしらね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直な所、分からないけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うん。この件についてはすまない。忘れてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：皆、この一件は保留だ。次の探索へ行くとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：別に行くのは良いけど、どこかで突然ぶっ倒れたりしないでよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、大丈夫だ。行こう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　各キャラクターのエッセンス・ツリー＜第二属性＞が開放されました。", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "　キャラクターのエッセンス・ツリーを開いて確認してみましょう。 ", ActionEvent.MessageDisplay);

    }
  }

  public static void Message900730(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatFlansisQueenOfVerdant == false)
    {
      if (One.TF.Event_Message900100 == false)
      {
        One.TF.Event_Message900100 = true;

        Message(ref m_list, ref e_list, "アイン：まあ・・・居るか・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アインはその先にある広間に視線を向けた", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "1", ActionEvent.UpdateUnknownTile);

        Message(ref m_list, ref e_list, "？？？・・・（コオオォォォ）・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：あいつ、ボスっぽいな。ビンゴか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、間違いないな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：勝算はあるわけ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、あるな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：作戦としては、まずビリー。お前が突貫してくれ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：マジかよ。まあ、良いけどな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：その後、すぐラッシュで攻勢にしてくれ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：マジかよ。まあ、やって出来なくはねえけどな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あとは頼んだぜ、ビリー。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：おうよ、任せておけ！", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ちょっと待って。戦術が構築されてないわよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：うっ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：すまん・・・ええとだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ビリー、最初の前線構築はお前に頼んだと言っている。文字通り突貫して攻勢の局面を作ってほしい。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：おっ、おうよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ただし一人に任せるわけじゃない。その後の防衛ライン構築、戦線維持は当然俺もやる。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ただし、どうしてもこの手のボスは特殊系能力を使ってくる感じはする。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうなると前線崩壊は逃れない。そこでだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：いざという時のサポートは、ラナに頼りたい。行けるか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：任せてちょうだい。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あと、特にちょっと気になるのが、あれだ。あのボスだが・・・", ActionEvent.None);
        
        Message(ref m_list, ref e_list, "アイン：あの異常な槍の形状をしている箇所があるだろう。あれだけは絶対に気を付けた方が良い。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：気を付けるったって、実際どうすんだよ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：避ける、か、防御・・・いや", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：防御じゃすまないかもな・・・どうかな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：おいおい、マジかよ。食らったらシャレになんねーって話か。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：端的に言うと、そうだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：エオネが居てくれると、こういう局面は助かるんだが。今はこの構成で行くしかないな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：よし、じゃあ。攻め込むとしますか！", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：１．基本通りの戦局形成で行こう。下手に崩さなくて良い。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：２．敵の戦略めいた動きはある程度察知して対策戦術を出す事。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：３．あとはあのヤバい槍の形状には最大限の警戒を怠らない事。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：おう！", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：了解よ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：っしゃ、行くぜ！", ActionEvent.None);
      }
    }
  }

  public static void Message900740(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatFlansisQueenOfVerdant == false)
    {
      Message(ref m_list, ref e_list, "？？？：コオオォォ・・・ォォァアアアア！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ビリー、ラナ。準備はいいか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：いつでも良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っしゃ、来いや！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、行くぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.FLANSIS_OF_THE_FOREST_QUEEN, ActionEvent.EncountBoss);
    }
  }

  public static void Message900750(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatFlansisQueenOfVerdant && One.TF.Event_Message900110 == false)
    {
      One.TF.Event_Message900110 = true;

      Message(ref m_list, ref e_list, "フランシス：コッ・・・コッ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ど、どうだ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "フランシス：ッコオオォォォ・・・　ォォォォォ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "フランシス：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ようやく倒せたみたいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの槍は本当ヤバかったな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：皆のおかげだ、助かったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：しっかし、どんな素材で出来てたんだ、この槍よぉ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あっ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　フランシスの連槍がとっさに動き、ビリーに向けて突き刺してきた！！　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：しまっ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　その瞬間、一閃の光がフランシスの連槍へと放たれた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "フランシス：コァァアアァァァァ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッドサ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なっ・・・なっ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何だ今のああぁぁぁ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうやら今のは・・・【矢】が放たれたみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えっ、じゃあまさか・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　その時、森の茂みから一つの影が姿を現した　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：今のはエオネさんが？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかし、エオネの矢は本当に刺さるな・・・あの槍を破壊出来るとは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：相当弱っている状態でしたので、それほどの威力は必要なかったと思います。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それでもあそこまで破壊出来るとは、やっぱり凄いな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ホント・・・マジでビビったぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ってか、俺の目の前をスッゲー勢いで矢が通ったからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：助かったよ、本当にありがとう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ、別に。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかしエオネ。ここまでは一体どうやって来れたんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：えっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：茂みの中を潜って来ましたが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：確かに、今も茂みの中から出てきたって感じだったわね。驚いたわ本当に。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：って事は、じゃあ例の森の仕掛けとかは・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：私の場合は既に加護を受けておりますので、そういった事は起きませんね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジか。俺達もそういう加護を受けたいもんだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それはそうと、一応ボスは倒したのよね。この先がツァルマンの里へ行ける道だと思うんだけど？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・な、何？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ツァルマンの里よ。知らないの？一般的な伝承話として伝わっている話よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：知らないな。ここを抜けると何かの里に出るって事なのか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ホンット、そういう所は知らないままで行動指針決めてるのね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ビ、ビリー！お前も！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：オルガウェイン傭兵訓練施設で普通に習っただろーが。そこ覚えてねえのは、ある意味スゲーぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ええと、エオネさんも・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：スミマセンが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか・・・いや悪かった。次からはもう少し行き先を確認してから物事を決めるとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうしてちょうだい。これで進められている事自体が驚きよホント。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・そうだな。分かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ところで、エオネはこの先どうするんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：私もツァルマンの里へ向かいますが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あっ・・・　・・・　そ、その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっとアイン。彼女とは別々で行動してもらった方が良いんじゃないかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっと、すまない。そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさん、またどこかで機会があれば。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ、分かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、またどこかでな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、そうではなく。ツァルマンの里ではきちんと合流したいと思います。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あ、そうなのね。了解よ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ、では先に行っています。それでは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　エオネはその場から立ち去っていった　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ俺達もツァルマンの里に赴いて一休憩入れるとするか！", ActionEvent.None);
    }
  }

  public static void Message900760(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "15:1:-22", ActionEvent.JumpToLocation);
  }

  public static void Message900800(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message900120 == false)
    {
      One.TF.Event_Message900120 = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何？気になる点でもあるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直、気になるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アデル、エオネ。ちょっと教えてくれないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：何かなー☆　　　エオネ：なんでしょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ツァルマンの里に行き来している者は、毎回あの入り組んだ道のりを選んではいないって事だよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：そーだねー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だとすると、この辺りかと思ってさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネも既にツァルマンの里に辿り着いた事があるって事は、俺達が通った道は使ってないよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：全て異なるルート、というわけではありませんが、そうですね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：という事で怪しい場所と言ったらココしかないんだがな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：でも、例の古代栄樹の枝を振りかざしても", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：やっぱり、何も起きないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：見当違いとは思えないんだけどな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何故なんだ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：テメーが一人突っ込みするとはな。面白い所が見れたぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：でもでもー、ここまで分かってるんなら教えてあげたいよねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：見つけられないのも無理はありませんが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん　・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：降参！教えてくれ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ねー、教えてあげよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：仕方がありません。では・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　エオネ・フルネアは茂みに近寄って行った　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "(ッガサ・・・ッササ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "(・・・　・・・　ッス　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あっ、姿が！", ActionEvent.None);

      Message(ref m_list, ref e_list, "（茂みの向こう側からエオネの声が届いてくる）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：≪すみません、ちょっと分かり難かったかもしれませんが≫", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：≪今の要領で潜れば通り抜ける事が出来ますので≫", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほど、そのまま注意深く入れば良かっただけなのか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：シンプルなだけに難しかったかもしれないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。いや本当に気付けなかった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：≪では、皆さんもこちらへどうぞ≫", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、今行く。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);

      Message(ref m_list, ref e_list, "アイン：おー、抜けられた！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あんなに通れそうになかったのに、不思議よね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：気合で見抜かねーとコイツは確かに分からなかったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやー、助かった。ありがとう、アデル、エオネ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：私は別にー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：特別な事はしておりませんので。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあちょっとこの通り道を探索してみるとするか。", ActionEvent.None);
    }
  }

  public static void Message900810(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveLeft);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveLeft);
  }

  public static void Message900820(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);
  }

  public static void Message900830(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);
  }

  public static void Message900840(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);
  }

  public static void Message900850(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);
  }

  public static void Message900860(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);
  }

  public static void Message900870(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);
  }

  public static void Message900880(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);
  }

  public static void Message900890(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveLeft);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveLeft);
  }

  public static void Message900900(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、ココを潜っていこう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);

    Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);
  }
  #endregion

  #region "ヴェルガスの海底神殿"
  #region "第一階層"
  public static void Message1000000(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000000 == false)
    {
      One.TF.Event_Message1000000 = true;

      Message(ref m_list, ref e_list, "アイン：さてと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと辺りを見回してみるか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "1", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "（アイン・ウォーレンスは周囲を見回し、部屋全体を確認した。）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：へえ・・・奇麗な作りだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、お前さ。オーランの塔の時もそうだったが、そんな趣向があったのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、趣向ってほどじゃないが、何となくだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：看板が見えるわね。まずはそこを見てみましょうよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。", ActionEvent.None);
    }
  }

  public static void Message1000010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000010_Complete == false)
    {
      One.TF.Event_Message1000010_Fail = false;
      One.TF.Event_Message1000011 = false;
      One.TF.Event_Message1000012 = false;
      One.TF.Event_Message1000013 = false;
      One.TF.Event_Message1000014 = false;
    }
    else
    {
      Message(ref m_list, ref e_list, "『　右上　右下　左上　左下　』", ActionEvent.None);

      // todo 次の仕掛けが解かれた時、看板のメッセージを変えて誘導
      return;
    }

    if (One.TF.Event_Message1000010 == false)
    {
      One.TF.Event_Message1000010 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。読んでみるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　右上　右下　左上　左下　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ふーん・・・示している内容自体は簡単ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。こんなのラクショーだよな！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや・・・まあ、そうだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か引っかかりでもあるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうじゃねえんだ。ただ、楽勝なのかどうかって所だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そんなもんか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、やってみないと分からないけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：看板は読んだわけだし、ちょっと探索してみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　右上　右下　左上　左下　』", ActionEvent.None);

      if (One.TF.Event_Message1000010_FailedMessage1)
      {
        if (One.TF.Event_Message1000010_Progress1 == false)
        {
          One.TF.Event_Message1000010_Progress1 = true;

          Message(ref m_list, ref e_list, "アイン：右上・・・右下・・・　・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：待てよ。ひょっとして", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：この看板を読んだ地点を最初の地点として考えないと駄目なんじゃないか？", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：誰に問いかけているのよ。まったく。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：テメーの思ったように動いて良いぜ。こういうのは俺は苦手だ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：多分そうだ、間違いない。看板を読んだ地点から動いてみよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000010_FailedMessage2 == false)
          {
            Message(ref m_list, ref e_list, "アイン：（この看板を読んだ所から順に通ってみるか・・・）", ActionEvent.None);
          }
          else
          {
            if (One.TF.Event_Message1000010_Progress2 == false)
            {
              if (One.TF.Event_Message1000010_MoveWall == false)
              {
                Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

                Message(ref m_list, ref e_list, "ラナ：アイン、どう？", ActionEvent.None);

                Message(ref m_list, ref e_list, "アイン：やっぱり、右下から左上には行けない。", ActionEvent.None);

                Message(ref m_list, ref e_list, "アイン：どうしても途中で別のタイルを通過してしまう配置になっているんだ。", ActionEvent.None);

                Message(ref m_list, ref e_list, "ビリー：じゃ、無理じゃねーか！", ActionEvent.None);

                Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

                Message(ref m_list, ref e_list, "アイン：いや", ActionEvent.None);

                Message(ref m_list, ref e_list, "アイン：ラナ、看板周辺にある４本の柱のどれかを注意深く探索してくれないか。", ActionEvent.None);

                Message(ref m_list, ref e_list, "ラナ：え？ええ、分かったわ。", ActionEvent.None);
              }
              else
              {
                Message(ref m_list, ref e_list, "アイン：柱は動かした。右下から左上には行けるはずだ。", ActionEvent.None);

                Message(ref m_list, ref e_list, "ラナ：もう一度やってみましょう。", ActionEvent.None);

                Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
              }
            }
            else
            {
              if (One.TF.Event_Message1000010_MoveWall == false)
              {
                Message(ref m_list, ref e_list, "アイン：ラナ、看板周辺にある４本の柱のどれかを注意深く探索してくれ。頼む。", ActionEvent.None);

                Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);
              }
              else
              {
                Message(ref m_list, ref e_list, "アイン：柱は動かした。右下から左上には行けるはずだ。", ActionEvent.None);

                Message(ref m_list, ref e_list, "ラナ：もう一度やってみましょう。", ActionEvent.None);

                Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
              }
            }
          }
        }
      }
    }
  }

  public static void Message1000011(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);

    if (One.TF.Event_Message1000010 == false)
    {
      VelgusTile_NoMessageBoard(ref m_list, ref e_list);
    }
  }

  public static void Message1000012(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);

    if (One.TF.Event_Message1000010 == false)
    {
      VelgusTile_NoMessageBoard(ref m_list, ref e_list);
    }
  }

  public static void Message1000013(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);

    if (One.TF.Event_Message1000010 == false)
    {
      VelgusTile_NoMessageBoard(ref m_list, ref e_list);
    }
  }

  public static void Message1000014(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);

    if (One.TF.Event_Message1000010 == false)
    {
      VelgusTile_NoMessageBoard(ref m_list, ref e_list);
    }
  }

  private static void VelgusTile_NoMessageBoard(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000010_NoMessageBoard == false)
    {
      One.TF.Event_Message1000010_NoMessageBoard = true;

      Message(ref m_list, ref e_list, "アイン：ッゲ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、迂闊に動かないで看板を先に見たら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ、そうだな・・・", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "ラナ：バーカーアーイーン？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：わ、悪かった・・・看板を見よう。", ActionEvent.None);
    }
  }

  public static void Message1000015(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.Event_Message1000010_MoveWall = true;

    Message(ref m_list, ref e_list, "ラナ：あっ、ちょっと待って。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：何だ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：この柱。地面にかすかな溝があるわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：本当だな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：何かあんのか？殴ってみるか！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ちょっと待って。慎重にやらせて。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：あ、ああ・・・す、すまねえ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：トラップ系はなさそうだわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：良いわよ。押して見ましょう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ビリーよ。押してくれ、頼んだ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：ッシャ、任せておけ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "～ ビリーは態勢を整え、全力をもって身体全体で柱へと突進した！ ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ビリー：ウオオォォォ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：まだ、動いてないわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：ウオオオオオォォォォォォ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ビリー、頼んだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：ッグ・・・ア、アインてめぇ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：ビリーさん。お願いします。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：ッグ・・・クオオオオオォォォアアアアァァ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ゴッ・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッゴオオオォォン・・・！）", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveObjTop);

    Message(ref m_list, ref e_list, "ビリー：オーケー！！どうだ、見たか！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、大変助かったぜ。この手は今後も頼んだぞビリー！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：おっしゃあ！任せておけ！", ActionEvent.None);
  }

  public static void Message1000016(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000010_Fail == false)
    {
      One.TF.Event_Message1000010_Complete = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_6_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_7_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_8_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ビリー：よし、やったな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・開きましたね・・・扉が。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まずは突破って所かしら♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃ、早速次行こうぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうかしたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：厄介だな。この神殿。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どういう意味よ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：このエントランス。造りが凄く奇麗だろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：突然どうしちゃったわけ？確かに壁の装飾や部屋のレイアウトが奇麗なのは分かるけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：不規則なんだ。仕掛けそのものが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺達は最初、看板を見て、それだけで判断した。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だが、実際には柱を動かさない限り突破することはできない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：つまり、看板は要素の一つ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、もう一つ何かある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いいや、厳密にはこの後、もう一つとは限らない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そして、その仕掛け方には規則性が無い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：表現は難しいんだが、まあ、そんなところだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・なんだって？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと途中の解説が意味不明だったけど、要はヒントが無いって事かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、ほぼ皆無だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今回、ラナの調査能力のおかげで何とかなった。そこは助かったよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ありがと。でもいつも見つけられるとは限らないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだよな・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、この神殿について何か知っている事はあるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いいえ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか・・・何かヒントでもあると助かるんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあ、慎重にやればいいんだろ？慎重によ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。慎重に、あまり考えすぎず、今は進むとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・）", ActionEvent.None);
    }
  }

  public static void Message1000017(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000010 == false)
    {
      return; // 看板を見ていないならセリフは発生しない。
    }

    if (One.TF.Event_Message1000010_Progress1 == false)
    {
      if (One.TF.Event_Message1000010_FailedMessage1 == false)
      {
        One.TF.Event_Message1000010_FailedMessage1 = true;

        Message(ref m_list, ref e_list, "アイン：特に、何も起きないな・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：床のタイルは音がしてるんだから、何か条件が不足してるのよ、きっと。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：特に、何も起きないな・・・", ActionEvent.None);
      }
      Message(ref m_list, ref e_list, "ビリー：おい、もっかい看板見てみよーぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。もう一度読み返してみるか。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000010_Progress2 == false)
    {
      if (One.TF.Event_Message1000010_FailedMessage2 == false)
      {
        One.TF.Event_Message1000010_FailedMessage2 = true;

        Message(ref m_list, ref e_list, "アイン：駄目か、何も起きないな・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：看板を読んだ地点が最初っていうのは合っていそうだけどね。", ActionEvent.None);

        if (One.TF.Event_Message1000010_MoveWall == false)
        {
          Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：この際順序はどうでも良い。テキトーにしらみつぶしでやってこうぜ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：いや、このままじゃ不可能、だな。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：あぁ！？どーいう意味だよ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：このままじゃ不可能、だと言ったんだ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：じゃあ、可能にする方法があるわけ？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ある。それだけは間違いない。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ちょっと他も調べてみよう。", ActionEvent.None);
        }
        else
        {
          Message(ref m_list, ref e_list, "アイン：おかしいな。柱は動かした。右下から左上には通ったつもりだが・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：オメー、テキトーに踏んだだけじゃねーのかよ？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：あ、ああ、そうかもな・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：もう一度、看板を読む所からやってみましょう。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
        }
      }
      else
      {
        if (One.TF.Event_Message1000010_MoveWall == false)
        {
          Message(ref m_list, ref e_list, "アイン：駄目だな。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ちょっと他も調べてみよう。", ActionEvent.None);
        }
        else
        {
          Message(ref m_list, ref e_list, "アイン：柱は動かした。右下から左上には行けるから、看板に書いてある順序で行けるはずだ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：もう一度、看板を読む所からやってみましょう。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
        }
      }
    }
  }

  public static void Message1000020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000020_Complete == false || One.TF.Event_Message1000020_2_Complete == false)
    {
      One.TF.Event_Message1000020_Fail = false;
      One.TF.Event_Message1000021 = false;
      One.TF.Event_Message1000022 = false;
      One.TF.Event_Message1000023 = false;
      One.TF.Event_Message1000024 = false;
      One.TF.Velgus_Center_Number1 = -1;
      One.TF.Velgus_Center_Number2 = -1;
      One.TF.Velgus_Center_Number3 = -1;
      One.TF.Velgus_Center_Number4 = -1;
    }

    if (One.TF.Event_Message1000020 == false)
    {
      One.TF.Event_Message1000020 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。読むぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　　　右上　右下　左上　左下　　　　　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こ、これは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだこれ。さっきと同じじゃねーか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：フロア自体のレイアウトが異なるから、解き方は違うって所かしらね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン、サクっと解いてしまおーぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ。まあそうなんだけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まずは周辺を見回してみましょう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー", ActionEvent.None);

      Message(ref m_list, ref e_list, "2", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "（アイン・ウォーレンスは周囲を見回し、全体を確認した。）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、頼むから教えてくれないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っ・・・何でしょう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここの構造・・・どう思う？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：えっ・・・その・・・どういう意味？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっとバカアイン。変な聞き方しないでって、いつも言ってるでしょうが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、そうだよな。ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：悪い。今のは忘れてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：分かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ、まずは探索してみるとするか！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　　　右上　右下　左上　左下　　　　　』", ActionEvent.None);

      if (One.TF.Event_Message1000020_Progress2)
      {
        if (One.TF.Event_Message1000020_Progress3 == false)
        {
          One.TF.Event_Message1000020_Progress3 = true;

          Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：どう？何か分かりそう？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：そうだな。２点ある。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：まず、１点目。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：この右上→右下→左上→左下についてだが、", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：おそらく、この順序そのものを俺達は見誤っている。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：見誤ってなんかねーだろ。どこを間違ったってんだよ？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：考えはある。まあ、任せておけ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：で、２点目だが、看板に書かれている文字のレイアウトだ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：レイアウトだぁ？それが何だってんだよ？", ActionEvent.None);

          Message(ref m_list, ref e_list, "『　　　右上　右下　左上　左下　　　　　』", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：文字の印字箇所がセンターラインからすると、微妙にずれているんだ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：あぁ？センターライン？？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：そうだ。センターラインを考えた場合、看板の後方に少しだけ余白が生まれるんだ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：言われてみればそうね。ちょっと気付かなかったかも。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：つまり、最後の方に何らかが隠されている。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：そしてその隠されているのはおそらく・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　・・・）", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：中央、もしくは真ん中、あるいは・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：『上』", ActionEvent.None);

          Message(ref m_list, ref e_list, "エオネ：（・・・　っ・・・）", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：へぇ・・・ま、まあまあ、そうなのかよ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ともかく、俺に任せてくれ。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：お、おうよ。頼んだぜ。", ActionEvent.None);
        }
      }

      if (One.TF.Event_Message1000020_FailedMessage1)
      {
        if (One.TF.Event_Message1000020_Progress1 == false)
        {
          One.TF.Event_Message1000020_Progress1 = true;

          Message(ref m_list, ref e_list, "アイン：右上、右下、左上、左下・・・", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：別にそんな難しい内容じゃねーだろ。そのまんまじゃねーか？", ActionEvent.None);

          Message(ref m_list, ref e_list, "ラナ：看板が示す通りの順序でまずはやってみるのが良いんじゃない？", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：そうだな。じゃあ、やってみるとするか。", ActionEvent.None);
        }
      }
      else
      {
        // なし
      }
    }
  }

  public static void Message1000021(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);
  }

  public static void Message1000022(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);
  }

  public static void Message1000023(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);
  }

  public static void Message1000024(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);
  }

  public static void Message1000025(ref List<string> m_list, ref List<ActionEvent> e_list, ActionEvent action)
  {
    Message(ref m_list, ref e_list, "ラナ：ちょっと、先に看板を見たほうが良いんじゃない？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうだな。分かった。", ActionEvent.None);

    Message(ref m_list, ref e_list, "0", action);
  }

  public static void Message1000026(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000020_Fail == false)
    {
      One.TF.Event_Message1000020_Complete = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_15_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ビリー：っしゃあ！今回は楽勝だったみてーだな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：開放された場所があるわね。行ってみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、どうだろうな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうかしたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：開放された場所って中央に見える宝箱への通路の事だよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おう、分かってるじゃねーか。早速ゲットしようぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何かトラップでもありそうって事かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それも十分考えられるんだが、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：宝箱って最初から見えてるだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、そうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、そこへ行く通路が開いた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ、そうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、そこにある宝箱を取るしかない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そういう事になるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おかしくないか？それって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おかしーのはテメェだろ。意味がわかんねーぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、今の時点だとちょっと意味不明か。ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：トラップとか気にしているんなら、私が通路をきちんと調査するわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、頼んだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よし、じゃあ突き進もうぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);
    }
  }

  public static void Message1000027(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000020 == false)
    {
      return; // 看板を見ていないならセリフは発生しない。
    }

    if (One.TF.Event_Message1000020_Progress1 == false)
    {
      if (One.TF.Event_Message1000020_FailedMessage1 == false)
      {
        One.TF.Event_Message1000020_FailedMessage1 = true;

        Message(ref m_list, ref e_list, "アイン：特に、何も起きないな・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：タイルを踏む順序を間違えてるのかしらね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：もう一度最初からやってみる。看板の所へ行こう。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：看板の所からやり直すんでしょ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうだった。看板の所へ行こう。", ActionEvent.None);
      }
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：特に、何も起きないな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：タイルを踏む順序を間違えてるのかしらね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もう一度最初からやってみる。看板の所へ行こう。", ActionEvent.None);
    }
  }

  public static void Message1000028(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000020_Progress2 == false)
    {
      One.TF.Event_Message1000020_Progress2 = true;

      Message(ref m_list, ref e_list, "アイン：宝箱ゲット・・・か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おーし、じゃミッションは終了だな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だが、やはり解決しないか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どうした？何か文句でもあるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：行き先が見つかってないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：行き先だぁ？こんなもんなんだろ？　神殿なんて広さはあるけど大抵はなんもねーし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：礼拝目的の一般的な神殿なら、そう考えられなくも無いけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でも、確かに拍子抜けな感じはあるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もう一度、看板を念入りに確認してみたいと思う。良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：別に良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すまねえな。じゃあちょっと看板の所に戻って再確認してみよう。", ActionEvent.None);
    }
  }

  public static void Message1000029(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Debug.Log("Message1000029(S) " + One.TF.Event_Message1000020_2_Complete);

    if (One.TF.Event_Message1000020_2_Complete == false)
    {
      Debug.Log("Event_Message1000020_2_Complete == false");
      One.TF.Event_Message1000020_2_Complete = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_16_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：よし！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、すげーな！一体どういう事だよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの看板が指し示す位置は最初のエントランスのモノとは性質が異なっていたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：このエリアのレイアウトだが、４つの区画に少し分かれている感じがするだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：なるほどね。その４つの区画毎に踏むべきタイルの位置示されていたって事かしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その通りだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でも、例の看板の余白の件は？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それはおそらくこの中央の間から外れた場所を指している。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今のタイル操作で、この区画で壁になっていた箇所が一つ開放されたはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そこへ行けば、きっと新たな通路が開けるはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：テメーのワケわかんねぇ考え方も、たまには役に立つな。驚いたぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：結構外れる時もあるけどな。今回は的中したって感じだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし。ここはクリアだ。先へ進めてみよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ！", ActionEvent.None);
    }
    else
    {
      Debug.Log("Event_Message1000020_2_Complete == true, (no action)");
    }
  }

  public static void Message1000030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000020 == false)
    {
      return; // 看板を見ていないならセリフは発生しない。
    }
    Message(ref m_list, ref e_list, "アイン：・・・駄目か？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どう考えてこの順序にしたわけ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、勘違いだったみたいだ。もう一度看板に戻ってやり直そう。", ActionEvent.None);
  }

  public static void Message1000031(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000020_3_Complete == false)
    {
      One.TF.Event_Message1000020_3_Complete = true;

      Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ザザザ・・・ッザザアアアァァン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_FAKESEA_18_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_FAKESEA_19_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_FAKESEA_20_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_FAKESEA_21_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_FAKESEA_22_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_FAKESEA_23_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：オーケー、成功みたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か波の様な音がしたわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらくさっきの場所に何等かの変化があるに違いない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：早速戻ってみて、で、進んでみようぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、行こう！", ActionEvent.None);
    }
  }

  public static void Message1000040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000040 == false)
    {
      One.TF.Event_Message1000040 = true;

      Message(ref m_list, ref e_list, "アイン：・・・この看板は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・読むぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【鳥が歌い、木々が囁き始める】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【天は青く照らし、地は新緑を謳歌する】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【闇が夜へと誘い、光が昼へと道を示す】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【水、流れ落ち、偉大なる海、天へと還り、無限循環】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【火、あらゆる場所、可能な場を生めつくし、創元浄化】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【嵐、万物なる生成要素、一から零へと変化させる】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【死、この世における絶対的な平等の象徴】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【生、偉大なる母、厳格なる父より永久の確約】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【神、全創生、全法則、全にして無条件の存在】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【人、誤り、恐れ、喚き、屈し、失い、揺らぎ続ける存在】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【理、神と人、鳥、木々、全生物における連続の理そこに見つけたり】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【空、在るべきもの、成るべくして成り、在るべくして現存と見つけたり】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【相、完全調和への導き、交わることの無い絶対双極、見つけたり】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【永遠、終わらない所へ、終わりと始まりが連続する永遠環】", ActionEvent.None);

      Message(ref m_list, ref e_list, "　【世界、あなた、そしてわたしが居た場所へ。無限に続くこの世界】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、頼むから1つだけ教えてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この看板の内容はヴェルガスの海底神殿を起源とした詩なのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それとも、パルメテイシア神殿から来た詩なのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：っ・・・それは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：別に良いのよ、無理に答えなくても。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。何でそんな事を聞いてんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・強いて言えば", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：場合によっては、永遠に彷徨うハメになるかも知れないからだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いやいやいや、ちょっと待てよ。まだ何も調べてねーだろうが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：この先の所に進んで探索もしてねーのに、なんでそんな事言えるんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、永遠は言い過ぎかもしれないが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：相当な時間を費やさなければならない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そんな気がするんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、ほんのちょっとだけで良い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：力を・・・貸してくれ。頼む！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：アインさんは・・・まず・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：『詩』と表現されているようですが、何故そう表現したんでしょう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・そうだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何かの物語を描いた様な・・・そんな印象を受けたからだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：後は一節ごとに連なる連続性だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だから、これは単なる設問ではない。そう思ったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ・・・そんな所から・・・　たった、これだけで・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：分かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：良いのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ。しかし、私が知っている事はおそらく助けにはならないでしょう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：良いんだ。ほんの少しだけでも糸口になるんだ。頼む！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ここにある看板の内容は、パルメテイシア神殿において古代から伝承されている記述そのものです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：正確な起源までは分かりませんが、相当古い時代から言い伝えられてるそうです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ただし、この記述はヴェルガスの海底神殿に描かれている紋様を神殿の者が解釈し、それを文章化したものだと伝えられています。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：以上です。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・ありがとう！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ。大した情報ではないので、お役に立つかどうかは分かりませんが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやいや、十分過ぎるぐらいだよ。助かった！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：でも、スゴイね、アインにーちゃん☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何がだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アタシ、エオネおねーちゃんはこの件は絶対喋らないと思ってたのに", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：何か不思議―☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：確かに。。。重ねてだが、本当に助かった。感謝する。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、どうするの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：このまま進めてみようと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：皆、分からない難問が出た時はちょっとだけ時間をくれ。良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：別にいーぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：お任せー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあ進めるとしよう！", ActionEvent.None);
    }
    else
    {
      if (One.TF.Event_Message1000040_Complete_4 == false)
      {
        Message(ref m_list, ref e_list, "　【鳥が歌い、木々が囁き始める】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【天は青く照らし、地は新緑を謳歌する】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【闇が夜へと誘い、光が昼へと道を示す】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【水、流れ落ち、偉大なる海、天へと還り、無限循環】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【火、あらゆる場所、可能な場を生めつくし、創元浄化】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【嵐、万物なる生成要素、一から零へと変化させる】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【死、この世における絶対的な平等の象徴】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【生、偉大なる母、厳格なる父より永久の確約】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【神、全創生、全法則、全にして無条件の存在】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【人、誤り、恐れ、喚き、屈し、失い、揺らぎ続ける存在】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【理、神と人、鳥、木々、全生物における連続の理そこに見つけたり】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【空、在るべきもの、成るべくして成り、在るべくして現存と見つけたり】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【相、完全調和への導き、交わることの無い絶対双極、見つけたり】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【永遠、終わらない所へ、終わりと始まりが連続する永遠環】", ActionEvent.None);

        Message(ref m_list, ref e_list, "　【世界、あなた、そしてわたしが居た場所へ。無限に続くこの世界】", ActionEvent.None);
      }
      else if (One.TF.Event_Message1000040_Progress_1 == false)
      {
        Message1000063(ref m_list, ref e_list);
      }
      else
      {
        if (One.TF.Event_Message1000059 == false)
        {
          Message(ref m_list, ref e_list, "　【鳥が歌い、木々が囁き始める】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【天は青く照らし、地は新緑を謳歌する】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【闇が夜へと誘い、光が昼へと道を示す】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【水、流れ落ち、偉大なる海、天へと還り、無限循環】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【火、あらゆる場所、可能な場を生めつくし、創元浄化】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【嵐、万物なる生成要素、一から零へと変化させる】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【死、この世における絶対的な平等の象徴】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【生、偉大なる母、厳格なる父より永久の確約】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【神、全創生、全法則、全にして無条件の存在】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【人、誤り、恐れ、喚き、屈し、失い、揺らぎ続ける存在】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【理、神と人、鳥、木々、全生物における連続の理そこに見つけたり】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【空、在るべきもの、成るべくして成り、在るべくして現存と見つけたり】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【相、完全調和への導き、交わることの無い絶対双極、見つけたり】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【永遠、終わらない所へ、終わりと始まりが連続する永遠環】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【世界、あなた、そしてわたしが居た場所へ。無限に続くこの世界】", ActionEvent.None);
        }
        else
        {
          Message(ref m_list, ref e_list, "　【鳥が歌い、木々が囁き始める】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【天は青く照らし、地は新緑を謳歌する】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【闇が夜へと誘い、光が昼へと道を示す】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【水、流れ落ち、偉大なる海、天へと還り、無限循環】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【火、あらゆる場所、可能な場を生めつくし、創元浄化】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【嵐、万物なる生成要素、一から零へと変化させる】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【死、この世における絶対的な平等の象徴】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【生、偉大なる母、厳格なる父より永久の確約】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【神、全創生、全法則、全にして無条件の存在】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【人、誤り、恐れ、喚き、屈し、失い、揺らぎ続ける存在】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【理、神と人、鳥、木々、全生物における連続の理そこに見つけたり】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【空、在るべきもの、成るべくして成り、在るべくして現存と見つけたり】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【相、完全調和への導き、交わることの無い絶対双極、見つけたり】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【永遠、終わらない所へ、終わりと始まりが連続する永遠環】", ActionEvent.None);

          Message(ref m_list, ref e_list, "　【世界、あなた、そしてわたしが居た場所へ。無限に続くこの世界】", ActionEvent.None);

          if (One.TF.Event_Message1000075 == false)
          {
            One.TF.Event_Message1000075 = true;

            Message(ref m_list, ref e_list, "アイン：よし、じゃあ始めるとしよう。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ビリー：始めるだぁ？どーいう意味だよ。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：さっき、詩の節の始まりが描かれている場所を通った時に音がしたろ？", ActionEvent.None);

            Message(ref m_list, ref e_list, "ビリー：あ、ああ。何かそういやそうだったな。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：おそらくだが、あれがこの区画を解くためのヒントを映し出してくれる。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：最初に探索した時はちょっと分からなかったが、今なら変化しているはずだ。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：それをもう一度見に行こうと思う。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ラナ：要はもう一度探索するって事ね。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：そういう事だ。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ビリー：何か分かったら、ちゃんと教えろよな。眺めたままダンマリじゃ分かんねーからな。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：ああ、分かった。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：よし、じゃあ行こう。", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000041(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000041 == false)
    {
      One.TF.Event_Message1000041 = true;

      Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_25_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_26_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_27_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_28_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：っな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、早速開いたみてーだな！じゃあ、突撃するか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　マズイな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだよ、単に開いただけだろーが。おい、早く行こうぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ・・・", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000059 && One.TF.Event_Message1000075 == false)
    {
      One.TF.Event_Message1000075 = true;

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ始めるとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：始めるだぁ？どーいう意味だよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さっき、詩の節の始まりが描かれている場所を通った時に音がしたろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あ、ああ。何かそういやそうだったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらくだが、あれがこの区画を解くためのヒントを映し出してくれる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：最初に探索した時はちょっと分からなかったが、今なら変化しているはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それをもう一度見に行こうと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：要はもう一度探索するって事ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういう事だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何か分かったら、ちゃんと教えろよな。眺めたままダンマリじゃ分かんねーからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、分かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ行こう。", ActionEvent.None);
    }
  }

  public static void Message1000042(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000042 == false)
    {
      One.TF.Event_Message1000042 = true;
      Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);
    }
    Check1000040_Complete_1(ref m_list, ref e_list);
  }

  public static void Message1000043(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000043 == false)
    {
      One.TF.Event_Message1000043 = true;
      Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);
    }
    Check1000040_Complete_1(ref m_list, ref e_list);
  }

  public static void Message1000044(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000044 == false)
    {
      One.TF.Event_Message1000044 = true;
      Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);
    }
    Check1000040_Complete_1(ref m_list, ref e_list);
  }

  private static void Check1000040_Complete_1(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000042 && One.TF.Event_Message1000043 && One.TF.Event_Message1000044)
    {
      One.TF.Event_Message1000040_Complete_1 = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_49_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_50_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_51_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ラナ：何かが開く音がしたわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：またどっかが開いたんじゃねーのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ・・・おそらくな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：テメーにしちゃ、やけに慎重になってるじゃねーか。どうしちまったんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、何ていうのかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：奇麗過ぎて、順序の見通しが効かない。って感じだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そうなのかよ。まあ、相変わらずそういうのは分かんねーけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここで立ち止まってもしょうがない。進めてみよう。", ActionEvent.None);
    }
  }

  public static void Message1000045(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000045 == false && One.TF.Event_Message1000040_Complete_2 == false)
    {
      One.AR.Velgus_Chant_Sequence(2);
      One.TF.Event_Message1000045 = true;
      Check1000040_Complete_2(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_2 == false)
        {
          One.TF.Event_Message1000040_Reading_2 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 2);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 2);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000046(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000046 == false && One.TF.Event_Message1000040_Complete_2 == false)
    {
      One.AR.Velgus_Chant_Sequence(3);
      One.TF.Event_Message1000046 = true;
      Check1000040_Complete_2(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_3 == false)
        {
          One.TF.Event_Message1000040_Reading_3 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 3);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 3);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000047(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000047 == false && One.TF.Event_Message1000040_Complete_2 == false)
    {
      One.AR.Velgus_Chant_Sequence(4);
      One.TF.Event_Message1000047 = true;
      Check1000040_Complete_2(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_4 == false)
        {
          One.TF.Event_Message1000040_Reading_4 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 4);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 4);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000048(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000048 == false && One.TF.Event_Message1000040_Complete_2 == false)
    {
      One.AR.Velgus_Chant_Sequence(5);
      One.TF.Event_Message1000048 = true;
      Check1000040_Complete_2(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_5 == false)
        {
          One.TF.Event_Message1000040_Reading_5 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 5);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 5);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000049(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000049 == false && One.TF.Event_Message1000040_Complete_2 == false)
    {
      One.AR.Velgus_Chant_Sequence(6);
      One.TF.Event_Message1000049 = true;
      Check1000040_Complete_2(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_6 == false)
        {
          One.TF.Event_Message1000040_Reading_6 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 6);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 6);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000050 == false && One.TF.Event_Message1000040_Complete_2 == false)
    {
      One.AR.Velgus_Chant_Sequence(7);
      One.TF.Event_Message1000050 = true;
      Check1000040_Complete_2(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_7 == false)
        {
          One.TF.Event_Message1000040_Reading_7 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 7);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 7);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000051(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000051 == false && One.TF.Event_Message1000040_Complete_3 == false)
    {
      One.AR.Velgus_Chant_Sequence(8);
      One.TF.Event_Message1000051 = true;
      Check1000040_Complete_3(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_8 == false)
        {
          One.TF.Event_Message1000040_Reading_8 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 8);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 8);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000052(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000052 == false && One.TF.Event_Message1000040_Complete_3 == false)
    {
      One.AR.Velgus_Chant_Sequence(9);
      One.TF.Event_Message1000052 = true;
      Check1000040_Complete_3(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_9 == false)
        {
          One.TF.Event_Message1000040_Reading_9 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 9);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 9);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000053(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000053 == false && One.TF.Event_Message1000040_Complete_3 == false)
    {
      One.AR.Velgus_Chant_Sequence(10);
      One.TF.Event_Message1000053 = true;
      Check1000040_Complete_3(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_10 == false)
        {
          One.TF.Event_Message1000040_Reading_10 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 10);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 10);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000054(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000054 == false && One.TF.Event_Message1000040_Complete_3 == false)
    {
      One.AR.Velgus_Chant_Sequence(11);
      One.TF.Event_Message1000054 = true;
      Check1000040_Complete_3(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_11 == false)
        {
          One.TF.Event_Message1000040_Reading_11 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 11);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 11);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000055(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000055 == false && One.TF.Event_Message1000040_Complete_3 == false)
    {
      One.AR.Velgus_Chant_Sequence(12);
      One.TF.Event_Message1000055 = true;
      Check1000040_Complete_3(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_12 == false)
        {
          One.TF.Event_Message1000040_Reading_12 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 12);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 12);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000056(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000056 == false && One.TF.Event_Message1000040_Complete_3 == false)
    {
      One.AR.Velgus_Chant_Sequence(13);
      One.TF.Event_Message1000056 = true;
      Check1000040_Complete_3(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_13 == false)
        {
          One.TF.Event_Message1000040_Reading_13 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 13);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 13);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000057(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000057 == false && One.TF.Event_Message1000040_Complete_4 == false)
    {
      One.AR.Velgus_Chant_Sequence(14);
      One.TF.Event_Message1000057 = true;
      Check1000040_Complete_4(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_14 == false)
        {
          One.TF.Event_Message1000040_Reading_14 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 14);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 14);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000058(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000058 == false && One.TF.Event_Message1000040_Complete_4 == false)
    {
      One.AR.Velgus_Chant_Sequence(15);
      One.TF.Event_Message1000058 = true;
      Check1000040_Complete_4(ref m_list, ref e_list);
    }
    else
    {
      if (One.TF.Event_Message1000075 == false)
      {
        Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
      }
      else
      {
        if (One.TF.Event_Message1000040_Reading_15 == false)
        {
          One.TF.Event_Message1000040_Reading_15 = true;
          Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

          Message1000040_MessageFromChant(ref m_list, ref e_list, 15);

          Message(ref m_list, ref e_list, "アイン：よし、他の所も確認しよう。", ActionEvent.None);
        }
        else
        {
          if (One.TF.Event_Message1000040_Complete_8 == false)
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message1000040_MessageFromChant(ref m_list, ref e_list, 15);
          }
          else
          {
            Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
          }
        }
      }
    }
  }
  
  public static void Message1000059(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000059 == false)
    {
      One.TF.Event_Message1000059 = true;
      One.TF.Event_Message1000040_Reading_1 = true;
      Message(ref m_list, ref e_list, "アイン：あった、これだ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（自然の木々と・・・・無数の・・・鳥・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おっ！何か今、音が鳴らなかったか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし。合ってたみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ここがさっき探索していた場所と関連性があるの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、ここが始まりの節を示す場所だったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これで、関連性は整った。後は進めるだけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・っ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ早速、例のフロアへ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ま、待ってください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうした？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ・・・その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：まるで見てきたかの様な振る舞いなので、ちょっと驚いただけです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：気にしないでください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：バカアインは結構ハズレを引いてる時も多いのよ。いちいち気にしない方が良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ、そうですか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、俺なりに考えてだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ハイハイ、そのくだりも良いから。ッホラ。とっとと行くんでしょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ。よし、じゃあ例のフロアにもう一度戻ろう。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
    }
  }

  public static void Message1000060(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000060 == false)
    {
      One.TF.Event_Message1000060 = true;
      One.AR.VelgusChantAchivement = true;
      One.UpdateAkashicRecord();

      Message(ref m_list, ref e_list, "アイン：あった！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      // Message(ref m_list, ref e_list, "　【　過去と未来に非ず、始まりと終わりに非ず、夢幻無二なる特異空間へと至る　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（な・・・なんだこれ・・・！！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（相似形の螺旋と円環・・・？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（いや・・・夢幻のフラクタル系にも見えるが・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・過去と・・・未来・・・？いや、そうでも無さそうだな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ん・・・一か所だけ異質な箇所があるな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ものすごく小さい粒点だな・・・単なるミスか？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・違う・・・ミスのはずがない・・・これは・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：おーーい、アインのお兄ちゃーーーん☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、おおーー、悪い悪い。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうなのよ。１６の節と言ってたのは、本当に見えたわけ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだろうな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どうだろうなって、どーなんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：１６の詩の節自体は確かにあった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、何というか・・・描かれていた内容がその・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだろうな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：在るには在ったワケね。もう、その辺りは良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：す、すまねえ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ、よーやくこれで終わりか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここで見つけた１６の節。しっかりと覚えておくとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：皆付き合わせてしまって悪かったな。ここはこれで完了だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おーし、じゃあそろそろ、次の所へ行こーぜ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解だ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "【 壁には不思議な紋様が描かれている 】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);
    }
  }

  private static void Message1000040_MessageFromChant(ref List<string> m_list, ref List<ActionEvent> e_list, int number)
  {
    if (One.AR.VelgusSearchChantNumber(number) == 2)
    {
      Message(ref m_list, ref e_list, "アイン：青く晴れた空と奇麗な緑の大地が描かれているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：２番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 3)
    {
      Message(ref m_list, ref e_list, "アイン：暗闇に一筋の光が差し込んでいて道が繋がっている様な感じがするな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：３番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 4)
    {
      Message(ref m_list, ref e_list, "アイン：流線形で様々な形を司った水模様が描かれているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：４番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 5)
    {
      Message(ref m_list, ref e_list, "アイン：場全体が火に包まれている。全体的に浄化されている様な印象を受けるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：５番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 6)
    {
      Message(ref m_list, ref e_list, "アイン：あらゆる万物が嵐の中で形成取っている過程が描かれているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：６番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 7)
    {
      Message(ref m_list, ref e_list, "アイン：この世に対して死が平等に到来する瞬間が描かれているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：７番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 8)
    {
      Message(ref m_list, ref e_list, "アイン：生誕における母性と父性を象徴するような象が描かれているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：８番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 9)
    {
      Message(ref m_list, ref e_list, "アイン：抽象的な幾何学模様を用いて法則性や創生を生み出す神を描いている様に見えるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：９番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 10)
    {
      Message(ref m_list, ref e_list, "アイン：恐れたり、失ったり、様々な人々の象が描かれているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：１０番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 11)
    {
      Message(ref m_list, ref e_list, "アイン：理を象徴するように、神、人々、鳥や自然の木々を一つの連続した線で描いているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：１１番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 12)
    {
      Message(ref m_list, ref e_list, "アイン：無の空間なんだが、在るべき型が現存している様を描いているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：１２番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 13)
    {
      Message(ref m_list, ref e_list, "アイン：交わってはいないが、水平と垂直を象徴する相の幾何学模様が描いているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：１３番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 14)
    {
      Message(ref m_list, ref e_list, "アイン：始まりの地点と終わりの地点が同地点に行きつく永遠の象徴が描かれているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：１４番目の節が該当しそうね。", ActionEvent.None);
    }
    else if (One.AR.VelgusSearchChantNumber(number) == 15)
    {
      Message(ref m_list, ref e_list, "アイン：世界事象が全体的に描かれ、象が２つ向かい合っている姿が描かれているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：１５番目の節が該当しそうね。", ActionEvent.None);
    }
  }

  public static void Message1000061(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：鍵の入手・・・か・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：おおし、やったじゃねえか！早速この鍵で開けられる扉を探してみようぜ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、後ほんの少しだけ待ってくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：どのぐらい待つんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：この先の通路を確認したい。話はそれからだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：マップのメモからすると、よほどの複雑な構造でない限り、探索範囲はあと少しね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：じゃあ、本当にあと少しなんだな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、すまねえがあとほんの少しだけだ。行こう。", ActionEvent.None);
  }

  public static void Message1000062(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000076 == false)
    {
      One.TF.Event_Message1000076 = true;
      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よう、行き止まりの様だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：探索はひとまず終了かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと考えてみたい事がある。看板の所に戻ってみても良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、いいわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ皆。悪いがちょっとだけ付き合ってくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・っ・・・　・・・）", ActionEvent.None);
    }
    else
    {
      if (One.TF.Event_Message1000040_Reading_1 &&
          One.TF.Event_Message1000040_Reading_2 &&
          One.TF.Event_Message1000040_Reading_3 &&
          One.TF.Event_Message1000040_Reading_4 &&
          One.TF.Event_Message1000040_Reading_5 &&
          One.TF.Event_Message1000040_Reading_6 &&
          One.TF.Event_Message1000040_Reading_7 &&
          One.TF.Event_Message1000040_Reading_8 &&
          One.TF.Event_Message1000040_Reading_9 &&
          One.TF.Event_Message1000040_Reading_10 &&
          One.TF.Event_Message1000040_Reading_11 &&
          One.TF.Event_Message1000040_Reading_12 &&
          One.TF.Event_Message1000040_Reading_13 &&
          One.TF.Event_Message1000040_Reading_14 &&
          One.TF.Event_Message1000040_Reading_15 &&
          One.TF.Event_Message1000040_Complete_5 == false)
      {
        One.TF.Event_Message1000040_Complete_5 = true;

        Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);

        Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

        Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_58_O, ActionEvent.RemoveFieldObject);

        Message(ref m_list, ref e_list, "アイン：よし、当たりの様だな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：まっ、マジかよおぉ！！？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：どうしてこんな所にまだ仕掛けがあると思ったわけ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：何でって言うほどでもないが、宝箱が印象的だったんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：このヴェルガスの海底神殿、普通に置いてある宝箱と思わせぶりな宝箱の配置があるんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：どういう事だよ？ここの通路の宝箱はちゃんと鍵が入ってたじゃねえか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：だからこそ、だよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：鍵を入手したし、拓けた通路もここまで。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そういう感覚を俺達に印象付けている気がするんだよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：そんなもんかぁ？納得というか意味不明だな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：開いた場所はやっぱりこの区画のどこかって事で良いのかしら？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、そうだな。ちょっと面倒かも知れないが、もう一度だけ戻って探索してみよう。", ActionEvent.None);
      }
    }
  }

  public static void Message1000063(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000040_Progress_1 == false)
    {
      One.TF.Event_Message1000040_Progress_1 = true;

      Message(ref m_list, ref e_list, "アイン：さてと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：このエリアで俺達が見てきた地点は", ActionEvent.None);

      if (One.TF.Event_Message1000059 == false)
      {
        Message(ref m_list, ref e_list, "アイン：合計で14箇所だ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：しかし、看板に記述されている詩の節は15個ある。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：数が符号しない。一致性が無いんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：一致性って何だよ？看板にそんな事が書いてあるか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：明確には記されていない。この看板は詩の節が示されているだけだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：んじゃあ気のせいなんじゃねーのか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：別の観点があるんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：最初のエリアは看板にヒントがあった。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そのヒントを辿る事で次のルートへ進めている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：次にあった中央の場所もそうだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：でも、看板に示された内容を読み解いた上で、次のルートが拓けたんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ただし最初の場所よりも中央の場所の方が、比較的、解き辛かった気はしている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で、ここの区画の看板はこの内容だ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：これはもうヒントですらない。何等かの啓示の様にも思える。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ただ、俺達は今回、単純に通路や区画を探索する事で次々と開放してきた。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：少なくとも、詩の節に示される内容との関連性は厳密には見出す事ができなかった。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：それでいて、最終的には宝箱を開き、鍵を入手できたわけだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あまり根拠とか無いんだが、これは異質な気がするんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：んー。でもなあ。たまたま探索した順序が、その詩の節に合致してたんじゃねーのか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：それも無い。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：なんで言い切れんだよ？？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：完全な順序で1発で当てるには最初のステップとして合計幾つあるかによる。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：仮に14なら、まず1/14。約７．１％だ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：次は1つ減るから、13個のうちから1つを当てる。1/13で役７．７％だ", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：７％ぐらいっつうんなら、んなもんじゃねえのか？あり得るだろーが。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：いいや、1/14を言い当てた中で、更に1/13を言い当てる事になる。依存関係があるんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：依存関係がもしあると仮定した場合は、この時点で約0.5%になる。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：この時点で１％すら残されていないんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：んな・・・だからよー。1%以下だろうが気合で引き当てたんだろーが。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：確かに・・・ちょっとダメそうね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、これが14と仮定した場合、その確率はおよそ8700万分の1近くにもなる。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：つまり、0.0000000011%だ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：そ、それも気合でだな・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：詩の節は15あった。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：14という仮定で話しているが、もしもそれが誤りで15だとすると", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：0.000000000076%。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：・・・0って何回言ったんだ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、あり得ないわけじゃないが。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まずまず無理なんだ。そう考えてもらえば良い。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラリー：気合の範囲を超えてるって話か・・・しょうがねえか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：でも、何か糸口が残ってるわけ？さっきから見てる感じだと珍しく苦戦してるみたいじゃない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ・・・正直これはきつい。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ひょっとしたらだが、このヴェルガスの海底神殿。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ここが一番の難所かもしれない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そんな気がするんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：珍しいわね。そこまで言うなんて。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ただし、完全に糸口がない訳じゃないんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：どこにあるってんだよ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：この、看板だ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：それはもう何度も見てるだろーが。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、そうなんだけどな・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：少し、時間が要りそうかしら？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、ちょっと考えたい。悪いな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：テメーのそういう所、オルガウェイン傭兵訓練施設の頃もそんな感じだったな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そ、そうかもな。ハハハ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "【 アイン・ウォーレンスは看板に目を向け、そのまま静止状態となった 】", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "ラナ：しばらく、かかりそうね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ねえ、少し離れた所でモンスターに警戒しつつ、小休憩しておきましょ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：分かった。ボーっと見てても疲れるだけだしな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：分かりました。", ActionEvent.None);
        
        Message(ref m_list, ref e_list, "アデル：一休みしよー☆", ActionEvent.None);

        Message(ref m_list, ref e_list, "～～～しばらくして～～～", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "ラナ：もうそろそろかしら。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：時間分かるのかよ！？すげーな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：何となくね。バカアインに限ってはこのぐらいが丁度いいはずよ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アデル：行ってみよー。なんか思いついてるかもねー☆", ActionEvent.None);

        Message(ref m_list, ref e_list, "【 ラナ、アデル、ビリー、エオネはアイン・ウォーレンスの元へと戻った 】", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "ラナ：どう？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ようやくだが、見えた気がする。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まず最初に取るべき行動は", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：始まりの地点を探すことだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：どういう事かしら？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：最後の通路が開いた時は２つの地点をチェックして開いた。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：その前は３区画毎に２か所。合計６。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：その前も３区画毎に２か所。合計６。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で合わせると１４なんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ただしこの看板の詩の節は１５あるので一致しない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：残る１つはどこにあって、そして、どのタイミングで開いたのか。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：解は、このエリアに来た時の最初のタイミングで扉が開いた時にある。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：そんなの、あったか？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：覚えてないか？中央で交差する箇所は最初３つの扉で仕切られていたはずだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：そういえば、そうね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：で、交差する箇所に足を踏み入れると、３つの扉が目の前で開いた。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あの印象的な通路の開放が、おそらくこの地に足を踏み入れる者に対して、認識の錯誤を与えるトラップなんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：じゃあ・・・まさか・・・どこかにまだ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そういう事だ。きっとどこかにまだ１か所開いた箇所がある。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：でも、やみくもに探すのかよ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：大丈夫だ。その目星もつけている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ヒントになっているのは「宝箱」だ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：最初のエントランスを解いた地点から上に行った所に宝箱があっただろ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：ああ、あったな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あそこへもう一度行ってみよう。きっと通路が開いているはずだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：マジかよ・・・あんな関係ねえ所がまさかって感じがして、信じられねえが。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：大丈夫、確信があるんだ。行こう。", ActionEvent.None);

      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：合計15だ。", ActionEvent.None);
      }

    }
  }

  public static void Message1000064(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000040_Complete_6 == false)
    {
      One.TF.Event_Message1000040_Complete_6 = true;
      Message(ref m_list, ref e_list, "(ッカチ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_MessageBoard_3_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：ま、まさか・・・そんな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なに動揺してんだよ？また、どっか開いたんだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：想定外って所なのかしら、どうなの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直、これで仕掛けは終わりだと思っていた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：看板が示していた詩の節についてはきちんと調べてある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：遠くにあった始まりの節も到達済みだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：後は行き止まりにあった仕掛けを動作させて、この場所に至ったわけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なので、それでもまだ先があると言うのは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：完全に想定外だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：想定外でも、新しく開いた所へ行くしかないんでしょ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ・・・そうするしかないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ここまで来たんだろ。次で今度こそ最後なんじゃねえのか？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・ビリーの言う通りかもしれないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ここまで解いてきたんだし、最後まで頼んだわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かった。じゃあ、引き続き探索しよう！", ActionEvent.None);
    }
  }

  public static void Message1000065(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000040_Complete_7 == false)
    {
      One.TF.Event_Message1000040_Complete_7 = true;

      Message(ref m_list, ref e_list, "ラナ：・・・看板がなくなってるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_60_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ビリー：お、おい・・・何だか異様だな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：行こう。", ActionEvent.None);
    }
  }

  public static void Message1000066(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000077 == false)
    {
      One.TF.Event_Message1000077 = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おっ・・・おい、どうしたんだよ急に立ち止まって・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みんな、頼みがある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっとだけで良い。ここで待っていてくれないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おうよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、行ってくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0", ActionEvent.ForceMoveLeft);

      Message(ref m_list, ref e_list, "（アインが足を踏み入れたその時だった）", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　突如台座がアインの前に浮き上がり、アインは薄黄色い空間に包まれた ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "", ActionEvent.TurnToWhite);

      Message(ref m_list, ref e_list, "ラナ：っちょっと何これ？？アイン！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫だ。任せとけ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：台座に何かが記されている・・・これは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "　　　　『絶対試練：汝、答えを示せ。』", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.SCENE_TRUTH_ANSWER, ActionEvent.SceneAdd);
    }
  }

  public static void Message1000067(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000077 && One.TF.Event_Message1000078 == false)
    {
      if (One.TF.Event_Message1000040_VelgusChantSuccess == false)
      {
        Message(ref m_list, ref e_list, "アイン：駄目だ・・・反応しない・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ひょっとして・・・どこかで・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：やべ・・・頭が・・・ッグ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, " ～　THE　END　～　（夢幻の始まり）", ActionEvent.None);

        Message(ref m_list, ref e_list, "", ActionEvent.DungeonBadEnd);
      }
      else
      {
        Message(ref m_list, ref e_list, "", ActionEvent.ReturnToNormal);

        Message(ref m_list, ref e_list, "　　　　『空間が激しくフラッシュし、凝縮された空間へと連続的に小さくなる！！！』", ActionEvent.None);

        Message(ref m_list, ref e_list, "　　　　『パパパパパパパ！！！！ッバシュウウウゥゥゥン！！！！！！！』", ActionEvent.None);

        Message(ref m_list, ref e_list, "　　　　『凝縮された空間が弾け飛んだ後、台座の前にアインの倒れた姿があった』", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：アイン！！大丈夫！？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あ、ああ。大丈夫だ。イッツツツ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：な・・・な・・・な・・・っ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：何やってたのよ！！ホントに！！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ウワッ、いきなりそんな怒るなって・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：バカよ！！バカなのよアンタは本当に！！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：何だったのかって聞いてるのよ！！！信じられないわよ！！！", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：・・・本当・・・バカでしょ・・・勝手に突然行動して・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：す、すまねえ・・・悪かった。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：でも、今回だけは奇妙な感覚があったんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ココはきっと絶対的な何かがある。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そう信じて、歩を進めたんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ただ正直、ここまでの事象に遭遇するとは思ってなかった。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：本当にすまなかった。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：分かったわよ。もう、いいから。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：でも、次から本当に何か言ってからにしてよね。万が一かあってからじゃ遅いんだから。。。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：わ、分かった・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：で、どーだったんだよ？外側からじゃ全然見えなかったが？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ、何て言うんだろうな・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：見つけたんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：何を？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：１６番目の節", ActionEvent.None);

        Message(ref m_list, ref e_list, "エオネ：（・・・　っ！　・・・）", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：ウソでしょ？だって看板には１５個しか記されてなかったわよね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、確かにそうだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：だが、さっき確かに確認したんだ。台座の所で。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：おい、確かなんだろうな？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ、間違いない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：じゃあ、まだどこか開けられる場所があるって事？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：正直な所、未だに信じられないが、そういう事になる。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：マップ的には・・・確かに、まだ少しだけありそうな気はするわね・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうだな。きっとどこかにあるはずだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：見つけに行こう。これで最後だ。", ActionEvent.None);
      }
    }
  }

  public static void Message1000068(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000040_Complete_8 == false)
    {
      One.TF.Event_Message1000040_Complete_8 = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうしたの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらく、ここだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：少しだけ待っててくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：別に良いけど。でも仕掛けはなさそうよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、任せておけ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アイン、その場で視線を壁に向け、静かに姿勢を保ち続けた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_63_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：・・・よし！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・え、何よ今の？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何が？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうやって開いたのか？って聞いてるのよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、正直どうやったのかは分からない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：壁に眼を向けて色々考えている間に自然と・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ何だ。たまたまって事なのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こればっかりは、たまたまだ。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：真剣なのかテキトーなのか相変わらず分かんないわね・・・まあいいけど", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：もうこれで本当にラストなんだろうな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、詩の節16はすぐそこだ。行こう。", ActionEvent.None);
    }
  }

  public static void Message1000069(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000079 == false)
    {
      One.TF.Event_Message1000079 = true;
      One.AR.Velgus_BadEnd_GenesisGate = true;
      One.UpdateAkashicRecord();

      Message(ref m_list, ref e_list, "", ActionEvent.TurnToBlack);

      Message(ref m_list, ref e_list, "【　この時　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　絶対的な感覚をアインは掴み取っていた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　根源的な対象としての像　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　イメージや創造という類ではなく　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　時間軸や空間軸を超えた地点からの存在　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　この刻、その存在に対する認識が確信へと至ったのである　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスは眼を静かに見開いた状態でいた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.ReturnToNormal);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンスはすっと手を壁に向けてかざし始めた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_64_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ビリー：おいおい・・・一体どういう事だよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今、一瞬だけ見えたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何がだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それは・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何と言うか・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（あれ・・・何か景色が・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（何だこれ・・・意識が唐突に・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.TurnToBlack);

      Message(ref m_list, ref e_list, "アイン：（あれ・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ど・・・どこだ・・・これ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・ちょ・・・・！！　・・・っ・・・！！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（だ・・・だれ・・・だ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・っな・・・・・・！！！　フ・・・・っ・・・・よ！！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ッグ・・・声・・・が・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（やべえ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ここって・・・ど・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（な・・・なにが・・・ッグ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・！！！　・・・！！　・・・・って・・・死・・・・・・の・・・！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（俺はすでに・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（呼吸が・・・できてねえ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（意識も・・・無いな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・！！！！　・・・・・・！！　・・・っ・・・！！！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（な・・・なんだ・・・って・・・？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（だ・・・駄目・・・だ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（もう・・・終わる・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（やっちまったな・・・ハハハ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（悪い、ラナ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（俺はここまでの様だ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（次・・・に・・・は・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（俺・・・が・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.TurnToWhite);

      Message(ref m_list, ref e_list, "？？？：そのまま、身体を起こしなさい。アイン・ウォーレンス。", ActionEvent.None);

      // Message(ref m_list, ref e_list, "？？？：我は永劫の刻と無間の空間を刻みし存在", ActionEvent.None);
      Message(ref m_list, ref e_list, "？？？：我は■■■■と■■■■間■■■■存■", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　THE　END　～　（無間到達世界の始まり）", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.DungeonBadEnd);
    }

  }

  private static void Check1000040_Complete_2(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "", ActionEvent.MessageClear);

    if (One.TF.Event_Message1000061 == false)
    {
      One.TF.Event_Message1000061 = true;

      Message(ref m_list, ref e_list, "アイン：これは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（すげえな・・・何だろう・・・これ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ホラ、ボサーっとしてないで行くわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000062 == false)
    {
      One.TF.Event_Message1000062 = true;

      Message(ref m_list, ref e_list, "アイン：ここも・・・か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（何かが・・・描かれている？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、とっとと行こうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、オーケー。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000063 == false)
    {
      One.TF.Event_Message1000063 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（単なる風景にも見えるし、・・・いや、どうだろうな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まずは、進めてみるしかないんでしょ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その通りだ。次へ行こう。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000064 == false)
    {
      One.TF.Event_Message1000064 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（これは、何らかの特定の事象を示している様にも見えるな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。何かが分かりそうなのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、この時点では無理だ。他を探索しよう。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000065 == false)
    {
      One.TF.Event_Message1000065 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（事象・・・ならわし・・・それに性質・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ。今ここで考えてみるのかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すまねえ。まずは次だな。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000066 == false)
    {
      One.TF.Event_Message1000066 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（水・・・火・・・同質と表現か・・・）", ActionEvent.None);
    }

    if (One.TF.Event_Message1000045 && One.TF.Event_Message1000046 && One.TF.Event_Message1000047 && One.TF.Event_Message1000048 && One.TF.Event_Message1000049 && One.TF.Event_Message1000050)
    {
      One.TF.Event_Message1000040_Complete_2 = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_52_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_53_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_54_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：っな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おー、また開いたな！絶好調じゃねーか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうするの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今は足を止める所じゃないと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どこか他の場所が開いたのは確かだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：探索を続けよう。", ActionEvent.None);
    }
  }

  private static void Check1000040_Complete_3(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "", ActionEvent.MessageClear);

    if (One.TF.Event_Message1000067 == false)
    {
      One.TF.Event_Message1000067 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（文字じゃないのか・・・詠唱を示す何か・・・？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そこに突っ立ってないで、行きましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000068 == false)
    {
      One.TF.Event_Message1000068 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（・・・人々と・・・神々と・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：オラー、早く行くぞオラー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：わ、分かった分かった。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000069 == false)
    {
      One.TF.Event_Message1000069 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（・・・連続性・・・完全なる現存・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ、ひょっとして何か見えてるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、何でもない。次へ行こう。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000070 == false)
    {
      One.TF.Event_Message1000070 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（・・・見つける事、感じている事は・・・偽り・・・？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：オーーイ、誤ってどっか行ってんじゃねーのかー？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、いやそういうわけじゃ無いんだ。よし、次だ。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000071 == false)
    {
      One.TF.Event_Message1000071 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（・・・相反と同時に一意・・・いや、違うか・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：毎回考えている感じがするけど、後でまとめるんでしょ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そんな所だな。よし、行こう。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000072 == false)
    {
      One.TF.Event_Message1000072 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（・・・これは・・・まさか・・・）", ActionEvent.None);
    }

    if (One.TF.Event_Message1000051 && One.TF.Event_Message1000052 && One.TF.Event_Message1000053 && One.TF.Event_Message1000054 && One.TF.Event_Message1000055 && One.TF.Event_Message1000056)
    {
      One.TF.Event_Message1000040_Complete_3 = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_55_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ビリー：よーし、よしよし！アイン、てめー本当にすげえぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと本当に静かね。一体どうしたわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分からないんだ、今回ばかりは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：進めて見れば、何かが分かるかもしれないが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：最終的には・・・無限に近い順列を探す事になる気がするんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：(・・・っ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：道は順調に開けているけど、そうじゃなくて、別の観点を追っているのかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、それすらも分からない。すまねえが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだラナ。頼みがある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺がこれまでに通ってきた部屋と立ち止まったポイントの順序を記録しておいてもらえないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：大丈夫よ。既にメモしてあるから。どうせ後になって考え込んでみるつもりなんでしょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジか。すげー助かるぜ！サンキューな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よーし、まとまったかぁ？次開いた所を探しに行こうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解！", ActionEvent.None);
    }
  }

  private static void Check1000040_Complete_4(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "", ActionEvent.MessageClear);

    if (One.TF.Event_Message1000073 == false)
    {
      One.TF.Event_Message1000073 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（・・・循環・・・それから・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうなの？何かが見えてるんだったら、後で教えてくれると良いんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、もう少しだと思う。続けて他をあたろう。", ActionEvent.None);
    }
    else if (One.TF.Event_Message1000074 == false)
    {
      One.TF.Event_Message1000074 = true;

      Message(ref m_list, ref e_list, "【 アインは壁に描かれている不思議な紋様を凝視した。】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（・・・無限であり・・・それから世界・・・か・・・）", ActionEvent.None);
    }

    if (One.TF.Event_Message1000057 && One.TF.Event_Message1000058)
    {
      One.TF.Event_Message1000040_Complete_4 = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ・・・ズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_56_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：一応、次あたりで一度考えてみたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあ、とりあえず開いた所を探せば良いんだよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っしゃ、早速行こうぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー、了解だ。", ActionEvent.None);
    }
  }

  public static void Message1000100(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Success == false)
    {
      One.TF.Event_Message1000100_Number_7 = false;
      One.TF.Event_Message1000100_Number_6_2 = false;
      One.TF.Event_Message1000100_Number_6_1 = false;
      One.TF.Event_Message1000100_Number_6 = false;
      One.TF.Event_Message1000100_Number_5_2 = false;
      One.TF.Event_Message1000100_Number_5_1 = false;
      One.TF.Event_Message1000100_Number_5 = false;
      One.TF.Event_Message1000100_Number_4_1 = false;
      One.TF.Event_Message1000100_Number_4 = false;
      One.TF.Event_Message1000100_Number_3_3 = false;
      One.TF.Event_Message1000100_Number_3_2 = false;
      One.TF.Event_Message1000100_Number_3_1 = false;
      One.TF.Event_Message1000100_Number_3 = false;
      One.TF.Event_Message1000100_Number_2_1 = false;
      One.TF.Event_Message1000100_Number_2 = false;
      One.TF.Event_Message1000100_Number_1_3 = false;
      One.TF.Event_Message1000100_Number_1_2 = false;
      One.TF.Event_Message1000100_Number_1_1 = false;
      One.TF.Event_Message1000100_Number_1 = false;
      One.TF.Event_Message1000100_Failed = false;
    }

    if (One.TF.Event_Message1000100 == false)
    {
      One.TF.Event_Message1000100 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。読んでみるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　数が示すは儀式の順路。巡礼者の行く手を阻まん　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こいつは行けそうだな。やってみるとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：簡単そうなの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：少し考えるかもしれないが、おそらく大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、調子こいて踏ん詰まるんじゃねーぞ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、分かった。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　数が示すは儀式の順路。巡礼者の行く手を阻まん　』", ActionEvent.None);
    }
  }

  public static void Message1000101(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000101 == false)
    {
      One.TF.Event_Message1000101 = true;

      Message(ref m_list, ref e_list, "アイン：ここは・・・少し周囲を確認してみるとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンスは周囲を見回した 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "3", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：番号のあるタイルが幾つかあるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：順番どおりに踏むんじゃねえのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、多分それで良いと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おーし、じゃ早速いこうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、任せておけ。", ActionEvent.None);
    }
  }

  public static void Message1000102(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
        One.TF.Event_Message1000100_Number_6_2 == false &&
        One.TF.Event_Message1000100_Number_6_1 == false &&
        One.TF.Event_Message1000100_Number_6 == false &&
        One.TF.Event_Message1000100_Number_5_2 == false &&
        One.TF.Event_Message1000100_Number_5_1 == false &&
        One.TF.Event_Message1000100_Number_5 == false &&
        One.TF.Event_Message1000100_Number_4_1 == false &&
        One.TF.Event_Message1000100_Number_4 == false &&
        One.TF.Event_Message1000100_Number_3_3 == false &&
        One.TF.Event_Message1000100_Number_3_2 == false &&
        One.TF.Event_Message1000100_Number_3_1 == false &&
        One.TF.Event_Message1000100_Number_3 == false &&
        One.TF.Event_Message1000100_Number_2_1 == false &&
        One.TF.Event_Message1000100_Number_2 == false &&
        One.TF.Event_Message1000100_Number_1_3 == false &&
        One.TF.Event_Message1000100_Number_1_2 == false &&
        One.TF.Event_Message1000100_Number_1_1 == false &&
        One.TF.Event_Message1000100_Number_1 == false)
    {
      One.TF.Event_Message1000100_Number_1 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000103(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
        One.TF.Event_Message1000100_Number_6_2 == false &&
        One.TF.Event_Message1000100_Number_6_1 == false &&
        One.TF.Event_Message1000100_Number_6 == false &&
        One.TF.Event_Message1000100_Number_5_2 == false &&
        One.TF.Event_Message1000100_Number_5_1 == false &&
        One.TF.Event_Message1000100_Number_5 == false &&
        One.TF.Event_Message1000100_Number_4_1 == false &&
        One.TF.Event_Message1000100_Number_4 == false &&
        One.TF.Event_Message1000100_Number_3_3 == false &&
        One.TF.Event_Message1000100_Number_3_2 == false &&
        One.TF.Event_Message1000100_Number_3_1 == false &&
        One.TF.Event_Message1000100_Number_3 == false &&
        One.TF.Event_Message1000100_Number_2_1 == false &&
        One.TF.Event_Message1000100_Number_2 == false &&
        One.TF.Event_Message1000100_Number_1_3 == false &&
        One.TF.Event_Message1000100_Number_1_2 == false &&
        One.TF.Event_Message1000100_Number_1_1 == false &&
        One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_1_1 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000104(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
        One.TF.Event_Message1000100_Number_6_2 == false &&
        One.TF.Event_Message1000100_Number_6_1 == false &&
        One.TF.Event_Message1000100_Number_6 == false &&
        One.TF.Event_Message1000100_Number_5_2 == false &&
        One.TF.Event_Message1000100_Number_5_1 == false &&
        One.TF.Event_Message1000100_Number_5 == false &&
        One.TF.Event_Message1000100_Number_4_1 == false &&
        One.TF.Event_Message1000100_Number_4 == false &&
        One.TF.Event_Message1000100_Number_3_3 == false &&
        One.TF.Event_Message1000100_Number_3_2 == false &&
        One.TF.Event_Message1000100_Number_3_1 == false &&
        One.TF.Event_Message1000100_Number_3 == false &&
        One.TF.Event_Message1000100_Number_2_1 == false &&
        One.TF.Event_Message1000100_Number_2 == false &&
        One.TF.Event_Message1000100_Number_1_3 == false &&
        One.TF.Event_Message1000100_Number_1_2 == false &&
        One.TF.Event_Message1000100_Number_1_1 &&
        One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_1_2 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000105(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 == false &&
     One.TF.Event_Message1000100_Number_4 == false &&
     One.TF.Event_Message1000100_Number_3_3 == false &&
     One.TF.Event_Message1000100_Number_3_2 == false &&
     One.TF.Event_Message1000100_Number_3_1 == false &&
     One.TF.Event_Message1000100_Number_3 == false &&
     One.TF.Event_Message1000100_Number_2_1 == false &&
     One.TF.Event_Message1000100_Number_2 == false &&
     One.TF.Event_Message1000100_Number_1_3 == false &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_1_3 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000106(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 == false &&
     One.TF.Event_Message1000100_Number_4 == false &&
     One.TF.Event_Message1000100_Number_3_3 == false &&
     One.TF.Event_Message1000100_Number_3_2 == false &&
     One.TF.Event_Message1000100_Number_3_1 == false &&
     One.TF.Event_Message1000100_Number_3 == false &&
     One.TF.Event_Message1000100_Number_2_1 == false &&
     One.TF.Event_Message1000100_Number_2 == false &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_2 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000107(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 == false &&
     One.TF.Event_Message1000100_Number_4 == false &&
     One.TF.Event_Message1000100_Number_3_3 == false &&
     One.TF.Event_Message1000100_Number_3_2 == false &&
     One.TF.Event_Message1000100_Number_3_1 == false &&
     One.TF.Event_Message1000100_Number_3 == false &&
     One.TF.Event_Message1000100_Number_2_1 == false &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_2_1 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000108(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 == false &&
     One.TF.Event_Message1000100_Number_4 == false &&
     One.TF.Event_Message1000100_Number_3_3 == false &&
     One.TF.Event_Message1000100_Number_3_2 == false &&
     One.TF.Event_Message1000100_Number_3_1 == false &&
     One.TF.Event_Message1000100_Number_3 == false &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_3 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000109(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 == false &&
     One.TF.Event_Message1000100_Number_4 == false &&
     One.TF.Event_Message1000100_Number_3_3 == false &&
     One.TF.Event_Message1000100_Number_3_2 == false &&
     One.TF.Event_Message1000100_Number_3_1 == false &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_3_1 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000110(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 == false &&
     One.TF.Event_Message1000100_Number_4 == false &&
     One.TF.Event_Message1000100_Number_3_3 == false &&
     One.TF.Event_Message1000100_Number_3_2 == false &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_3_2 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000111(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 == false &&
     One.TF.Event_Message1000100_Number_4 == false &&
     One.TF.Event_Message1000100_Number_3_3 == false &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_3_3 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000112(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 == false &&
     One.TF.Event_Message1000100_Number_4 == false &&
     One.TF.Event_Message1000100_Number_3_3 &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_4 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000113(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 == false &&
     One.TF.Event_Message1000100_Number_4 &&
     One.TF.Event_Message1000100_Number_3_3 &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_4_1 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000114(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 == false &&
     One.TF.Event_Message1000100_Number_4_1 &&
     One.TF.Event_Message1000100_Number_4 &&
     One.TF.Event_Message1000100_Number_3_3 &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_5 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000115(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 == false &&
     One.TF.Event_Message1000100_Number_5 &&
     One.TF.Event_Message1000100_Number_4_1 &&
     One.TF.Event_Message1000100_Number_4 &&
     One.TF.Event_Message1000100_Number_3_3 &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_5_1 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000116(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 == false &&
     One.TF.Event_Message1000100_Number_5_1 &&
     One.TF.Event_Message1000100_Number_5 &&
     One.TF.Event_Message1000100_Number_4_1 &&
     One.TF.Event_Message1000100_Number_4 &&
     One.TF.Event_Message1000100_Number_3_3 &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_5_2 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000117(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 == false &&
     One.TF.Event_Message1000100_Number_5_2 &&
     One.TF.Event_Message1000100_Number_5_1 &&
     One.TF.Event_Message1000100_Number_5 &&
     One.TF.Event_Message1000100_Number_4_1 &&
     One.TF.Event_Message1000100_Number_4 &&
     One.TF.Event_Message1000100_Number_3_3 &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_6 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000118(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 == false &&
     One.TF.Event_Message1000100_Number_6 &&
     One.TF.Event_Message1000100_Number_5_2 &&
     One.TF.Event_Message1000100_Number_5_1 &&
     One.TF.Event_Message1000100_Number_5 &&
     One.TF.Event_Message1000100_Number_4_1 &&
     One.TF.Event_Message1000100_Number_4 &&
     One.TF.Event_Message1000100_Number_3_3 &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_6_1 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000119(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 == false &&
     One.TF.Event_Message1000100_Number_6_1 &&
     One.TF.Event_Message1000100_Number_6 &&
     One.TF.Event_Message1000100_Number_5_2 &&
     One.TF.Event_Message1000100_Number_5_1 &&
     One.TF.Event_Message1000100_Number_5 &&
     One.TF.Event_Message1000100_Number_4_1 &&
     One.TF.Event_Message1000100_Number_4 &&
     One.TF.Event_Message1000100_Number_3_3 &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_6_2 = true;
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;
    }
  }
  public static void Message1000120(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000100_Number_7 == false &&
     One.TF.Event_Message1000100_Number_6_2 &&
     One.TF.Event_Message1000100_Number_6_1 &&
     One.TF.Event_Message1000100_Number_6 &&
     One.TF.Event_Message1000100_Number_5_2 &&
     One.TF.Event_Message1000100_Number_5_1 &&
     One.TF.Event_Message1000100_Number_5 &&
     One.TF.Event_Message1000100_Number_4_1 &&
     One.TF.Event_Message1000100_Number_4 &&
     One.TF.Event_Message1000100_Number_3_3 &&
     One.TF.Event_Message1000100_Number_3_2 &&
     One.TF.Event_Message1000100_Number_3_1 &&
     One.TF.Event_Message1000100_Number_3 &&
     One.TF.Event_Message1000100_Number_2_1 &&
     One.TF.Event_Message1000100_Number_2 &&
     One.TF.Event_Message1000100_Number_1_3 &&
     One.TF.Event_Message1000100_Number_1_2 &&
     One.TF.Event_Message1000100_Number_1_1 &&
     One.TF.Event_Message1000100_Number_1)
    {
      One.TF.Event_Message1000100_Number_7 = true;

      if (One.TF.Event_Message1000100_Failed == false)
      {
        One.TF.Event_Message1000100_Success = true;
        Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

        Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_86_O, ActionEvent.RemoveFieldObject);

        Message(ref m_list, ref e_list, "アイン：よし、オッケー！", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：やったじゃねえか！次行ってみようぜ！", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あれ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：どこか順番を間違えたんじゃないの？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうかもな・・・もう一度看板に戻ってやり直すか。", ActionEvent.None);
      }
    }
    else
    {
      One.TF.Event_Message1000100_Failed = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どこか順番を間違えたんじゃないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうかもな・・・もう一度看板に戻ってやり直すか。", ActionEvent.None);
    }
  }

  public static void Message1000121(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Success == false)
    {
      One.TF.Event_Message1000110_Number_3_2 = false;
      One.TF.Event_Message1000110_Number_3_1 = false;
      One.TF.Event_Message1000110_Number_3 = false;
      One.TF.Event_Message1000110_Number_2_2 = false;
      One.TF.Event_Message1000110_Number_2_1 = false;
      One.TF.Event_Message1000110_Number_2 = false;
      One.TF.Event_Message1000110_Number_1_9 = false;
      One.TF.Event_Message1000110_Number_1_8 = false;
      One.TF.Event_Message1000110_Number_1_7 = false;
      One.TF.Event_Message1000110_Number_1_6 = false;
      One.TF.Event_Message1000110_Number_1_5 = false;
      One.TF.Event_Message1000110_Number_1_4 = false;
      One.TF.Event_Message1000110_Number_1_3 = false;
      One.TF.Event_Message1000110_Number_1_2 = false;
      One.TF.Event_Message1000110_Number_1_1 = false;
      One.TF.Event_Message1000110_Number_1_0 = false;
      One.TF.Event_Message1000110_Number_1 = false;
      One.TF.Event_Message1000110_Number_0_6 = false;
      One.TF.Event_Message1000110_Number_0_5 = false;
      One.TF.Event_Message1000110_Number_0_4 = false;
      One.TF.Event_Message1000110_Number_0_3 = false;
      One.TF.Event_Message1000110_Number_0_2 = false;
      One.TF.Event_Message1000110_Number_0_1 = false;
      One.TF.Event_Message1000110_Failed = false;
    }

    if (One.TF.Event_Message1000110 == false)
    {
      One.TF.Event_Message1000110 = true;

      Message(ref m_list, ref e_list, "アイン：さてと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンスは周囲を見回した 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "4", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：なるほど、内容としては同じみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：さっきと同じ様に順序を間違えない様に進めるって感じかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でも、タイルの番号がかなり少なくなってるわね。分かりそう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫だ。やってみるとしよう。", ActionEvent.None);
    }
  }

  public static void Message1000122(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 == false &&
        One.TF.Event_Message1000110_Number_1_0 == false &&
        One.TF.Event_Message1000110_Number_1 == false &&
        One.TF.Event_Message1000110_Number_0_6 == false &&
        One.TF.Event_Message1000110_Number_0_5 == false &&
        One.TF.Event_Message1000110_Number_0_4 == false &&
        One.TF.Event_Message1000110_Number_0_3 == false &&
        One.TF.Event_Message1000110_Number_0_2 == false &&
        One.TF.Event_Message1000110_Number_0_1 == false
        )
    {
      One.TF.Event_Message1000110_Number_0_1 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000123(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 == false &&
        One.TF.Event_Message1000110_Number_1_0 == false &&
        One.TF.Event_Message1000110_Number_1 == false &&
        One.TF.Event_Message1000110_Number_0_6 == false &&
        One.TF.Event_Message1000110_Number_0_5 == false &&
        One.TF.Event_Message1000110_Number_0_4 == false &&
        One.TF.Event_Message1000110_Number_0_3 == false &&
        One.TF.Event_Message1000110_Number_0_2 == false &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_0_2 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000124(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 == false &&
        One.TF.Event_Message1000110_Number_1_0 == false &&
        One.TF.Event_Message1000110_Number_1 == false &&
        One.TF.Event_Message1000110_Number_0_6 == false &&
        One.TF.Event_Message1000110_Number_0_5 == false &&
        One.TF.Event_Message1000110_Number_0_4 == false &&
        One.TF.Event_Message1000110_Number_0_3 == false &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_0_3 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000125(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 == false &&
        One.TF.Event_Message1000110_Number_1_0 == false &&
        One.TF.Event_Message1000110_Number_1 == false &&
        One.TF.Event_Message1000110_Number_0_6 == false &&
        One.TF.Event_Message1000110_Number_0_5 == false &&
        One.TF.Event_Message1000110_Number_0_4 == false &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_0_4 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000126(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 == false &&
        One.TF.Event_Message1000110_Number_1_0 == false &&
        One.TF.Event_Message1000110_Number_1 == false &&
        One.TF.Event_Message1000110_Number_0_6 == false &&
        One.TF.Event_Message1000110_Number_0_5 == false &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_0_5 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000127(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 == false &&
        One.TF.Event_Message1000110_Number_1_0 == false &&
        One.TF.Event_Message1000110_Number_1 == false &&
        One.TF.Event_Message1000110_Number_0_6 == false &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_0_6 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000128(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 == false &&
        One.TF.Event_Message1000110_Number_1_0 == false &&
        One.TF.Event_Message1000110_Number_1 == false &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000129(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 == false &&
        One.TF.Event_Message1000110_Number_1_0 == false &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_0 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000130(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 == false &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_1 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000131(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 == false &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_2 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000132(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 == false &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_3 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000133(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 == false &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_4 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000134(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 == false &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_5 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000135(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 == false &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_6 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000136(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 == false &&
        One.TF.Event_Message1000110_Number_1_6 &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_7 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000137(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 == false &&
        One.TF.Event_Message1000110_Number_1_7 &&
        One.TF.Event_Message1000110_Number_1_6 &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_8 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000138(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 == false &&
        One.TF.Event_Message1000110_Number_1_8 &&
        One.TF.Event_Message1000110_Number_1_7 &&
        One.TF.Event_Message1000110_Number_1_6 &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_1_9 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000139(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 == false &&
        One.TF.Event_Message1000110_Number_1_9 &&
        One.TF.Event_Message1000110_Number_1_8 &&
        One.TF.Event_Message1000110_Number_1_7 &&
        One.TF.Event_Message1000110_Number_1_6 &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_2 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000140(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 == false &&
        One.TF.Event_Message1000110_Number_2 &&
        One.TF.Event_Message1000110_Number_1_9 &&
        One.TF.Event_Message1000110_Number_1_8 &&
        One.TF.Event_Message1000110_Number_1_7 &&
        One.TF.Event_Message1000110_Number_1_6 &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_2_1 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000141(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 == false &&
        One.TF.Event_Message1000110_Number_2_1 &&
        One.TF.Event_Message1000110_Number_2 &&
        One.TF.Event_Message1000110_Number_1_9 &&
        One.TF.Event_Message1000110_Number_1_8 &&
        One.TF.Event_Message1000110_Number_1_7 &&
        One.TF.Event_Message1000110_Number_1_6 &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_2_2 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000142(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 == false &&
        One.TF.Event_Message1000110_Number_2_2 &&
        One.TF.Event_Message1000110_Number_2_1 &&
        One.TF.Event_Message1000110_Number_2 &&
        One.TF.Event_Message1000110_Number_1_9 &&
        One.TF.Event_Message1000110_Number_1_8 &&
        One.TF.Event_Message1000110_Number_1_7 &&
        One.TF.Event_Message1000110_Number_1_6 &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_3 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000143(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 == false &&
        One.TF.Event_Message1000110_Number_3 &&
        One.TF.Event_Message1000110_Number_2_2 &&
        One.TF.Event_Message1000110_Number_2_1 &&
        One.TF.Event_Message1000110_Number_2 &&
        One.TF.Event_Message1000110_Number_1_9 &&
        One.TF.Event_Message1000110_Number_1_8 &&
        One.TF.Event_Message1000110_Number_1_7 &&
        One.TF.Event_Message1000110_Number_1_6 &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_3_1 = true;
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;
    }
  }
  public static void Message1000144(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000110_Number_3_2 == false &&
        One.TF.Event_Message1000110_Number_3_1 &&
        One.TF.Event_Message1000110_Number_3 &&
        One.TF.Event_Message1000110_Number_2_2 &&
        One.TF.Event_Message1000110_Number_2_1 &&
        One.TF.Event_Message1000110_Number_2 &&
        One.TF.Event_Message1000110_Number_1_9 &&
        One.TF.Event_Message1000110_Number_1_8 &&
        One.TF.Event_Message1000110_Number_1_7 &&
        One.TF.Event_Message1000110_Number_1_6 &&
        One.TF.Event_Message1000110_Number_1_5 &&
        One.TF.Event_Message1000110_Number_1_4 &&
        One.TF.Event_Message1000110_Number_1_3 &&
        One.TF.Event_Message1000110_Number_1_2 &&
        One.TF.Event_Message1000110_Number_1_1 &&
        One.TF.Event_Message1000110_Number_1_0 &&
        One.TF.Event_Message1000110_Number_1 &&
        One.TF.Event_Message1000110_Number_0_6 &&
        One.TF.Event_Message1000110_Number_0_5 &&
        One.TF.Event_Message1000110_Number_0_4 &&
        One.TF.Event_Message1000110_Number_0_3 &&
        One.TF.Event_Message1000110_Number_0_2 &&
        One.TF.Event_Message1000110_Number_0_1
        )
    {
      One.TF.Event_Message1000110_Number_3_2 = true;

      if (One.TF.Event_Message1000110_Failed == false)
      {
        One.TF.Event_Message1000110_Success = true;
        Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

        Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_111_O, ActionEvent.RemoveFieldObject);

        Message(ref m_list, ref e_list, "アイン：よっしゃ！開いたぞ！", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：順調みたいね。次に進んでみましょ♪", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：オーケー！", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あら？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：踏むべきタイルの順番を間違えてるんじゃないの？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そうだな・・・もう一度この区画の最初の地点に戻ってやり直すか。", ActionEvent.None);
      }
    }
    else
    {
      One.TF.Event_Message1000110_Failed = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：踏むべきタイルの順番を間違えてるんじゃないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・もう一度この区画の最初の地点に戻ってやり直すか。", ActionEvent.None);
    }
  }

  public static void Message1000145(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000120_Success == false)
    {
      One.TF.Event_Message1000120_Number_0_7 = false;
      One.TF.Event_Message1000120_Number_0_6 = false;
      One.TF.Event_Message1000120_Number_0_5 = false;
      One.TF.Event_Message1000120_Number_0_4 = false;
      One.TF.Event_Message1000120_Number_0_3 = false;
      One.TF.Event_Message1000120_Number_0_2 = false;
      One.TF.Event_Message1000120_Number_0_1 = false;
      One.TF.Event_Message1000120_Failed = false;
    }

    if (One.TF.Event_Message1000120 == false)
    {
      One.TF.Event_Message1000120 = true;

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンスは周囲を見回した 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "5", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：なるほど・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どういう意味で、「なるほど」なんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、番号を示すタイルが無いんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いや、別にそんなもんじゃねえか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、ここに来て無いってのはオカシイだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いや、オカシイ事言ってるのはテメーだ。ボケアイン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、オカシイ事を言ってるのは認めるが、どうもおかしいんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いーや、いやいやいや、絶対おかしいだろ。それ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、そこまでよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、何か目星でもあるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：強いて言えば、番号を示すタイルが無いって事だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、ちょっと任せてくれないか。探索してみたいんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。何か見つかったら教えてよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);
    }
  }

  public static void Message1000146(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000120_Number_0_7 == false &&
        One.TF.Event_Message1000120_Number_0_6 == false &&
        One.TF.Event_Message1000120_Number_0_5 == false &&
        One.TF.Event_Message1000120_Number_0_4 == false &&
        One.TF.Event_Message1000120_Number_0_3 == false &&
        One.TF.Event_Message1000120_Number_0_2 == false &&
        One.TF.Event_Message1000120_Number_0_1 == false
        )
    {
      One.TF.Event_Message1000120_Number_0_1 = true;
    }
    else
    {
      One.TF.Event_Message1000120_Failed = true;
    }
  }
  public static void Message1000147(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000120_Number_0_7 == false &&
        One.TF.Event_Message1000120_Number_0_6 == false &&
        One.TF.Event_Message1000120_Number_0_5 == false &&
        One.TF.Event_Message1000120_Number_0_4 == false &&
        One.TF.Event_Message1000120_Number_0_3 == false &&
        One.TF.Event_Message1000120_Number_0_2 == false &&
        One.TF.Event_Message1000120_Number_0_1
        )
    {
      One.TF.Event_Message1000120_Number_0_2 = true;
    }
    else
    {
      One.TF.Event_Message1000120_Failed = true;
    }
  }
  public static void Message1000148(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000120_Number_0_7 == false &&
        One.TF.Event_Message1000120_Number_0_6 == false &&
        One.TF.Event_Message1000120_Number_0_5 == false &&
        One.TF.Event_Message1000120_Number_0_4 == false &&
        One.TF.Event_Message1000120_Number_0_3 == false &&
        One.TF.Event_Message1000120_Number_0_2 &&
        One.TF.Event_Message1000120_Number_0_1
        )
    {
      One.TF.Event_Message1000120_Number_0_3 = true;
    }
    else
    {
      One.TF.Event_Message1000120_Failed = true;
    }
  }
  public static void Message1000149(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000120_Number_0_7 == false &&
        One.TF.Event_Message1000120_Number_0_6 == false &&
        One.TF.Event_Message1000120_Number_0_5 == false &&
        One.TF.Event_Message1000120_Number_0_4 == false &&
        One.TF.Event_Message1000120_Number_0_3 &&
        One.TF.Event_Message1000120_Number_0_2 &&
        One.TF.Event_Message1000120_Number_0_1
        )
    {
      One.TF.Event_Message1000120_Number_0_4 = true;
    }
    else
    {
      One.TF.Event_Message1000120_Failed = true;
    }
  }
  public static void Message1000150(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000120_Number_0_7 == false &&
        One.TF.Event_Message1000120_Number_0_6 == false &&
        One.TF.Event_Message1000120_Number_0_5 == false &&
        One.TF.Event_Message1000120_Number_0_4 &&
        One.TF.Event_Message1000120_Number_0_3 &&
        One.TF.Event_Message1000120_Number_0_2 &&
        One.TF.Event_Message1000120_Number_0_1
        )
    {
      One.TF.Event_Message1000120_Number_0_5 = true;
    }
    else
    {
      One.TF.Event_Message1000120_Failed = true;
    }
  }
  public static void Message1000151(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000120_Number_0_7 == false &&
        One.TF.Event_Message1000120_Number_0_6 == false &&
        One.TF.Event_Message1000120_Number_0_5 &&
        One.TF.Event_Message1000120_Number_0_4 &&
        One.TF.Event_Message1000120_Number_0_3 &&
        One.TF.Event_Message1000120_Number_0_2 &&
        One.TF.Event_Message1000120_Number_0_1
        )
    {
      One.TF.Event_Message1000120_Number_0_6 = true;
    }
    else
    {
      One.TF.Event_Message1000120_Failed = true;
    }
  }
  public static void Message1000152(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if (One.TF.Event_Message1000120_Number_0_7 == false &&
        One.TF.Event_Message1000120_Number_0_6 &&
        One.TF.Event_Message1000120_Number_0_5 &&
        One.TF.Event_Message1000120_Number_0_4 &&
        One.TF.Event_Message1000120_Number_0_3 &&
        One.TF.Event_Message1000120_Number_0_2 &&
        One.TF.Event_Message1000120_Number_0_1
        )
    {
      One.TF.Event_Message1000120_Number_0_7 = true;

      if (One.TF.Event_Message1000120_Failed == false)
      {
        One.TF.Event_Message1000120_Success = true;

        Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

        Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_120_O, ActionEvent.RemoveFieldObject);

        Message(ref m_list, ref e_list, "アイン：よし、当たりだったみたいだな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：はぁ？？　何でだ？？？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：これまでと同じルールを当てはめてみたんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：スタート地点とゴール地点があり、その途中経路は決められている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：そう考えれば、この区画は一通りしかない事が分かるはずだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：ゴール地点が何でココなんだよ？？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：宝箱が初っ端から置いてあったろ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：ああ、確かにな。それがなんだっつうんだよ？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あれは一種のガイドだろう。無くても辿り着けるが、一応ヒントになっている。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：はぁ？？？", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：あと、さっきラナにマップのメモを見せてもらった。それで考えてみたんだ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：宝箱を迂回。一本道で戻りなし。全タイルを必ず通過する事。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：まあ分かってしまえばそんな難しくは無いな。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：はぁ？？？", ActionEvent.None);

        Message(ref m_list, ref e_list, "ラナ：相変わらずそういう独特の感覚はあるのね。言ってる内容が支離滅裂なんだけどね。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：実際見つけた事だし、それで良しとしてくれ。ハハハ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ビリー：まあ良いか！多分お宝なんだろ？早く取ろうぜ！", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：っしゃ、行こう！", ActionEvent.None);
      }
      else
      {
        // ここはノーヒントで、メッセージは表示しない。
      }
    }
    else
    {
      One.TF.Event_Message1000120_Failed = true;

      // ここはノーヒントで、メッセージは表示しない。
    }
  }

  public static void Message1000153(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：どうやら、鍵みたいだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：よぉし、閉まっている扉があったら使ってみようぜ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：オーケー、了解だ。", ActionEvent.None);
  }

  public static void Message1000160(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000130 == false)
    {
      One.TF.Event_Message1000130 = true;

      Message(ref m_list, ref e_list, "アイン：看板があるな。なになに。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　非目的化された事象、起源の調べは遊戯の中にある　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほどな・・・そういう考え方か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ちょっと意味分かんねえが、どういう事なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、おそらく深い意味はないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そうじゃなくてだな、どういう事かを聞いてんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・どう言えば良いのか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ポイントとか要素はなく、純粋に触れてみれば解ける、って事かな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだぁ？そりゃ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・まあ、実際に見てみようぜ。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　非目的化された事象、起源の調べは遊戯の中にある　』", ActionEvent.None);

      if (One.TF.Event_Message1000130_Success == false)
      {
        if (One.TF.Event_Message1000130_Progress_1 == false)
        {
          One.TF.Event_Message1000130_Progress_1 = true;

          Message(ref m_list, ref e_list, "『ッカチ！・・・ゴオオォォン・・・』", ActionEvent.None);

          Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallReset);

          Message(ref m_list, ref e_list, "ビリー：お？何か音がしなかったか。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：きっとこの先のエリアにあった球体の位置がリセットされたんだろう。", ActionEvent.None);

          Message(ref m_list, ref e_list, "ビリー：なるほどな。じゃあ、何度でもトライできそうだな。", ActionEvent.None);

          Message(ref m_list, ref e_list, "アイン：ああ、もう一度最初からやってみよう。", ActionEvent.None);
        }
        else
        {
          Message(ref m_list, ref e_list, "『ッカチ！・・・ゴオオォォン・・・』", ActionEvent.None);

          Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallReset);

          Message(ref m_list, ref e_list, "アイン：よし、もう一度最初からやってみよう。", ActionEvent.None);
        }
      }
      else if (One.TF.Event_Message1000130_Success_2 == false)
      {
        if (One.TF.Event_Message1000132)
        {
          if (One.TF.Event_Message1000133 == false)
          {
            One.TF.Event_Message1000133 = true;

            Message(ref m_list, ref e_list, "（ガッ、ガガアァァァン・・・！）", ActionEvent.None);

            Message(ref m_list, ref e_list, "", ActionEvent.VelgusCircleChange);

            Message(ref m_list, ref e_list, "ビリー：おお！？　何か今音がしたな！", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：よし、改めて看板を調べたのが当たりだったみたいだな。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ビリー：お前、本当よく見つけるな。そういうの。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：まあ、何となくだな。この神殿は奇麗な造りだから、感覚的に読みやすいんだ。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ビリー：俺には分かんねーけどな。で、もう一度さっきの所に行けば良いんだな？", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：ああ、そうだ。早速行ってみよう。", ActionEvent.None);
          }
          else
          {
            Message(ref m_list, ref e_list, "『ッカチ！・・・ゴオオォォン・・・』", ActionEvent.None);

            Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallReset);

            Message(ref m_list, ref e_list, "アイン：よし、もう一度最初からやってみよう。", ActionEvent.None);
          }
        }
      }
      else if (One.TF.Event_Message1000130_Success_3 == false)
      {
        if (One.TF.Event_Message1000134)
        {
          if (One.TF.Event_Message1000135 == false)
          {
            One.TF.Event_Message1000135 = true;

            Message(ref m_list, ref e_list, "（ガッ、ガガアァァァン・・・！）", ActionEvent.None);

            Message(ref m_list, ref e_list, "", ActionEvent.VelgusCircleChange);

            Message(ref m_list, ref e_list, "ビリー：おお！　マジかよ、おい！？", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：オーケー。少々不安もあったが、やっぱりまだあったな。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ラナ：そういうのって、どの辺りから掴みとってるわけ？", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：この神殿に入った瞬間から・・・かな。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：この神殿は人工的な感じがするんだ。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ビリー：あたりめーだろ。神殿なんだから人工的に建造したに決まってるだろ。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：いや、それはそうなんだが、とにかく自然的なレイアウトじゃないんだ。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：常に何かしらを隠しているか、与えているか、気付かせないか、錯覚させるか・・・", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：妙な言い方になってしまうが【試練】というのが近いのかな。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：いや【調和】とでも言うべきかな。", ActionEvent.None);

            Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　・・・）", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：その前に【分離】と【融合】が根本的にある気もするが・・・", ActionEvent.None);

            Message(ref m_list, ref e_list, "ビリー：どんどん意味不明になってきてるな、その辺でもういいぞ、十分だ。", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：ハハハ・・・まあ、何となくありそうだなって思えてくる造りになってるのさ。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ラナ：まだまだ続きそうなの？", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：いや、おそらくこれで最後だろう。", ActionEvent.None);

            Message(ref m_list, ref e_list, "ビリー：よし、ラストか！じゃあ、早いとこ解いてしまおーぜ！", ActionEvent.None);

            Message(ref m_list, ref e_list, "アイン：オーケー！", ActionEvent.None);
          }
          else
          {
            Message(ref m_list, ref e_list, "『ッカチ！・・・ゴオオォォン・・・』", ActionEvent.None);

            Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallReset);

            Message(ref m_list, ref e_list, "アイン：よし、もう一度最初からやってみよう。", ActionEvent.None);
          }
        }
      }
    }
  }

  public static void Message1000161(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000131 == false)
    {
      One.TF.Event_Message1000131 = true;

      Message(ref m_list, ref e_list, "アイン：おお！これは！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンスは周囲を見回した 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "6", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "ラナ：広いわね・・・。あっ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：真ん中にあるアレ、何かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：空中に浮いてるのか？丸い形状をした何かに見えるが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何か妙な色付きのタイルも見えねえか？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ガッ、ガガアァァァン・・・！）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_130_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_131_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_132_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_133_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_134_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_135_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_136_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_137_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_138_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_139_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_140_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_141_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_142_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_143_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_144_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_145_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_146_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_147_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_148_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_149_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_150_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_151_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_152_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_153_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_154_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_155_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_156_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_157_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_158_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_159_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_160_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_161_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_162_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_163_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_164_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_165_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_166_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_167_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_168_O, ActionEvent.RevealFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_169_O, ActionEvent.RevealFieldObject);

      Message(ref m_list, ref e_list, "ビリー：あ！んだこの壁はぁ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか、ここから開始って事か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：開始って何がだよ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：看板が示していた遊戯の事さ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：全体像は最初にある程度把握する形式になっている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、少し時間経過したらこうなった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なので、開始ポイントが今なんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらく何からの操作系だとは思うんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと見てみないと何ともだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：つまり、最初の全体像は参考程度で、結局改めて確認していくしかないわけね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そういう事になる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：メンドクセー仕掛けだな。ビビらせんじゃねえっつうの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：確かに、ちょっとびっくりはしたけどな。ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、少し探索してみましょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー、了解だ。", ActionEvent.None);

    }
  }

  public static void Message1000162(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if ((One.TF.Event_Message1000130_Success == false) ||
        (One.TF.Event_Message1000133 && One.TF.Event_Message1000130_Success_2 == false) ||
        (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false))
    {
      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      if (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false)
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveLeftContinuous);
      }
      else
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveBottomContinuous);
      }

      Message(ref m_list, ref e_list, "～　どこかで物が動く音がした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallCheckComplete);
    }
  }
  public static void Message1000163(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if ((One.TF.Event_Message1000130_Success == false) ||
        (One.TF.Event_Message1000133 && One.TF.Event_Message1000130_Success_2 == false) ||
        (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false))
    {
      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      if (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false)
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveTopContinuous);
      }
      else
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveLeftContinuous);
      }

      Message(ref m_list, ref e_list, "～　どこかで物が動く音がした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallCheckComplete);
    }
  }
  public static void Message1000164(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if ((One.TF.Event_Message1000130_Success == false) ||
        (One.TF.Event_Message1000133 && One.TF.Event_Message1000130_Success_2 == false) ||
        (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false))
    {
      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      if (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false)
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveRightContinuous);
      }
      else
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveLeftContinuous);
      }

      Message(ref m_list, ref e_list, "～　どこかで物が動く音がした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallCheckComplete);
    }
  }
  public static void Message1000165(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if ((One.TF.Event_Message1000130_Success == false) ||
        (One.TF.Event_Message1000133 && One.TF.Event_Message1000130_Success_2 == false) ||
        (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false))
    {
      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      // 条件分岐の結果が同一だが、構造的には分岐させた形式で記述する事とする。
      if (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false)
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveTopContinuous);
      }
      else
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveTopContinuous);
      }

      Message(ref m_list, ref e_list, "～　どこかで物が動く音がした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallCheckComplete);
    }
  }
  public static void Message1000166(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if ((One.TF.Event_Message1000130_Success == false) ||
        (One.TF.Event_Message1000133 && One.TF.Event_Message1000130_Success_2 == false) ||
        (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false))
    {
      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      if (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false)
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveLeftContinuous);
      }
      else
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveTopContinuous);
      }

      Message(ref m_list, ref e_list, "～　どこかで物が動く音がした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallCheckComplete);
    }
  }
  public static void Message1000167(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if ((One.TF.Event_Message1000130_Success == false) ||
        (One.TF.Event_Message1000133 && One.TF.Event_Message1000130_Success_2 == false) ||
        (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false))
    {
      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      if (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false)
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveBottomContinuous);
      }
      else
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveRightContinuous);
      }

      Message(ref m_list, ref e_list, "～　どこかで物が動く音がした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallCheckComplete);
    }
  }
  public static void Message1000168(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if ((One.TF.Event_Message1000130_Success == false) ||
        (One.TF.Event_Message1000133 && One.TF.Event_Message1000130_Success_2 == false) ||
        (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false))
    {
      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      // 条件分岐の結果が同一だが、構造的には分岐させた形式で記述する事とする。
      if (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false)
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveRightContinuous);
      }
      else
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveRightContinuous);
      }

      Message(ref m_list, ref e_list, "～　どこかで物が動く音がした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallCheckComplete);
    }
  }
  public static void Message1000169(ref List<string> m_list, ref List<ActionEvent> e_list) 
  {
    if ((One.TF.Event_Message1000130_Success == false) ||
        (One.TF.Event_Message1000133 && One.TF.Event_Message1000130_Success_2 == false) ||
        (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false))
    {
      Message(ref m_list, ref e_list, "『ッカチ！』", ActionEvent.None);

      // 条件分岐の結果が同一だが、構造的には分岐させた形式で記述する事とする。
      if (One.TF.Event_Message1000135 && One.TF.Event_Message1000130_Success_3 == false)
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveBottomContinuous);
      }
      else
      {
        Message(ref m_list, ref e_list, "500", ActionEvent.MoveBottomContinuous);
      }

      Message(ref m_list, ref e_list, "～　どこかで物が動く音がした　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusBallCheckComplete);
    }
  }

  public static void Message1000170(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000130_Success == false)
    {
      One.TF.Event_Message1000130_Success = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_178_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：よし！オーケー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン、結構楽しそうにやってたじゃねえか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こういうのは割と好きだな。試行錯誤が面白い感じがするしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：結構こういうのは食いつくわよね、バカアインは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さてと、じゃあ早速お宝ＧＥＴと行きますか！", ActionEvent.None);
    }
  }

  public static void Message1000171(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000132 == false)
    {
      One.TF.Event_Message1000132 = true;

      Message(ref m_list, ref e_list, "アイン：よし、宝箱ＧＥＴ完了っと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと待って。このエリアはもう終わりなのかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、これで終わりじゃないだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだよ、宝箱取ったのにまだあるっつうのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この神殿の宝箱は印象的なトラップが多いんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：きっとまだある。一旦、看板の所へ戻ってみても良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、良いわよ。行ってみましょう。", ActionEvent.None);
    }
  }

  public static void Message1000172(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000130_Success_2 == false)
    {
      One.TF.Event_Message1000130_Success_2 = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_191_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：よしよし！オーケーオーケー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お前がこういうのを得意げにやるってのが意外だけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：意外・・・ああ、意外なのかもな！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ホラ、浮かれてないで。開放された所へ行ってみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解！", ActionEvent.None);
    }
  }

  public static void Message1000173(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000134 == false)
    {
      One.TF.Event_Message1000134 = true;

      Message(ref m_list, ref e_list, "アイン：よし、ここの宝箱もＧＥＴしたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、さすがにもうこれで終わりで良いんだよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、マップを見せてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アイン・ウォーレンスはダンジョン・マップを凝視した　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：これは・・・まだあるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：マジかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。度々で悪いが、もう１回だけ看板の所へ行っても良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。行ってみましょう。", ActionEvent.None);
    }
  }

  public static void Message1000174(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000130_Success_3 == false)
    {
      One.TF.Event_Message1000130_Success_3 = true;

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_200_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：よーし、クリアだ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どこが開いたのかしら。マップ的にはこの区画のどこかよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：１回目に開いた箇所があっただろ。おそらく、あの通路の方だろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ、サクっと行ってみようぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー！", ActionEvent.None);
    }
  }

  public static void Message1000175(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：おっ、鍵みたいだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どこかで使えそうね。閉まっている扉があったら使ってみましょ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：オーケー。", ActionEvent.None);
  }

  public static void Message1000176(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000137 == false)
    {
      One.TF.Event_Message1000137 = true;

      Message(ref m_list, ref e_list, "（ギッギギィ・・・・・・バァァン！）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_201_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：よし、この鍵で合っていたみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：次に行ってみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解。", ActionEvent.None);
    }
  }

  public static void Message1000177(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000138 == false)
    {
      One.TF.Event_Message1000138 = true;

      Message(ref m_list, ref e_list, "アイン：扉が開かないな・・・", ActionEvent.None);

      if (One.TF.FindBackPackItem(Fix.VELGUS_KEY1) || One.TF.FindBackPackItem(Fix.VELGUS_KEY3))
      {
        Message(ref m_list, ref e_list, "ラナ：差し込み口に合う鍵は試してみたけど、一致しないわね。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：鍵穴があるみたいね。どこかで鍵を入手しないと開ける事は難しいわね。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "アイン：しょうがない、他をあたってみるか。", ActionEvent.None);
    }
    else
    {
      if (One.TF.FindBackPackItem(Fix.VELGUS_KEY1) || One.TF.FindBackPackItem(Fix.VELGUS_KEY3))
      {
        Message(ref m_list, ref e_list, "ラナ：今の手持ちの鍵だと、開かないわね。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：鍵を入手しないと開ける事は難しいわね。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "アイン：しょうがない、他をあたってみるか。", ActionEvent.None);
    }
  }

  public static void Message1000178(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000139 == false)
    {
      One.TF.Event_Message1000139 = true;

      Message(ref m_list, ref e_list, "（ギッギギィ・・・・・・バァァン！）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_202_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：よし、この扉もバッチリ開いたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ガンガン進もうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かった。", ActionEvent.None);
    }
  }

  public static void Message1000179(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000140 == false)
    {
      One.TF.Event_Message1000140 = true;

      Message(ref m_list, ref e_list, "アイン：扉が開かないな・・・", ActionEvent.None);

      if (One.TF.FindBackPackItem(Fix.VELGUS_KEY2) || One.TF.FindBackPackItem(Fix.VELGUS_KEY3))
      {
        Message(ref m_list, ref e_list, "ラナ：差し込み口に合う鍵は試してみたけど、一致しないわね。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：鍵穴があるみたいね。どこかで鍵を入手しないと開ける事は難しいわね。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "アイン：しょうがない、他をあたってみるか。", ActionEvent.None);
    }
    else
    {
      if (One.TF.FindBackPackItem(Fix.VELGUS_KEY2) || One.TF.FindBackPackItem(Fix.VELGUS_KEY3))
      {
        Message(ref m_list, ref e_list, "ラナ：今の手持ちの鍵だと、開かないわね。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：鍵を入手しないと開ける事は難しいわね。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "アイン：しょうがない、他をあたってみるか。", ActionEvent.None);
    }
  }

  public static void Message1000180(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000141 == false)
    {
      One.TF.Event_Message1000141 = true;

      Message(ref m_list, ref e_list, "（ギッギギィ・・・・・・バァァン！）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_203_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：オーケー。バッチリだ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：待って、この先に何かいるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：結構ヤバそうな奴だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの雰囲気・・・いきなりバトル突入はきついかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうするのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：突撃する前に少しだけ索敵してくる。皆はちょっとここで待っててくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveBottom);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveBottom);

      Message(ref m_list, ref e_list, "7", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "～ ・・・しばらくして・・・ ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.MoveTop);

      Message(ref m_list, ref e_list, "ラナ：どうだった？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まず、見た感じだが、知的な類の生物だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：初手から攻撃的なエッセンスで猛攻を仕掛けてくるタイプではない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どちらかというと【場】を構築してくるタイプだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだよ、その【場】って言うのは？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：直接的な勝利を狙う訳じゃないが、自分にとって有利な状況を構築するって感じだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：場を構築されてしまった場合の勝算は？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そこからは向こう側のペースになるだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：絶対勝てないって訳じゃないが、苦しくはなるだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、初手でこっちから猛攻撃を仕掛けて何とかなるとも思えない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの感じだと防衛手段も持ち合わせているだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ある程度の長期戦は覚悟の上、場を構築される事に対して対応しつつ勝機を窺おう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なんだか結構面倒くさそうなやつだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナは、魔法かスキルでアドバンテージを取ってくれ。後方からの支援タイプでも良いし、前衛で攻撃に参加でも良い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ビリーは敵が場を構築する度に、割り込みでカウンターを入れるか、敵の体勢を崩すような強襲を頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：な、なんだぁ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、いつも通りやってくれ。お前はいつもそれが出来ている。多分大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おう！任せておけ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アデルは、機転を利かせて、相手の行動を無効化してくれ。それから、場をなるべく公平に戻す様な操作を頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うん、良く分かんないけど、分かったー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それから、エオネ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：回復と護衛はもちろんだが、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：例の戦術は機会があれば可能か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい、機会があればやってみます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとう。じゃあ決まりだ。準備をきっちりしてから行くぞ。", ActionEvent.None);
    }
  }

  public static void Message1000181(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000142 == false)
    {
      One.TF.Event_Message1000142 = true;

      Message(ref m_list, ref e_list, "アイン：扉が開かないな・・・", ActionEvent.None);

      if (One.TF.FindBackPackItem(Fix.VELGUS_KEY1) || One.TF.FindBackPackItem(Fix.VELGUS_KEY2))
      {
        Message(ref m_list, ref e_list, "ラナ：差し込み口に合う鍵は試してみたけど、一致しないわね。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：鍵穴があるみたいね。どこかで鍵を入手しないと開ける事は難しいわね。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "アイン：しょうがない、他をあたってみるか。", ActionEvent.None);
    }
    else
    {
      if (One.TF.FindBackPackItem(Fix.VELGUS_KEY1) || One.TF.FindBackPackItem(Fix.VELGUS_KEY2))
      {
        Message(ref m_list, ref e_list, "ラナ：今の手持ちの鍵だと、開かないわね。", ActionEvent.None);
      }
      else
      {
        Message(ref m_list, ref e_list, "ラナ：鍵を入手しないと開ける事は難しいわね。", ActionEvent.None);
      }

      Message(ref m_list, ref e_list, "アイン：しょうがない、他をあたってみるか。", ActionEvent.None);
    }
  }

  public static void Message1000182(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "？？？：コオォォ・・・コォアアアア！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ラナ、ビリー、エオネ、アデル。準備はいいか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：おお！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：いつでも行けるわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：私なら大丈夫です。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アデル：準備万端だよー☆", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：きっちり取っていこう。行くぞ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.DEVIL_STAR_DEATH_FLODIETE, ActionEvent.EncountBoss);
  }

  public static void Message1000183(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatDeathFlodiete && One.TF.Event_Message1000183 == false)
    {
      One.TF.Event_Message1000183 = true;

      Message(ref m_list, ref e_list, "フローディーテ：オ、オッ・・・・オオォッ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "フローディーテ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：終わったみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：結構苦戦したわね。構築タイプってやっぱり苦手だわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナの行動は相手に対してだいぶ影響を及ぼしていた。助かったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そう？なら良いんだけど、ありがと♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネの援護射撃とアデルの場の維持も大変助かった。サンキューな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ありがとー、でも私の場合は何かしたのかなー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ次へ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：待て、俺も活躍しただろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ！・・・ああ、活躍ありがとうな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：て、てめぇ・・・適当に言いやがって。覚えてろよな、ったく。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ、悪い悪い。前線維持はビリーにも一役買ってもらってるつもりだ。ありがとな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、お、おうよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ。まだこの先、通路があるみたいだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この感じからして、まだ次の階層がありそうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：マジかよ。この区画だけでだいぶ歩かされた感じがするけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：次も同じとは限らないさ。まずは進めてみるとしよう。", ActionEvent.None);
    }
  }
  #endregion
  #region "第二階層"
  public static void Message1000200(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Complete == false)
    {
      One.TF.Event_SpeedRun1_Progress = -1;
      One.TF.Event_Message1000201 = false;
      One.TF.Event_Message1000202 = false;
      One.TF.Event_Message1000203 = false;
      One.TF.Event_Message1000204 = false;
      One.TF.Event_Message1000205 = false;
      One.TF.Event_Message1000206 = false;
      One.TF.Event_Message1000207 = false;
      One.TF.Event_Message1000208 = false;
    }
    else
    {
      Message(ref m_list, ref e_list, "『　外周を神域の速度で駆け抜けろ　』", ActionEvent.None);

      return;
    }

    if (One.TF.Event_Message1000200 == false)
    {
      One.TF.Event_Message1000200 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。どれどれ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　外周を神域の速度で駆け抜けろ　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ！こいつは面白いな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：仕組みや仕掛けの類じゃなさそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：言葉通りだな。おそらく、ここの外周を全力で走るんだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：全員で走んのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、おそらくは一人で良いはずだ。皆はここで待っててくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺じゃ駄目なのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあビリーでもおそらくクリア可能だろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だが、ここはちょっと俺にやらせてくれないか？トライしてみたいんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おうよ。そういうんだったら任せたぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ行ってくる。見ててくれ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　３　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　２　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　１　】", ActionEvent.None);

      Start_SpeedRun1(ref m_list, ref e_list);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　外周を神域の速度で駆け抜けろ　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よしっ、もう一回だ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあ、頑張れよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、見ててくれ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　３　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　２　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　１　】", ActionEvent.None);

      Start_SpeedRun1(ref m_list, ref e_list);
    }
  }
  public static void Message1000201(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Progress <= -1) { return; }

    bool result = CheckPoint_SpeedRun1(ref m_list, ref e_list, 1);
    if (result == false)
    {
      SpeedRun1_Failed(ref m_list, ref e_list);
    }
  }
  public static void Message1000202(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Progress <= -1) { return; }

    bool result = CheckPoint_SpeedRun1(ref m_list, ref e_list, 2);
    if (result == false)
    {
      SpeedRun1_Failed(ref m_list, ref e_list);
    }
  }
  public static void Message1000203(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Progress <= -1) { return; }

    bool result = CheckPoint_SpeedRun1(ref m_list, ref e_list, 3);
    if (result == false)
    {
      SpeedRun1_Failed(ref m_list, ref e_list);
    }
  }
  public static void Message1000204(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Progress <= -1) { return; }

    bool result = CheckPoint_SpeedRun1(ref m_list, ref e_list, 4);
    if (result == false)
    {
      SpeedRun1_Failed(ref m_list, ref e_list);
    }
  }
  public static void Message1000205(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Progress <= -1) { return; }

    bool result = CheckPoint_SpeedRun1(ref m_list, ref e_list, 5);
    if (result == false)
    {
      SpeedRun1_Failed(ref m_list, ref e_list);
    }
  }
  public static void Message1000206(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Progress <= -1) { return; }

    bool result = CheckPoint_SpeedRun1(ref m_list, ref e_list, 6);
    if (result == false)
    {
      SpeedRun1_Failed(ref m_list, ref e_list);
    }
  }
  public static void Message1000207(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Progress <= -1) { return; }

    bool result = CheckPoint_SpeedRun1(ref m_list, ref e_list, 7);
    if (result == false)
    {
      SpeedRun1_Failed(ref m_list, ref e_list);
    }
  }
  public static void Message1000208(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Progress <= -1) { return; }

    bool result = CheckPoint_SpeedRun1(ref m_list, ref e_list, 8);
    if (result == false)
    {
      SpeedRun1_Failed(ref m_list, ref e_list);
    }
  }

  private static void Start_SpeedRun1(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "", ActionEvent.VelgusSpeedRunStart_1);
  }

  private static bool CheckPoint_SpeedRun1(ref List<string> m_list, ref List<ActionEvent> e_list, int num)
  {
    // 1st
    if (One.TF.Event_SpeedRun1_Progress == 0)
    {
      if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
      {
        if (num == 1) { One.TF.Event_Message1000201 = true; One.TF.Event_SpeedRun1_Progress = 1; }
        else if (num == 2) { return false; }
        else if (num == 3) { One.TF.Event_Message1000203 = true; One.TF.Event_SpeedRun1_Progress = 3; }
        else if (num == 4) { return false; }
        else if (num == 5) { One.TF.Event_Message1000205 = true; One.TF.Event_SpeedRun1_Progress = 5; }
        else if (num == 6) { return false; }
        else if (num == 7) { One.TF.Event_Message1000207 = true; One.TF.Event_SpeedRun1_Progress = 7; }
        else if (num == 8) { return false; }
        else { return true; } // 万が一の場合は単に通過扱いとする。
        return true;
      }
    }
    else
    {
      if (One.TF.Event_SpeedRun1_Progress == 1)
      {
        // 2nd
        if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 1) { return false; }
          else if (num == 2) { One.TF.Event_Message1000202 = true; }
          else if (num == 3) { return false; }
          else if (num == 4) { return false; }
          else if (num == 5) { return false; }
          else if (num == 6) { return false; }
          else if (num == 7) { return false; }
          else if (num == 8) { return One.TF.Event_Message1000208 = true; }
          else { return true; } // 万が一の場合は単に通過扱いとする。
          return true;
        }
        // 3rd～Pattern1
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 3) { One.TF.Event_Message1000203 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 4) { One.TF.Event_Message1000204 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 5) { One.TF.Event_Message1000205 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 6) { One.TF.Event_Message1000206 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 7) { One.TF.Event_Message1000207 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 8) { One.TF.Event_Message1000208 = true; return true; }
          else { return false; }
        }
        // 3rd～Pattern2
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208)
        {
          if (num == 7) { One.TF.Event_Message1000207 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 6) { One.TF.Event_Message1000206 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 5) { One.TF.Event_Message1000205 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 4) { One.TF.Event_Message1000204 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 3) { One.TF.Event_Message1000203 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 2) { One.TF.Event_Message1000202 = true; return true; }
          else { return false; }
        }
        // Last-Check
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 1) { MessageCompleteSpeedRun1(ref m_list, ref e_list); return true; }
          else { return false; }
        }
      }
      else if (One.TF.Event_SpeedRun1_Progress == 3)
      {
        // 2nd
        if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 1) { return false; }
          else if (num == 2) { One.TF.Event_Message1000202 = true; }
          else if (num == 3) { return false; }
          else if (num == 4) { One.TF.Event_Message1000204 = true; }
          else if (num == 5) { return false; }
          else if (num == 6) { return false; }
          else if (num == 7) { return false; }
          else if (num == 8) { return false; }
          else { return true; } // 万が一の場合は単に通過扱いとする。
          return true;
        }
        // 3rd-Pattern1
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 5) { One.TF.Event_Message1000205 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 6) { One.TF.Event_Message1000206 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 7) { One.TF.Event_Message1000207 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 8) { One.TF.Event_Message1000208 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 1) { One.TF.Event_Message1000201 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 2) { One.TF.Event_Message1000202 = true; return true; }
          else { return false; }
        }
        // 3rd-Pattern2
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 1) { One.TF.Event_Message1000201 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 8) { One.TF.Event_Message1000208 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208)
        {
          if (num == 7) { One.TF.Event_Message1000207 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 6) { One.TF.Event_Message1000206 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 5) { One.TF.Event_Message1000205 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 4) { One.TF.Event_Message1000204 = true; return true; }
          else { return false; }
        }
        // Last-Check
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 3) { MessageCompleteSpeedRun1(ref m_list, ref e_list); return true; }
          else { return false; }
        }
      }
      else if (One.TF.Event_SpeedRun1_Progress == 5)
      {
        // 2nd
        if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 1) { return false; }
          else if (num == 2) { return false; }
          else if (num == 3) { return false; }
          else if (num == 4) { One.TF.Event_Message1000204 = true; }
          else if (num == 5) { return false; }
          else if (num == 6) { One.TF.Event_Message1000206 = true; }
          else if (num == 7) { return false; }
          else if (num == 8) { return false; }
          else { return true; } // 万が一の場合は単に通過扱いとする。
          return true;
        }
        // 3rd-Pattern1
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 7) { One.TF.Event_Message1000207 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 8) { One.TF.Event_Message1000208 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 1) { One.TF.Event_Message1000201 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 2) { One.TF.Event_Message1000202 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 3) { One.TF.Event_Message1000203 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 4) { One.TF.Event_Message1000204 = true; return true; }
          else { return false; }
        }
        // 3rd-Pattern2
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 3) { One.TF.Event_Message1000203 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 2) { One.TF.Event_Message1000202 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 1) { One.TF.Event_Message1000201 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208 == false)
        {
          if (num == 8) { One.TF.Event_Message1000208 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 == false && One.TF.Event_Message1000208)
        {
          if (num == 7) { One.TF.Event_Message1000207 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 6) { One.TF.Event_Message1000206 = true; return true; }
          else { return false; }
        }
        // Last-Check
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 5) { MessageCompleteSpeedRun1(ref m_list, ref e_list); return true; }
          else { return false; }
        }
      }
      else if (One.TF.Event_SpeedRun1_Progress == 7)
      {
        // 2nd
        if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 1) { return false; }
          else if (num == 2) { return false; }
          else if (num == 3) { return false; }
          else if (num == 4) { return false; }
          else if (num == 5) { return false; }
          else if (num == 6) { One.TF.Event_Message1000206 = true; }
          else if (num == 7) { return false; }
          else if (num == 8) { One.TF.Event_Message1000208 = true; }
          else { return true; } // 万が一の場合は単に通過扱いとする。
          return true;
        }
        // 3rd-Pattern1
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 1) { One.TF.Event_Message1000201 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 2) { One.TF.Event_Message1000202 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 3) { One.TF.Event_Message1000203 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 4) { One.TF.Event_Message1000204 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 5) { One.TF.Event_Message1000205 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 == false && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 6) { One.TF.Event_Message1000206 = true; return true; }
          else { return false; }
        }
        // 3rd-Pattern2
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 == false && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 5) { One.TF.Event_Message1000205 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 == false && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 4) { One.TF.Event_Message1000204 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 == false && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 3) { One.TF.Event_Message1000203 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 == false && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 2) { One.TF.Event_Message1000202 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 == false && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 1) { One.TF.Event_Message1000201 = true; return true; }
          else { return false; }
        }
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208 == false)
        {
          if (num == 8) { One.TF.Event_Message1000208 = true; return true; }
          else { return false; }
        }
        // Last-Check
        else if (One.TF.Event_Message1000201 && One.TF.Event_Message1000202 && One.TF.Event_Message1000203 && One.TF.Event_Message1000204 && One.TF.Event_Message1000205 && One.TF.Event_Message1000206 && One.TF.Event_Message1000207 && One.TF.Event_Message1000208)
        {
          if (num == 7) { MessageCompleteSpeedRun1(ref m_list, ref e_list); return true; }
          else { return false; }
        }
      }
    }
    return false;
  }

  public static void SpeedRun1_Failed(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.TF.Event_SpeedRun1_Progress = -1;
    One.TF.Event_Message1000201 = false;
    One.TF.Event_Message1000202 = false;
    One.TF.Event_Message1000203 = false;
    One.TF.Event_Message1000204 = false;
    One.TF.Event_Message1000205 = false;
    One.TF.Event_Message1000206 = false;
    One.TF.Event_Message1000207 = false;
    One.TF.Event_Message1000208 = false;

    Message(ref m_list, ref e_list, "『ッブブー！！』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ッゲ！　何か警告音が！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "（  アイン足元の床が突如開いた  ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "＜＜＜　ッパカ ＞＞＞", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どわぁぁぁぁーーーっっ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "13:1:-21", ActionEvent.JumpToLocation);

    Message(ref m_list, ref e_list, "アイン：っいて！！", ActionEvent.None);

    if (One.TF.Event_SpeedRun1_Failed1 == false)
    {
      One.TF.Event_SpeedRun1_Failed1 = true;
      Message(ref m_list, ref e_list, "ラナ：大丈夫？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫だ。ちょっと打っただけだ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：中々難しいな・・・テンポよくやらないと駄目みたいだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：慣れるしかないわね。頑張ってきてちょうだい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、任せとけ！", ActionEvent.None);
    }
    else if (One.TF.Event_SpeedRun1_Failed2 == false)
    {
      One.TF.Event_SpeedRun1_Failed2 = true;
      Message(ref m_list, ref e_list, "ラナ：結構難しそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：イッツツ・・・何かタイミングを取るのが難しいな", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：この看板の位置からテメーが必死に走ってる姿を見るのも面白いけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こっちは必死なんだ。今度こそ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "ラナ：無理なんじゃないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、あと少しな感じはする。今度こそ！", ActionEvent.None);
    }
  }

  private static void MessageCompleteSpeedRun1(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun1_Complete == false)
    {
      One.TF.Event_SpeedRun1_Complete = true;
      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_216_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_217_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_218_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：よしきた！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おお、やるじゃねーか！結構な速度でガンガン走ってたな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：直線的なダッシュじゃないから、ちょっと詰まる所もあったけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：いずれにせよ、これで道が開けたみたいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、サクッサクッと突っ込んでみるか！", ActionEvent.None);
    }
  }

  public static void Message1000209(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000209 == false)
    {
      One.TF.Event_Message1000209 = true;
      Message(ref m_list, ref e_list, "アイン：おっ、看板だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私が読んでみるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　海底に生まれしは流水の法則　大自然なる流水に即して進むべし　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_219_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：なるほど、なるほどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どの辺りがなるほどなのよ。凄いテキトーよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：多分大丈夫だな、これは。行ける行ける。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ここもオメーがやるのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああそうだ。頼む！やらせてくれないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：別にやりてーんなら好きにしろ。俺は別にどっちでも良いぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ、悪いな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ今回もここで見てるから、頼んだわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よっしゃ、任せろ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　海底に生まれしは流水の法則　大自然なる流水に即して進むべし　』", ActionEvent.None);
    }
  }

  public static void StartSlideTile(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：よし、行くぜ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　３　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　２　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　１　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.VelgusSpeedRunStart_2);
  }

  public static void CheckSlideTile(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "", ActionEvent.VelgusSpeedRunStart_2_Next);
  }

  public static void SpeedRun2_Failed(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "『ッブブー！！』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ッゲ！　何か警告音が！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "（  アイン足元の床が突如開いた  ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "＜＜＜　ッパカ ＞＞＞", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どわぁぁぁぁーーーっっ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "22:1:-23", ActionEvent.JumpToLocation);

    Message(ref m_list, ref e_list, "", ActionEvent.VelgusSpeedRunStart_2_Reset);

    Message(ref m_list, ref e_list, "アイン：っいて！！", ActionEvent.None);

    if (One.TF.Event_SpeedRun2_Failed1 == false)
    {
      One.TF.Event_SpeedRun2_Failed1 = true;

      Message(ref m_list, ref e_list, "アイン：おかしいな。行ける気がしたんだがな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：テンポが大事なんじゃねーのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：テンポも重要だな。よし、今度は抜けてみせる！", ActionEvent.None);
    }
    else if (One.TF.Event_SpeedRun2_Failed2 == false)
    {
      One.TF.Event_SpeedRun2_Failed2 = true;

      Message(ref m_list, ref e_list, "アイン：マジか。これで行けたと思ったんだがな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何なら俺がやってやろーか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、俺がやってみせる。頼むがそこで見ていてくれないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何かセリフ回しが面白れーけどな。まあ、分かったぜ。任せたぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、今度こそ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "ビリー：だから、俺に変われっつーの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやいやいや、俺がやる。あと少しだけ！", ActionEvent.None);
    }
  }

  public static void Message1000210(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun2_Complete == false)
    {
      One.TF.Event_SpeedRun2_Complete = true;
      Message(ref m_list, ref e_list, "アイン：よしきた！", ActionEvent.None);

      Message(ref m_list, ref e_list, "1", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：オーイ、皆！もう来ても大丈夫だぞー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：しっかし、よくこんなの出来るよなお前。見てる側としては笑っちまうけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか？これは慣れてしまえば出来そうなもんだけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でも、クリアしたと思ったらすぐまた看板があるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし！次もきっとコレ系だな。行くぜ！", ActionEvent.None);
    }
  }

  public static void Message1000211(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000211 == false)
    {
      One.TF.Event_Message1000211 = true;
      Message(ref m_list, ref e_list, "アイン：よし、次の看板！", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　清き対流に乗り、実行した手の掴みを離さず、渦中を進むべし　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_239_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：こいつは・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ど、どうなのよ・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：スピード系じゃないんだな。そういうのも狙ってくるのか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：でもまあ、楽勝だな。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：やけに自信タップリじゃねーか。オラ、頼んだぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、任せておけ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　清き対流に乗り、実行した手の掴みを離さず、渦中を進むべし　』", ActionEvent.None);
    }
  }

  public static void StartSpeedRun3(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "", ActionEvent.VelgusSpeedRunStart_3);
  }

  public static void SpeedRun3_Failed(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "『ッブブー！！』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ッゲ！　何か警告音が！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "（  アイン足元の床が突如開いた  ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "＜＜＜　ッパカ ＞＞＞", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どわぁぁぁぁーーーっっ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "34:1:-23", ActionEvent.JumpToLocation);

    Message(ref m_list, ref e_list, "アイン：っいて！！", ActionEvent.None);

    if (One.TF.Event_SpeedRun3_Failed1 == false)
    {
      One.TF.Event_SpeedRun3_Failed1 = true;

      Message(ref m_list, ref e_list, "アイン：おかしい・・・何か条件を外したか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：手の掴みを離さず、って書いてあるぐらいだからその壁伝いの手を離しちゃダメなんじゃないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほど・・・なるほど、そうかもな。手を離さずだな。よし、やってみるぜ！", ActionEvent.None);
    }
    else if (One.TF.Event_SpeedRun3_Failed2 == false)
    {
      One.TF.Event_SpeedRun3_Failed2 = true;

      Message(ref m_list, ref e_list, "アイン：まさか・・・これでも違ったか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ちゃんと掴みっ放しで行ってるんだろうな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そのつもりだがな。無意識的に離してるのか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：進むときに進行方向が変わるタイミングでもキーを押し続けないと駄目なんでしょ、きっと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：キー？何の話だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：んもう、良いから。壁伝いで曲がる時も絶対に手を離しちゃだめよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、わかった！今度こそ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "ラナ：壁伝いに進む間、上／左／右／下、どれか一つでもホールドし続けないと駄目よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ホールド？だから何の話だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：良いから、ココは聞いておきなさい。上／左／右／下どれか一つは絶対にホールドよ。分かったわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ掴んでろって話だよな。オーケー！次こそ！", ActionEvent.None);
    }
  }

  public static void Message1000212(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun3_Complete == false)
    {
      One.TF.Event_SpeedRun3_Complete = true;
      Message(ref m_list, ref e_list, "アイン：よーしよしよし！オーケー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "2", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "ラナ：中々面白い動きではあったわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、コツみたいなもんだな。ちょっと手こずる感じではあったが。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：喜んでる所でワリぃがやっぱまだ看板があるみたいだぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケーオーケー！どんな内容でも受けて立つ！", ActionEvent.None);
    }
  }

  public static void Message1000213(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000213 == false)
    {
      One.TF.Event_Message1000213 = true;

      Message(ref m_list, ref e_list, "アイン：さて、次の看板はどうだ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　真なる俊足を今ここに示せ　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_242_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ！こいつは本当に面白いな！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：な・・・や、やけにノリノリだなお前・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうかもな。また任させてもらって良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：別に良いけどよ。好きにしろよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よっしゃあ！じゃあ、ちょっくら行ってくるぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アーッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：大丈夫なのか、アイツ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ、お手並み拝見ね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオン：・・・　・・・　・・・", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　真なる俊足を今ここに示せ　』", ActionEvent.None);
    }
  }

  public static void StartSpeedRun4(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "", ActionEvent.VelgusSpeedRunStart_4);
  }

  public static void SpeedRun4_Failed(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "『ッブブー！！』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ッゲ！　何か警告音が！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "（  アイン足元の床が突如開いた  ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "＜＜＜　ッパカ ＞＞＞", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どわぁぁぁぁーーーっっ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "36:1:-19", ActionEvent.JumpToLocation);

    Message(ref m_list, ref e_list, "アイン：っいて！！", ActionEvent.None);

    if (One.TF.Event_SpeedRun4_Failed1 == false)
    {
      One.TF.Event_SpeedRun4_Failed1 = true;

      Message(ref m_list, ref e_list, "アイン：今のスピードじゃ間に合わなかったか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：最初の所と違って結構曲がり角が多いわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと真剣にならねえとこれは無理かもな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：行けんのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、やってみせる。", ActionEvent.None);
    }
    else if (One.TF.Event_SpeedRun4_Failed2 == false)
    {
      One.TF.Event_SpeedRun4_Failed2 = true;

      Message(ref m_list, ref e_list, "アイン：くっそ、これでも駄目か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：結構スピード出てたとは思うけど、今回ばかりは駄目そうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ、面白い。こいつは本当に面白いぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：皆、すまねえ！何度かトライする事になると思う。それでも良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・お前なんだか少し雰囲気変わったよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか？ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・やる分には構わないけど。無理だけはしないようにね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、わかった！今度こそ！", ActionEvent.None);
    }
    else if (One.TF.Event_SpeedRun4_Failed3 == false)
    {
      One.TF.Event_SpeedRun4_Failed3 = true;

      Message(ref m_list, ref e_list, "アイン：ッチィ、あと少しな気がするけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ、悪い、もう１回やってくるぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：アイツ、あんな感じの奴だったか？妙にハイテンションな感じだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私もあんまり見た事ないけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：もう少し、もう少しのはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：変な奴・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);
    }
  }

  public static void Message1000214(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun4_Complete == false)
    {
      One.TF.Event_SpeedRun4_Complete = true;
      Message(ref m_list, ref e_list, "アイン：おおおおし、来た来た来たぁ！見ててくれたか！？皆！", ActionEvent.None);

      Message(ref m_list, ref e_list, "3", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？あれ？どうかしたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：別に何でもねーよ。単純にスゲーなって思っただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、ありがとな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直取れる感じはしなかったけどな。ラッキーだったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　っ・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういや、エオネの時はどうだったんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っえ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：私の時というのは、意味が分かりません。どういう事でしょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、そうだった・・・すまねえ、間違いだ。忘れてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：宝箱が最後にあるみたいね。取っていきましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。", ActionEvent.None);
    }
  }

  public static void Message1000215(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000215 == false)
    {
      One.TF.Event_Message1000215 = true;
      Message(ref m_list, ref e_list, "アイン：・・・　ここだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、すまねえがちょっと壁を調べてみてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：こんな所？別に良いけど、ちょっと待ってね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ビンゴみたいね。壁の素材が少しだけ変成している箇所があるわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺が押してみる。少し下がっててくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、いいわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っよっと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_245_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "4", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "ビリー：おお！すっげぇじゃねーか！まだあったのかよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンスは視線を一点に集中し、動きを止めた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：こいつは　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なんだ、どうしたんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：キツイな。。。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：看板は無いけど、また例のダッシュをしないと駄目なのよね？これって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういう事になる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺じゃ無理か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・いや、正直分からねえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お前がそういう気の利いたセリフを吐くって事はよっぽどなんだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：らしくないわね。一直線なんだから全力でやってきなさいよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。よし、分かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何度でもやればいいんだろ。頼んだぜオイ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー。じゃ、行ってくる！", ActionEvent.None);
    }
  }

  public static void StartSpeedRun5(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "", ActionEvent.VelgusSpeedRunStart_5);
  }

  public static void SpeedRun5_Failed(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "『ッブブー！！』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ッゲ！　何か警告音が！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "（  アイン足元の床が突如開いた  ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "＜＜＜　ッパカ ＞＞＞", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どわぁぁぁぁーーーっっ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "38:1:-15", ActionEvent.JumpToLocation);

    Message(ref m_list, ref e_list, "アイン：っいて！！", ActionEvent.None);

    if (One.TF.Event_SpeedRun5_Failed1 == false)
    {
      One.TF.Event_SpeedRun5_Failed1 = true;

      Message(ref m_list, ref e_list, "アイン：・・・駄目だったか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どのぐらいの距離があるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらくさっきやった箇所と同じが少し短いぐらいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：リミットまでの間隔はどーなんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今回の方が明らかに短い。間違いないだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあなんだ。結局は気合だろ！頼んだぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よしっ、もう１回！", ActionEvent.None);
    }
    else if (One.TF.Event_SpeedRun5_Failed2 == false)
    {
      One.TF.Event_SpeedRun5_Failed2 = true;

      Message(ref m_list, ref e_list, "アイン：しかし、これでも駄目か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ゴールポイントまで後どのぐらいかってのは感覚で分かるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。おおよそのゴールポイントは目星がついている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：それめがけて突っ切るしかねえな。他に選択肢はねえんだよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだ。ここはもう決めるしかない。行ってくる！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "ラナ：不可能って感じがするけど、どう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：不可能って感じはするが、もうワントライだ。行ってくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);
    }
  }

  public static void Message1000216(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_SpeedRun5_Complete == false)
    {
      One.TF.Event_SpeedRun5_Complete = true;
      Message(ref m_list, ref e_list, "アイン：やったか！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_248_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_249_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：おおおおし、成功成功！！アーッハッハッハッハ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おいおいおい、少しは喜んでくれよ！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何か・・・お前の動き、凄えええ早かったよな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、そうかもな！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ、ちょっと本当に解けて良かったわ。一時はどうなる事かと思ったわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなんだよ、一時はどうなる事かと思ったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：バカアインがそのセリフを言ってどうすんのよまったく・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いや、所でどんな手を使ったんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：手は使ってない。足を使ったのさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いつものボケが戻ってきてるみたいだな。なら、まあ良いか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、これで扉が開いたわけだ。早速探索しておくとしよう！", ActionEvent.None);
    }
  }

  public static void Message1000217(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000217 == false)
    {
      One.TF.Event_Message1000217 = true;
      Message(ref m_list, ref e_list, "アイン：看板だな。どれどれ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　渦潮の流れを詠み、逆らう事なく進むべし　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さてと、これは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アインは周囲一帯を全体的に見回した ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "5", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：なるほど・・・さて、どうすっかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どう？行けそう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんらかの道筋を辿って行けば、クリアできる感じだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：だろうなって、テメーはそれで行ける気がすんのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、ちょっと気にはなっているが、あまり難しく考えすぎないようにするさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ここはじゃあ任せても良いのかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、大丈夫だ。じゃあ、やってくるぜ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　渦潮の流れを詠み、逆らう事なく進むべし　』", ActionEvent.None);
    }
  }

  public static void Message1000218(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.EventSeaCirculate1_Complete == false)
    {
      One.TF.EventSeaCirculate1_Complete = true;

      Message(ref m_list, ref e_list, "アイン：っよし、オーケーオーケー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：結構単純だったかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。急かされる内容じゃないし、仕組みもシンプルだったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・簡単だったのかよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：い、いや、そりなりに何て言うんだ。結構難しかったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：えー、今の流れでさすがにそれはないでしょー、アハハ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：スマン、ビリー。やっぱり簡単だった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：マジかよ！！じゃあ俺だけが難しく感じたって事かよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：大丈夫だよー、私もこーいうの苦手だから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：だよな。俺だけかと思ったぜ。ビックリさせんなっつうの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・悪い悪い。さてと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらくここから先、まだきっとあるはずだ。次へ進めるぜ！", ActionEvent.None);
    }
  }

  public static void Message1000219(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000219 == false)
    {
      One.TF.Event_Message1000219 = true;

      Message(ref m_list, ref e_list, "アイン：ええと、次は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アインは周囲一帯を全体的に見回した ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "6", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：なるほど・・・そういう感じで来たか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ちょっとここで質問でーす☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっ、何だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：いま全体を見まわしたよねー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：で、今の時点で既に分かってるんじゃないのー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：んんと？何がだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：簡単なのかどーかって事☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：んー、そうだなー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さっきよりはちょっと戸惑うかもしれない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただし、すんなり進められるかもしれない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、どっちになったとしても、いずれも問題ないという感じはある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これで、答えになってるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アハハハハ、面白い答えだねー。どうもありがと☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、ここもとりあえずは任せるわよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、任せろ！", ActionEvent.None);
    }
  }

  public static void Message1000220(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.EventSeaCirculate2_Complete == false)
    {
      One.TF.EventSeaCirculate2_Complete = true;

      Message(ref m_list, ref e_list, "アイン：よっしゃあ！！どうだ皆見たか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：中々上手だったわね。感心するわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お前ってさ。普段からこういうのを訓練してるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：訓練っていう様な事はしていないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ何の訓練をしてきたって言うんだよ？何もやってねーって事はねえだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：訓練・・・うーん・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：剣と魔法の基礎練習かな。そこまで根詰めてやってるわけじゃないが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：全然関係ねーだろが。他に何かねえのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いいや、無いな。正直この神殿の仕組みは初めてみるものばかりだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：だから聞いているのはそこじゃねーっつうの・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そこのバカに聞くと余計おかしくなるから止めておいた方が良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、足回りのステップとかが戦闘に似てるんじゃないかな。正直な所、分からないが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　っそ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っそ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：い、いえ何でもありません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ところで、まだ終わった様には見えないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、きっとまだある。このまま進めるとするぜ！", ActionEvent.None);
    }
  }


  public static void Message1000221(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000221 == false)
    {
      One.TF.Event_Message1000221 = true;

      Message(ref m_list, ref e_list, "アイン：おっ・・・これは・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アインは周囲一帯を全体的に見回した ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "7", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：うーん・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どーなんだよ。簡単なんだろうな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうかな・・・まあ、やってみれば自ずと分かるだろうな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、深く考えすぎか。これが難しいと感じる人種もいるわけだし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいおい、誰の事言ってんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやいや悪い。独り言だ、ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何となくだが難易度がそう劇的に難しくはならないなと感じただけなんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この辺りはさすがに感覚的なものだから、錯覚しているだけかもしれない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：多少手こずるかもしれないが、解いてしまおうと思う。任せておいてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ、頼んだぜ。", ActionEvent.None);
    }
  }

  public static void Message1000222(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "1", ActionEvent.VelgusCirculate3_Switch);
  }
  public static void Message1000223(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "2", ActionEvent.VelgusCirculate3_Switch);
  }
  public static void Message1000224(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "3", ActionEvent.VelgusCirculate3_Switch);
  }
  public static void Message1000225(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "4", ActionEvent.VelgusCirculate3_Switch);
  }

  public static void Message1000226(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.EventSeaCirculate3_Complete == false)
    {
      One.TF.EventSeaCirculate3_Complete = true;

      Message(ref m_list, ref e_list, "8", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：オッケー！クリア！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうしたエオネ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：い、いえ。何でもありません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：バカアイン的にはこれも結構簡単だったわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、さすがにこれは簡単とは言えなかった。苦戦はしたさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただし苦戦といっても窮地に立たされる状況ではなかったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういう意味じゃ苦戦という表現は若干違うかもしれない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：錯覚や失敗の連続を重ねるとそのうち目的に辿り着ける類だから・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういうの、何て言うんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：試行錯誤です。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう！それだそれ！サンキュー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よし、じゃあこの区画はクリアで良いんだよな！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ待て。まずは、宝箱を取らせてくれ。", ActionEvent.None);
    }
  }

  public static void Message1000227(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000227 == false)
    {
      One.TF.Event_Message1000227 = true;

      Message(ref m_list, ref e_list, "アイン：ここは、まあここだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッカチ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_259_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ビリー：普通に開けたな。単なるスイッチか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そんな所だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よし、じゃあ早速進んでみようぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー", ActionEvent.None);
    }
  }

  public static void Message1000228(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000228 == false)
    {
      One.TF.Event_Message1000228 = true;

      Message(ref m_list, ref e_list, "アイン：これは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アインは周囲一帯を全体的に見回した ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "9", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン、行けそうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。思ってたよりシンプルかも知れない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：想定ではもうちょっと複雑なものを考えていたんだけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：構造的に気になる点は？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：特に無いな。そのままやれば良いだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃ、ここも任せたわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
    }
  }

  public static void Message1000229(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "1", ActionEvent.VelgusCirculate4_Switch);
  }
  public static void Message1000230(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "2", ActionEvent.VelgusCirculate4_Switch);
  }
  public static void Message1000231(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "3", ActionEvent.VelgusCirculate4_Switch);
  }
  public static void Message1000232(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "4", ActionEvent.VelgusCirculate4_Switch);
  }

  public static void Message1000233(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.EventSeaCirculate4_Complete == false)
    {
      One.TF.EventSeaCirculate4_Complete = true;

      Message(ref m_list, ref e_list, "アイン：よし、鍵ゲット！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：このエリアはこれで完了かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらく、そうだな。これ以上の仕掛けは無いと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：戻るのがメンドクセーな。何もねえなら例の青水晶で一旦戻ろうぜ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かった。そうしよう。", ActionEvent.None);
    }
  }

  public static void Message1000234(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000234 == false)
    {
      One.TF.Event_Message1000234 = true;

      Message(ref m_list, ref e_list, "アイン：この扉は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうも鍵がかかってるみたいよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：仕組みとしては３つの鍵穴。それぞれにメッセージが刻まれてるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何て書いてあるんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：【静穏】、【疾走】、【順応】と記されてあるわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほどな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どうなんだ？行けんのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、多分大丈夫だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい待て。どう大丈夫なんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうって言われてもな。仕掛け自体はシンプルって事さ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どの辺りがシンプルなんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：メッセージと合致する鍵を探せば良い。それ以外に考えるべき要素はないって所だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：それ以外はないって何で言い切れるんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：２階層に入ってきた階段の近辺にあるんだ。間違いないと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：それはそー思わせるトラップかも知れないぜ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そうかもな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだよそれ、じゃマジで本物のトラップだったらどうすんだよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、それはもうその時さ。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：適当言いやがって・・・ったくよー、頼んだぜホント。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かっている。見立て自体に確証はないからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さてと、そうしたら・・・", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：例の扉だな。", ActionEvent.None);
    }

    Message(ref m_list, ref e_list, "アイン：ラナ、鍵の入手状況はどうだ？", ActionEvent.None);

    if (One.TF.FindBackPackItem(Fix.VELGUS2_KEY1) && One.TF.FindBackPackItem(Fix.VELGUS2_KEY2) && One.TF.FindBackPackItem(Fix.VELGUS2_KEY3))
    {
      One.TF.Event_Message1000234_2 = true;

      Message(ref m_list, ref e_list, "ラナ：" + Fix.VELGUS2_KEY1 + "、" + Fix.VELGUS2_KEY2 + "、" + Fix.VELGUS2_KEY3 + "、全て揃っているわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、行けそうだな。ラナ、開錠を頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、任せて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ ラナは３つの鍵穴に慎重に鍵を差し込んでいった ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：ちょっと待ってちょうだいね。単に回しても開かない仕掛けになっているから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー。ゆっくりで良いぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ん～と・・・どうかしらね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：おそらくこれは同時タイミング系のやつね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと１回深呼吸してからやるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：（ッスウゥゥ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ッハイ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ ラナは差し込まれた３つの鍵をほぼ同時に瞬間的に回転させた！ ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "（ッカチチチ）（ッカチィ！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴ・・・ッゴゴゴゴ、ッゴゴゴゴ！ズズウウゥゥゥン・・・！！）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_265_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ビリー：何だ今の技は！　スゲー奇麗だったな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：驚きました。こんな風に開ける事が出来るなんて・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：今の超絶カッコ良かったねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ッフフ、皆ありがと♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この手の開錠は本当にお前の専門領域だよ。スゲー助かるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：今回の件が一段落したらちゃんと何かおごってよね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ、もちろんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よし、じゃあ早速進もうぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解だ。", ActionEvent.None);
    }
    else if (One.TF.FindBackPackItem(Fix.VELGUS2_KEY1) == false && One.TF.FindBackPackItem(Fix.VELGUS2_KEY2) && One.TF.FindBackPackItem(Fix.VELGUS2_KEY3))
    {
      Message(ref m_list, ref e_list, "ラナ：" + Fix.VELGUS2_KEY2 + "、" + Fix.VELGUS2_KEY3 + " を持っているわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと１つか。他の区画を探してみよう。", ActionEvent.None);
    }
    else if (One.TF.FindBackPackItem(Fix.VELGUS2_KEY1) && One.TF.FindBackPackItem(Fix.VELGUS2_KEY2) == false && One.TF.FindBackPackItem(Fix.VELGUS2_KEY3))
    {
      Message(ref m_list, ref e_list, "ラナ：" + Fix.VELGUS2_KEY1 + "、" + Fix.VELGUS2_KEY3 + " を持っているわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと１つか。他の区画を探してみよう。", ActionEvent.None);
    }
    else if (One.TF.FindBackPackItem(Fix.VELGUS2_KEY1) && One.TF.FindBackPackItem(Fix.VELGUS2_KEY2) && One.TF.FindBackPackItem(Fix.VELGUS2_KEY3) == false)
    {
      Message(ref m_list, ref e_list, "ラナ：" + Fix.VELGUS2_KEY1 + "、" + Fix.VELGUS2_KEY2 + " を持っているわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと１つか。他の区画を探してみよう。", ActionEvent.None);
    }
    else if (One.TF.FindBackPackItem(Fix.VELGUS2_KEY1) && One.TF.FindBackPackItem(Fix.VELGUS2_KEY2) == false && One.TF.FindBackPackItem(Fix.VELGUS2_KEY3) == false)
    {
      Message(ref m_list, ref e_list, "ラナ：" + Fix.VELGUS2_KEY1 + " を持っているわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと２つか。他の区画を探してみよう。", ActionEvent.None);
    }
    else if (One.TF.FindBackPackItem(Fix.VELGUS2_KEY1) == false && One.TF.FindBackPackItem(Fix.VELGUS2_KEY2) && One.TF.FindBackPackItem(Fix.VELGUS2_KEY3) == false)
    {
      Message(ref m_list, ref e_list, "ラナ：" + Fix.VELGUS2_KEY2 + " を持っているわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと２つか。他の区画を探してみよう。", ActionEvent.None);
    }
    else if (One.TF.FindBackPackItem(Fix.VELGUS2_KEY1) == false && One.TF.FindBackPackItem(Fix.VELGUS2_KEY2) == false && One.TF.FindBackPackItem(Fix.VELGUS2_KEY3))
    {
      Message(ref m_list, ref e_list, "ラナ：" + Fix.VELGUS2_KEY3 + " を持っているわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと２つか。他の区画を探してみよう。", ActionEvent.None);
    }
    else // １つも持っていない
    {
      Message(ref m_list, ref e_list, "ラナ：まだこの扉に合いそうな鍵は入手していないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだよな。じゃあ、鍵を探しに行くとするか。", ActionEvent.None);
    }
  }

  public static void Message1000235(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000235 == false)
    {
      One.TF.Event_Message1000235 = true;

      Message(ref m_list, ref e_list, "アイン：看板があるな。どれどれ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　一心不乱に目の前を追跡し、追い求めよ　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ！　中々面白い内容だな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：何か、アインのおにーちゃんはウキウキだねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何となく、こういう挑発的なのは好きだな。悪い気はしない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：いつもみたいに思考巡らせるよーな事はしないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここはその必要性は無いと判断している。おそらく問題ない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：へーーー、何かものすごーーーく瞬間的だよね。それは何で？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そんな瞬間的ってわけじゃないけどな。何でって言われてもな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この階層に来た時、最初の区画が見えた時点で決まってる気がしたんだよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：その辺りもうちょっと詳しくー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの最初の区画を解いた時、扉が開いただろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うん、そうだねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、扉が開いたって事は次の探索場所が現れたって事だろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うーん、そうなのー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：必ずしもそうじゃないけどな。大体はそういう構造が多いんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、今実際にこうして進めてみた所、順調に看板を見て次に進めている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大枠の全体的な流れとして、外してないってわけさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん・・・？やっぱりちょっと分かり難いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ううん、分かりやすかったよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うん、ありがとな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：で？ここはお前に任せりゃいいのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。ちょっと挑戦してみたいんだ。ここはやらせてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っしゃ！じゃあ頑張ってこいや！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：任せておけ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　一心不乱に目の前を追跡し、追い求めよ　』", ActionEvent.None);
    }
  }

  public static void Message1000236(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000236 == false)
    {
      One.TF.Event_Message1000236 = true;
      Message(ref m_list, ref e_list, "10", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：（そこにあるのは・・・ボールか・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ行ってくる！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何考えていたのか良く分かんないんだけど、気を付けてね。", ActionEvent.None);
    }
  }

  public static void Message1000237(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000237 == false)
    {
      One.TF.Event_Message1000237 = true;
      Message(ref m_list, ref e_list, "アイン：（よし、まずはこのボールを・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスがその球体に手を伸ばした瞬間　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "1", ActionEvent.VelgusTransferRandomBall);

      Message(ref m_list, ref e_list, "アイン：（あっ！　ボールが消えた！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（って、あっちか・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（瞬間的に移動しているのか。厄介だな）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ここは、考えてもしょうがない気がする）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（あのボールを追いかけていこう）", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "1", ActionEvent.VelgusTransferRandomBall);
    }
  }
  public static void Message1000238(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "2", ActionEvent.VelgusTransferRandomBall);
  }
  public static void Message1000239(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "3", ActionEvent.VelgusTransferRandomBall);
  }
  public static void Message1000240(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "4", ActionEvent.VelgusTransferRandomBall);
  }
  public static void Message1000241(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "5", ActionEvent.VelgusTransferRandomBall);
  }
  public static void Message1000242(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "6", ActionEvent.VelgusTransferRandomBall);
  }
  public static void Message1000243(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "7", ActionEvent.VelgusTransferRandomBall);
  }
  public static void Message1000244(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "8", ActionEvent.VelgusTransferRandomBall);
  }
  public static void Message1000245(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "9", ActionEvent.VelgusTransferRandomBall);
  }
  public static void Message1000246(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "『ッブブー！！』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ッゲ！　何か警告音が！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "（  アイン足元の床が突如開いた  ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "＜＜＜　ッパカ ＞＞＞", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どわぁぁぁぁーーーっっ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "28:1:-10", ActionEvent.JumpToLocation);

    Message(ref m_list, ref e_list, "", ActionEvent.VelgusResetRandomBall);

    Message(ref m_list, ref e_list, "アイン：っいて！！", ActionEvent.None);

    if (One.TF.Event_RandomBall_Failed1 == false)
    {
      One.TF.Event_RandomBall_Failed1 = true;
      Message(ref m_list, ref e_list, "ラナ：大丈夫？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いっつつ。どうやら違ったみたいだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと何を狙ってるのか分からないんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだなあ・・・目の前の物体を追いかけてるのは確かなんだが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあちょっと。次こそ！", ActionEvent.None);
    }
    else if (One.TF.Event_RandomBall_Failed2 == false)
    {
      One.TF.Event_RandomBall_Failed2 = true;
      Message(ref m_list, ref e_list, "ビリー：大丈夫かよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いってー。今のも失敗だったか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ところでさ。お前一体どの辺りを狙って追及してんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、分かっていたつもりだが、こうも失敗するとは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：むしろどういう考えで成功だって思ってんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：単純に追いかけるで合ってると思うんだがな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どっか引っかけがあるんじゃねーのか？１段飛ばしとか、２段飛ばしとかよー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それだ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：サンキュー！ビリー！たまには役に立つな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだとテメェ。後でぶっ飛ばすからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ！オーケーオーケー！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "ラナ：ねえ、本当に大丈夫？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ正直痛いけどな。何とか大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：大丈夫ってそういう意味じゃないんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：てめー、ちゃんとハッキリした物を追いかけてんだろーな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もちろんだ。当然の事を聞くな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・信じて良いのね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、任せておけ。次こそは突破してみせる！", ActionEvent.None);
    }
  }
  public static void Message1000247(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_RandomBall_Complete == false)
    {
      One.TF.Event_RandomBall_Complete = true;

      Message(ref m_list, ref e_list, "アイン：（ック・・・長いな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（だが、今度こそ・・・！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（やっぱり掴む事はできないか・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・あれ、そういえばあの球体はどこだ？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（見失ったな・・・失敗か・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_276_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusRemoveRandomBall);

      Message(ref m_list, ref e_list, "アイン：おっ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっしゃ、開いたぞ！皆、来てくれ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おー、やったじゃねえか！マジかよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：今のがクリアになるのね。不思議だったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：こ・・・これは・・・どういう・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：あっちこっち飛び回っていたから、何してるのかなーって思ったね☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：一体どういうルートだったわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうって言われてもな。特別な事はしてないぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それ本当に言ってる？どう見ても不可解だったわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：妙な言われようだな。単に例の球体を追いかけていただけさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：だからそれよ。その例の球体って何なのよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何なのって言われてもな。形容し難い。球体としか言いようがないかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アハハハハー☆　色々と嚙み合ってなさすぎで面白ーい☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・スマン。その物体が何なのかは上手く言えないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アインには、その・・・何か見えてたって事で良いかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ってどういう意味だ？お前らには見えてなかったのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：見えてないわよ。そんな球体なんてものは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なっ、なんだって！！？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アハハハハ☆　アインのおにーちゃん、ホント面白過ぎー、アハハハハ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ど、これはどういう事だ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：こっちが聞きたいわよ。どういう事なのよホント。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どういう事なんだろうな・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なあビリー。お前としてはどうだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：壁が開く所を目撃してなかったら、テメーとはもうオサラバだなって感じだったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エ、エオネは？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：すみませんが・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そ、そうか。悪い・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ま、いーんじゃねーの。ぶっちゃけ壁が開いたわけだ。とっとと行こうぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：サンキュー。そうしたら進めるとしますか！", ActionEvent.None);
    }
  }

  public static void Message1000248(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000248 == false)
    {
      One.TF.Event_Message1000248 = true;

      Message(ref m_list, ref e_list, "アイン：ここにきて、看板があるな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　遠き道筋を経て、追い求めよ　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さっき見た看板と対になるような表現だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ここでも思考巡らせるよーな事はしないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだろうな。ちょっとこの区画だけでは判断できないしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：他の区画か、あるいはこの先に・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、でも案外すんなり行けるルートとして現れてくれるかもしれない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あまり慎重になり過ぎず、意識はするがもう少し探索するしかないって所だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：そーなんだー、解説ありがとー☆？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ看板があるって時点でこのエリアはまだ終わってはいないだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：探索を続けるとしよう。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　遠き道筋を経て、追い求めよ　』", ActionEvent.None);
    }
  }

  public static void Message1000249(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000249 == false)
    {
      One.TF.Event_Message1000249 = true;

      Message(ref m_list, ref e_list, "アイン：きっと、ここだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッカチ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_277_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "ビリー：今のはさすがに俺でも分かったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さすがだぜ、ビリー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：この先へ進むんだろ？行こうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解！", ActionEvent.None);
    }
  }

  public static void Message1000250(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000250 == false)
    {
      One.TF.Event_Message1000250 = true;
      Message(ref m_list, ref e_list, "11", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：（全体的には・・・どうだろうな）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（さっきの場所よりは狭いエリアだが・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：例の球体というのは、今度も見えてるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、一か所だけな。相変わらず不思議な見え方だけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それって、ひょっとしてObsidianStoneじゃないの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：結構似ている気はするんだが、それじゃないと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：似てるんだったらObsidianStoneかも知れないんじゃねーのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、無い。ObsidianStoneはこんな形で出現したりはしないはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そーなのかよ。まあ、任せるけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここは任せておいてくれ。必ず解いてみせる。", ActionEvent.None);
    }
  }

  public static void Message1000251(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその空間へ手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "1", ActionEvent.VelgusTransferRandomBall2);
  }
  public static void Message1000252(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその空間へ手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "2", ActionEvent.VelgusTransferRandomBall2);
  }
  public static void Message1000253(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその空間へ手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "3", ActionEvent.VelgusTransferRandomBall2);
  }
  public static void Message1000254(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその空間へ手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "4", ActionEvent.VelgusTransferRandomBall2);
  }
  public static void Message1000255(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその空間へ手を伸ばした　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "5", ActionEvent.VelgusTransferRandomBall2);
  }
  public static void Message1000256(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000256 == false)
    {
      One.TF.Event_Message1000256 = true;

      Message(ref m_list, ref e_list, "アイン：（よし、このボールだな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "6", ActionEvent.VelgusTransferRandomBall2);

      Message(ref m_list, ref e_list, "アイン：（やはり最初は捉えられないか・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（球体が見えなくなっているな）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ただし、最初との類似性はある。眼で見えなくても追従は可能だ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（遠き道筋を経て・・・か。ヒントはそれしかないな）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（よし、周辺を探索しよう）", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその球体に手を伸ばした　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッパシュ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "6", ActionEvent.VelgusTransferRandomBall2);
    }
  }

  public static void Message1000257(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "『ッブブー！！』", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ッゲ！　何か警告音が！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "（  アイン足元の床が突如開いた  ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "＜＜＜　ッパカ ＞＞＞", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どわぁぁぁぁーーーっっ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "48:1:-6", ActionEvent.JumpToLocation);

    Message(ref m_list, ref e_list, "", ActionEvent.VelgusResetRandomBall2);

    Message(ref m_list, ref e_list, "アイン：っいて！！", ActionEvent.None);

    if (One.TF.Event_RandomBall_Failed2_1 == false)
    {
      One.TF.Event_RandomBall_Failed2_1 = true;
      Message(ref m_list, ref e_list, "ラナ：大丈夫かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：痛いけどな。何とか大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：さっきのよりも難しそうなわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：球体は最初しか見えてない。その後はノーヒントだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいおい、そんなの分かんのかよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：やってみるしかない。もう１回トライしてくる。", ActionEvent.None);
    }
    else if (One.TF.Event_RandomBall_Failed2_2 == false)
    {
      One.TF.Event_RandomBall_Failed2_2 = true;
      Message(ref m_list, ref e_list, "ビリー：ノーヒントで何とかなるものなのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今のも駄目か・・・うーん・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何もねえ行き止まりに突っ込んでは戻ってるみたいだが、何か順序でもあんのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：順序はあると思う。むしろその考え方しか残されていない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お前の言う【むしろ】ってのが既に意味不明だけどな。で、今の所失敗だからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：遠き道筋・・・うーん・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まー、任せたぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、任せとけ！", ActionEvent.None);
    }
    else if (One.TF.Event_RandomBall_Failed2_3 == false)
    {
      One.TF.Event_RandomBall_Failed2_3 = true;
      Message(ref m_list, ref e_list, "ラナ：何か考える筋道は立ってるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：道筋の筋道なら掴んではいるんだがな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ややこしいわね。考えとして【遠き道筋】について考えてるのよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：考えているのはそこじゃない。原点がどこなのかを考えているんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：もー余計ややこしいわね。その球体とやらを最初に掴んだ位置が原点なのよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、それはそうなんだが・・・でもあれは単に開始地点だからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：開始＝終了なんじゃねーの？テメーのお得意の妙な思考パターンだとあり得るだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか！分かったぞ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：原点はズバリ３番目だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で・・・近くから取って行けば、自ずと遠き道筋になる！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：３・・・４・・・２・・・５・・・１・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：６！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとう、ビリー！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：危ねー独り言だな・・・まあ、分かったって事だな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ！今度こそクリアーしてみせる！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "ラナ：遠き道筋は理解出来ているのよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、ちょっとうっかり間違えてしまった。。。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：例の球体を取ってから、６か所の行き止まりを辿る。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、最後に辿り着く位置が球体が最初にあった場所だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この区画に来た箇所から一番近い行き止まりを番号振りしたとして", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：３，４，２，５，１，６の順序で通過すればいいはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かってるみたいね、じゃあ頼んだわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ！今度こそクリアーしてみせる！", ActionEvent.None);
    }
  }

  public static void Message1000258(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_RandomBall_Complete2 == false)
    {
      One.TF.Event_RandomBall_Complete2 = true;

      Message(ref m_list, ref e_list, "アイン：（球体は見えないが・・・これで、どうだ！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはその空間へ手を伸ばした　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_DOOR_285_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "", ActionEvent.VelgusRemoveRandomBall2);

      Message(ref m_list, ref e_list, "アイン：オッケーーー！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：皆、やったぞ！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：テメー、本当はこういうの得意だったりするのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ダンジョン系なら任せろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そういう意味じゃねー。パズル的な要素って意味だよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあこういうのもダンジョン系の類の一つだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：普段だったらどーなんだよ？パズルゲームでもやってんのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、そういうのは興味無いな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ほんっと不思議な奴だぜ。まあこういう局面は助かるから良いけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、日頃の慣れみたいなもんだ。あまり気にしないでくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：場慣れしているって事か。なら納得だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、それじゃあ進めて行こう。", ActionEvent.None);
    }
  }

  public static void Message1000259(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000259 == false)
    {
      One.TF.Event_Message1000259 = true;

      Message(ref m_list, ref e_list, "アイン：オーケー、鍵だな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：これでこの区画は終わりかしらね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。鍵を手に入れたしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ、一旦あの青水晶で戻らねえか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。じゃ青水晶で一度戻るとしよう。", ActionEvent.None);
    }
  }

  public static void Message1000260(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000260 == false)
    {
      One.TF.Event_Message1000260 = true;

      Message(ref m_list, ref e_list, "アイン：よし、鍵だな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：さっきの区画内に鍵がなかったのが気になってたんだけど、ここにあったのね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう、そういえば・・・そうなんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっとそこは気になったけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：もう少しどこか探索してみる？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・まあ、正直どちらでも良いレベルだとは思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、お任せするわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
    }
  }

  public static void Message1000261(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000261 == false)
    {
      One.TF.Event_Message1000261 = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほどな。こいつはさすがに気付く余力が無かったって事か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か見つけたわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：壁の右下に少しだけ窪みがある。ラナ、チェックの方を頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええと・・・コレね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃ、開けるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、頼んだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_286_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：っしゃ、サンキュー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：行ってみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
    }
  }

  public static void Message1000262(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000262 == false)
    {
      One.TF.Event_Message1000262 = true;

      Message(ref m_list, ref e_list, "アイン：待て、やたらと気配がするな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと見てくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveLeft);

      Message(ref m_list, ref e_list, "12", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "？？？：ッフ・・・ッグオオオオォォォアアアッ！！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveRight);

      Message(ref m_list, ref e_list, "アイン：出たか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだこいつはぁあ！！デカすぎだろ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあな。ただ、デカいだけじゃなさそうだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの威嚇的な発声は単なる見掛け倒しくさいな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺達が想定している以上の知恵を有している感じはする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：陣形としてはどうするわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、いつも通り俺がメインを張るしかないだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：で？俺が突っ込めばいいんだな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだろうな。何か簡単に掴み取りされてしまいそうな気はする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：つ、掴み取りだとぉ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう、大きな手の形状をした部位があるだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おおよ。んなもんがどうしたってんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：突っ込めばあれに間違いなく捕まる。捕食されるのがオチだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ま、マジかよ・・・じゃどうすんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：戦術としてはスリータイプ戦術を使う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：へえ。それをやるなんて、珍しいわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、この手のモンスター自体が珍しいからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まず１人目。相手からの得意攻撃を受けるのを覚悟で構える。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：スタンや麻痺、一時的な行動不能系は色々あるが、それに対して耐性を保持しておこう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：次に２人目。ここでは攻撃型と防衛型をケースに応じて発揮してもらう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：１人目が問題ないなら攻撃型。１人目に問題が発生すれば極力それを支援する。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここで言う問題だが、１人目はさっき言った様にある程度耐性保持をした状態だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：致命的な事象でない限り、ある程度は攻撃に徹してくれていい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただし、危うい気配と察知したなら素直に支援に回って欲しい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、３人目だが、これがちょっと難しい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：基本的には回復や支援を頼むんだが、役割がもう一つ発生する。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：要所では、１人目と２人目とはある程度独立した動きをしてほしいんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・　へぇー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：通常、1人目をくまなく支援したり回復に徹したりすればバランスはとれるんだが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この手の大型モンスターの場合、場全体を引っ搔き回す様な行動を取る事が多いんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなった時、全体的に場が崩れれば真っ先に狙われるのは後方の３人目。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちなみにこの時１人目、２人目が３人目の防衛に回れる事は稀。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：となると、３人目が独自に回避行動や反撃を取れる行動を取れる方が望ましいんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それはずっとじゃない。メインを張ってる１人目がある程度復活すれば、また元の陣形に戻すだけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、あともう一つエッセンスがある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この手の知恵を駆使してくる大型モンスター特有といっても良いが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：妙なタイミングで突然後ろ側へ回り込んで後衛に対して直接的な一撃必殺系を繰り出してくる事がある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それはきっと前衛がどれだけ意識をしても、バックアップに回れるタイミングじゃないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その緩急は２番目の奴が３番目が狙われる事を常に意識して支援するしかない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：要は１人目、２人目、３人目全員複数の役割があり、全員重要だという事だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：出来るか？ビリー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ああぁぁ！！？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お前は今回出ない方が良いかも・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いやいやいや。やる時はやるぜ。任せとけや！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ、その感覚があるなら大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・　あ、ちょっとだけ良いかなー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん、なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：その感覚だけど、どこで養ったのかなー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どこで？ううん・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どこ・・・どこだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ダンジョン・・・いや、違うか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ボケのオル・ランディス師匠との乱戦で・・・かな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、今こうしてパーティプレイしている中で養われているのかも・・・。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アデル・ブリガンディ、静かに瞳を閉じ、顔を伏せる　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アデル：・・・　・・・　・・・ッフ", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：発言の対象が外れてるわね", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：あなた、アナタではないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：優しい気遣い、他者への配慮、場そのものへの調和、相互間の協調性、理解の共有", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：でも肝心のアナタが居ないわね", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：何処に行ったのかしら。教えてちょうだい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いいや、俺なりの考えだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オラクルの神様よ。嘘は言ってないぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：オラクルの・・・神様だと？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アデル、このままだと対象が見えないな。今はこの辺りで納得してくれると助かる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・　フッ・・・　・・・いいわ", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アデル・ブリガンディ、髪を前面から後方へ振り払う様に顔をあげる　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アデル：じゃ、はじめよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし！　戦闘準備したら始めるぞ！", ActionEvent.None);
    }
  }

  public static void Message1000263(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "？？？：オオオォォォ！！！ッフゴゴッアアァァ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：戦闘開始だ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.THE_BIGHAND_OF_KRAKEN, ActionEvent.EncountBoss);
  }

  public static void Message1000264(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.DefeatBighandKraken && One.TF.Event_Message1000264 == false)
    {
      One.TF.Event_Message1000264 = true;

      Message(ref m_list, ref e_list, "クラーケン：フッ・・・ッフ・・・フ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っよし・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "クラーケン：ッグ・・・オォ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "クラーケン：オォォ・・・！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　その瞬間、アインはモンスターが放つ最後の行動を見落とさなかった　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：させないぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ッバ、ッバババ、バシュッ！　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "クラーケン：オ・・・オオオォォ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッズ、ズズウウウウゥゥゥゥンン・・・・・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よっしゃ！一丁アガリ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：な・・・んだと・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：見ていてくれたかビリー！今の俺の「最後のとりあえず念のため攻撃」を！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お・・・おお、おうよ。見てたぜ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと・・・そこまでやる必要があったの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうかな。最後に不穏な動きをしてたからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：相手はモンスターだ。正直どこに奥の手を残しているか分からない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なので、斬っておいた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そ・・・そう。ならまあ一安心って所かしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし！ここもクリアーだな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まだ終わりじゃねーんだろ？とっとと、次の階層へ進もうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解だ！", ActionEvent.None);
    }
  }
  #endregion

  #region "第三階層"
  public static void Message1000265(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000265 == false)
    {
      One.TF.Event_Message1000265 = true;
      Message(ref m_list, ref e_list, "アイン：看板だな。読んでみるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　汝　力を示せ　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか・・・【力】ときたか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：選択肢を問われる様な事はなさそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。ここはおそらくそういった類はないと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・勝負していくしかない。一本道だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いつものノリで突き進んで行こうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー。気を引き締めて行こう。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "『　汝　力を示せ　』", ActionEvent.None);
    }
  }

  public static void Message1000266(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "1", ActionEvent.UpdateUnknownTile);
  }

  public static void Message1000267(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000267 == false)
    {
      One.TF.Event_Message1000267 = true;

      Message(ref m_list, ref e_list, "アイン：さっそくご登場の様だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いきなりこの強い気配かよ。シャレになんねーな、ココは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと様子を見てくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "2", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "1.0", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveBottom);

      Message(ref m_list, ref e_list, "ビリー：どうだ？どんな感じの奴だった？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：結構、まともな感じだった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：多少の隙は作れるが、勢いとチャンスをモノにしてくるタイプじゃないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：下手に作戦を構築し過ぎるのは得策じゃない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なので、手強いと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：戦術はどうするわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：下手な奇策は打たない。真っ向勝負だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いつも通りのメインパターンで皆頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：決まりみたいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ準備を万全にして挑もう！", ActionEvent.None);
    }
  }

  public static void Message1000268(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "？？？：ここに人間族が訪れるとはね。正直、久しぶりだね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：対話が・・・出来るのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：我々はこの神聖な神殿を護りし者。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：ボクの名は、海星の王子：レーヴァ・ラウルだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "レーヴァ：さて、そちらの名も聞かせてもらおうか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：アイン・ウォーレンスだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "レーヴァ：良い名だ。発声も心地良い響きだね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "レーヴァ：さて、どの程度の力量なのか、見極めさせてもらうよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：皆、構えてくれ。戦闘開始だ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.BRILLIANT_SEA_PRINCE, ActionEvent.EncountBoss);
  }

  public static void Message1000269(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000269 == false)
    {
      One.TF.Event_Message1000269 = true;

      Message(ref m_list, ref e_list, "アイン：ソコだ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン、その刹那において敵の急所を狙い撃ちする！　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ッガキイイイィィィィン・・・！！　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っな！　と、止められた！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：そこまでじゃ。王子よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "レーヴァ：ちぇっ、潮時か。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だ、誰だ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：我は海星源の王。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：この神殿を司るものである。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：海星源の・・・王・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "海星源の王：アイン・ウォーレンスと申したな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "海星源の王：ここは貴公らの勝利である。先へ進むがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：良いのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "海星源の王：勝負は決しておる。進めるがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：進める前に。一つ、お願いがある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "海星源の王：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：このダンジョンから帰還した後、もう一度ここへやってこようと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その時はこの区画はクリアしたと見なし、無条件で通してもらいたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "海星源の王：良いだろう。元より、そのつもりである。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：助かるぜ・・・。", ActionEvent.None);

      Message(ref m_list, ref e_list, "海星源の王：では、退くぞ。王子よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "レーヴァ：しょうがないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　海星の王子、海星源の王は静かに姿を消失させた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、先へ進めよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：結構、これが続く感じかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。この調子が何度も続くと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：無理に突っ込み過ぎず、１回終える度に帰還しても良いかも知れない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：さすがにこのレベルを連戦ってのはきついぜ。賛成だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、そうしたら一旦戻って休息を取ろう。", ActionEvent.None);
    }
  }


  public static void Message1000270(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000270 == false)
    {
      One.TF.Event_Message1000270 = true;

      Message(ref m_list, ref e_list, "アイン：さてと・・・次のおでましか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ココもマジレベルの気配を感じるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと偵察してくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "3", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "1.0", ActionEvent.ForceMoveRight);

      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveLeft);

      Message(ref m_list, ref e_list, "アデル：どうだったー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだろうなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：強そうだったー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここはもう強い奴しか出てこない。そこは良い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：そこは良いんだ。おもしろーい☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：いつもの作戦についてはー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだろうなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：いつものフォーメーションで構築するのかなー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだなあ・・・それでも良いんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：何か決まりきらないねー。どうしたどうしたー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうしたわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・なんだろうなあ・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：戦術論で迷ってるわけじゃなさそうよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいテメェ。はっきり言えやコラ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アハハー、ちょっと待ってあげようよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みんな、頼みがある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この勝負、俺一人でやらせてもらえないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：DUEL形式って事かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういう事になる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：へぇ、驚いたぜ。テメェがガチバトルをやってみたいと言い出すはな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：勝算あんのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：五分五分だと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ほおぉぉぉ・・・やけに自信あるじゃねーか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、五分五分だと言っている。勝てる保証はない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ビリーは真剣な視線をアインに向けた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：勝ってこいよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);
    }
  }

  public static void Message1000271(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "？？？：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：貴公１人で挑むつもりか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、そうだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：双方、名を名乗ろうではないか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：我はシェル・ザ・ソードナイト。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺はアイン・ウォーレンスだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ソードナイト：では、カウントダウンを始めるぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、勝負だ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ソードナイト：３", ActionEvent.None);

    Message(ref m_list, ref e_list, "ソードナイト：２", ActionEvent.None);

    Message(ref m_list, ref e_list, "ソードナイト：１", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.SHELL_THE_SWORD_KNIGHT, ActionEvent.EncountDuel);
  }

  public static void Message1000272(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000272 == false)
    {
      One.TF.Event_Message1000272 = true;

      Message(ref m_list, ref e_list, "ソードナイト：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ソード・ナイトは静かに一定の距離を置いた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ソードナイト：この勝負、貴公の勝利である。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なっ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ソード・ナイト：この先へ行くがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今のは致命傷ではないはず。こちらの勝利だと判定した理由は？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ソードナイト：今の攻撃こそが、こちらにとって致命傷。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ソードナイト：貴公の動き、見事であった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　シェル・ザ・ソードナイトは静かに姿を消失させた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っふぅ・・・・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おお！やるじゃねーか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやあ・・・何とかな・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：えーー　【何とかな】ってどういう意味ー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え？ええっと何だろうな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：意味・・・意味・・・うーん", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：自然に喋って出てきた言葉だ。意味はないと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：えーー、それって何か絶対おかしいよねー、アハハハ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれ、おかしいか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：だって、そのセリフ。最初から何とかなると思ってるんだよねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやいやいや、それはないって。勝ち目は薄かったからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ゼロじゃなかったんでしょー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さすがにゼロではないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：やっぱりー、アハハハハ、面白いなー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、面白いのかな・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかし、さすがにちょっとスタミナを使ってしまったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：出来れば一旦戻っておきたいが、良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私は別に良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ご自由に・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃ、とっとと戻ろうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：悪い。そうしたら一旦戻るとしよう。", ActionEvent.None);
    }
  }

  public static void Message1000273(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000273 == false)
    {
      One.TF.Event_Message1000273 = true;

      Message(ref m_list, ref e_list, "アイン：さてと・・・偵察してくるか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なあ、お前のその偵察ってのは、どういう意味があるんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：相手の雰囲気を掴んでくる感じかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：雰囲気ってなんだよ？オーラみたいなものか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・まあ、そんな感じではあるかもな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃ、ちょっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "4", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "1.0", ActionEvent.ForceMoveBottom);

      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "ラナ：どう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今回は２人いたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ今回はDUEL形式は無しって事だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、さすがにそうだな。で・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらくあの２人だが、連携プレイの様な動きをしてくると思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：２人構成って大体そうよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、それでその連携プレイを極力抑止したいわけだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいおい、何でそこで説明が止まるんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、依頼が難しい内容なんだ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：依頼が難しいって何だよ？　ガツンと言えっての！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：うーん、そうか。じゃあ言おう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：２体のうち、どちらかが連携を出して来たタイミングで", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺は一方に対してカウンターを仕掛けようと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この時、もう一方がほぼ同じタイミングでカウンターをかぶせてくるケースがあるんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それに対して、カウンターを断ち切る様なアクションを行ってほしんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それはビリーお前だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：マジかよ。よぉし、分かった！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：カウンターに対して、カウンター的な行動で抑止を仕掛けるんだぞ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おぅよ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ試しに。どの行動が適切かを言ってみてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そりゃテメェ、そん時次第だろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ試しに。そん時が今この瞬間だったとして、どれにする？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ボーン・クラッシュだろ！　相手をぶっ倒せば終わりだからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、相手のライフがだいぶ残っていると仮定してだ。他には？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：奇をてらうんだったら、トゥルーサイトだな。　テメェの精神を向上させてやるぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それはまあ、カウンターではないな。カウンター系統を選んでくれ。他には？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだコラァ、尋問攻めかよ。ったくしょうがねえなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：フレイム・ストライクだな！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かった。俺はもうちょっと作戦を考えてみるから、ビリーはいつも通りやってくれて良いぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：マジかよ！　おっしゃ了解！！", ActionEvent.None);
    }
  }

  public static void Message1000274(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "？？？：そこまでだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：我が名は海星騎士：エーギル", ActionEvent.None);

    Message(ref m_list, ref e_list, "エーギル：この神殿に立ち向かいし者を天秤にかけるのが我らの役目。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：天秤に・・・かける・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エーギル：この者達をどう見る？海星騎士アマラよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アマラ：天秤は、不安定な状態。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アマラ：無欲と意志が混在する状態であるがゆえ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アマラ：今一度ここで見極める必要があるだろう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エーギル：ではアマラよ。戦闘の陣形をとろうではないか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アマラ：・・・承知。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：来るか・・・まあそうだよな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エーギル＆アマラ：構えるがよい。こちらから行くぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：みんな、戦闘開始だ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.SEA_STAR_KNIGHT_AEGIRU, ActionEvent.EncountBoss);
  }

  public static void Message1000275(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000275 == false)
    {
      One.TF.Event_Message1000275 = true;

      Message(ref m_list, ref e_list, "エーギル：ムッ・・・！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：続けて、そっちも！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ッギイイィィィィン・・・！　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "エーギル：ッ・・・！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（しかし、この２人・・・どうあっても倒れてくれる気が・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エーギル：これまでか", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エーギル：アマラよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アマラ：うむ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エーギル＆アマラ：天秤の調べはこれにて終了。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エーギル＆アマラ：海星源の王へ報告とする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エーギル＆アマラ：さらばだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　海星騎士エーギルとアマラは静かに姿を消失させた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っふう・・・危なかった・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：退いてくれたわね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直、退いてくれたのは助かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：というか、この階層に出てくる奴らは、どれもこれも倒せるレベルじゃない気がするんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあ、でもよ。色々やってこうして撃退出来てんだから、別に良いんじゃねーの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・なるほど、確かにそうかもな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っしゃ、ガンガンやって行こうぜ！どうせまた次もあるんだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな、マップ的にはまだありそうな感じだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：このまま、継続で進める？　それとも一旦休憩を取る？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・今のもだいぶ消耗したからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：休憩は取っておきたい所だ。一度帰還するとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);
    }
  }

  public static void Message1000276(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000276 == false)
    {
      One.TF.Event_Message1000276 = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おっしゃ、俺が偵察してきてやる！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ！っちょ、おまっ、待てって！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　ビリーは広間に向かって正面から突っ込んでいった ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "5", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "？？？：何奴よ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よし、名を名乗れば良いんだよな。俺の名はビリー・ラキだ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（うわあぁぁ・・・まずい・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：【徳】への探求を感じられぬ者よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：其方に資格はないと思え。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：な、なんだと！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：出でよ、エレメンタル・スター・ドラゴン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　広間にエレメンタル・スター・ドラゴンが召喚された！ ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（ああぁぁ・・・なんて事だ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいちょっと待てよ。まずは対話させろよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：対話以前の問題と知るがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：其方、本当にあのシェル・ザ・ソードナイトを倒せし者であるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：それは俺じゃねーな。俺の仲間がぶっちぎってくれたぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：仲間・・・仲間と発言したか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ならぬ。断じて其方は通せぬ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：出でよ、エンシェント・スカイ・ドラゴン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　広間にエンシェント・スカイ・ドラゴンが召喚された！ ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：ビ、ビリー！！！　ちょっと戻って来い！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：むっ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうアイン。今良い所なんだ、ちょっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それの一体どこが良い所なんだ！！お前、良いからちょっ戻って来い！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ったく、分かった分かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：かの者か・・・　なるほど・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　ビリーは一旦広間から通路へと戻ってきた ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：で？　なんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんだよ、じゃねえだろ・・・あんなレベルの奴が召喚されて・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：威嚇は俺には効かないぜ。いくらでも受けて立ってやるさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれは威嚇じゃない。明らかに本物だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：交渉次第なら、もう少し違う形になったはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだその交渉ってのは。偵察じゃなかったのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：偵察は交渉術に含まれる。こちらの偵察行動、大抵はあちら側から見透かされているからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そうだったのかよ・・・そういう大事な事は先に言っとけっての。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ・・・まだ交渉できるかもしれない。ちょっとここで待っててくれないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ！", ActionEvent.None);
    }
  }

  public static void Message1000277(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：先ほどの非礼。大変申し訳なかった。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：其方は？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：アイン・ウォーレンスという。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：ほぉ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：これは・・・相応の【徳】を積んでいると見て取れるの。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：妾も名乗るとしよう。海星の女王：メリル・セイジュである。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：ここを通るためには、どうするべきか、であるが。", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：正直に申すぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：妾を倒す以外に道はない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：やっぱり、そうなのか・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：面白い子よの。モンスター討伐に抵抗感を示すとは。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、単なるモンスターなら良いんだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：この海底神殿で待ち構えていた奴らが単なるモンスターとは思えないんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あなたも含めて、本当にモンスターなのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：ホホホ、どうかしらねえ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ちょっとそんな感じがしないんだよな。気のせいかもしれないが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：して、其方はどうする。何を求めるか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：とりあえず、勝負はするしかないわけだよな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：まず、そのドラゴン達は勘弁してくれないか。とてもじゃないが勝てる気がしない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：良かろう、では。", ActionEvent.None);

    Message(ref m_list, ref e_list, "～　海星の女王は、大きな杖をドラゴン達に向けて２度かざした ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "（ッシュウウウン・・・・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：召喚したドラゴンはこれにて消失。これで良いのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：大変助かる・・・で、後はちょっと変な希望になるが。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：程よいモンスターを２体、召喚してくれないだろうか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：なんと。改めて数を増やす事を望むか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：３vs３形式で挑んでみたいんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：というより、この場においては元々そういうルールがある。違うか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：ご明察。ほんに面白いやつよの。", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：では、改めて召喚するとしよう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：出でよ、ガーディアン・ロイヤル・ナーガ達よ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "～　広間にガーディアン・ロイヤル・ナーガが２体召喚された！ ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：よし、こちら準備はオーケーだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：妾の方も、いつでもよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：じゃあ、勝負させてもらう！行くぞ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.ORIGIN_STAR_CORAL_QUEEN, ActionEvent.EncountBoss);
  }

  public static void Message1000278(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000278 == false)
    {
      One.TF.Event_Message1000278 = true;

      Message(ref m_list, ref e_list, "アイン：おっしゃ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：妾の防御壁を破るとは、中々の腕よの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：って、なんか全然倒れていないな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：妾には、この神殿に蓄積されし魔力が半永久的に流れ込んでおる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：倒れる事はまずないと思うがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうりで・・・そうじゃないかとは思ってたが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：ほう、どの様にして捉えたのじゃ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まず最初の召喚だが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの大きさからして普通に考えて本人の魔力消費は著しいはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だが、召喚後においても何一つとして変化は見られなかった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だとすると、そもそも魔力を消費しても永続的な供給源があると思ったのさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：確かにの。ほかには？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：戦闘中のあの妙な防御壁の事だが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれってそもそも防御壁だったのかどうかが怪しい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：どういう意味じゃ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：防御系統なら本来はある程度の被ダメージがあれば、必ず崩れるものだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だが、あの防御壁はどうも違っていた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ダメージ系統じゃ崩せそうな感じがしなかったんだよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：となると消失系ぐらいしか残ってないが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：それも異なるのは気付いておったようじゃな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう。俺はそこで偏った考え方そのものを捨てたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もうあるとしたら、あれしかない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：無効化系統だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：当然、無効化の類のものは効果時間が短く消費も著しいはず。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だが、あの防御壁はかなり長い時間続くものだった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だが、詠唱者本体はまったく消費している気配はなかった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だから、この海底神殿自体が詠唱者へ魔力を流し込んでるんだろうと思ったわけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：ご名答。やはり【徳】を積んだ者は一味違う気がするの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：よろしい。通過するがよいぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジか・・・助かった・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：しかし其方、ほんに・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：ふむ、まあ良いか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：次の相手は間違いなく本物のモンスターじゃぞ。気を付けて進むがよかろうて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　海星の女王は静かに姿を消失させた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・っふう", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みんな、今回は本当に助かった。ありがとう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、あんたなんか・・・結構、疲れてる？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん・・・っと、なんだ分かっちまうか、ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おう、ちっと戻って休憩にしようぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネも、それでいいか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ戻るとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：あれーーー、アタシにも聞いてよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しまった！そういえばそうだったな。アデルも良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ありがとー、良いよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ今度こそ戻ろう！", ActionEvent.None);
    }
  }

  public static void Message1000279(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000279 == false)
    {
      One.TF.Event_Message1000279 = true;

      Message(ref m_list, ref e_list, "アイン：んっ・・・近いな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：偵察はどうする？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まだ遠く離れているが、それでも相当の攻撃的性質を放ってるな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：一瞬だけ。行ってくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "6", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveBottom);

      Message(ref m_list, ref e_list, "？？？：（・・・ギョロ・・・）　　？？？：（・・・ギョロロ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "0.1", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "アイン：しまった！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：大丈夫だった？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ぎりぎりアウトだったと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：つっても、攻められてねーだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そうだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何というか、見られてしまったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：別に良いじゃねえか。偵察は相手に見られるもんだって言ってただろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：上手く言えないが・・・ちょっと今回は俺のミスだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分が悪くなったって事かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・完全に警戒される形になってしまった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：警戒されてない状態なら、奇襲や先制攻撃が出来たはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：特にこういった異形系のモンスターはその方が倒しやすい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ、今回睨まれちまったって事は、もう隙がねえ状態なんだな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういう事になる。申し訳ないが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：気にすんな！むしろ上等だぜ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・そう言ってもらえると助かる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：その異形系のモンスターってどんな感じだったの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：非常に大きい目玉が２体。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：一方が赤色、もう一方が青色をしていたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、それぞれの目玉がこちらを向き、何か仕掛けて来る感じだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：き・・・気持ち悪いわね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと、目玉が大きな特徴に見えるかもしれないが、おそらくだ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：純粋な魔法系統に気を付けた方が良い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：炎とか氷の魔法耐性は上げておいた方が良いかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。必須事項だと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：陣形的なものは？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いつものパターンで問題ない。その辺りはおそらく大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：他に気を付ける事はあるかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：基本的に状態異常は受けない様に装備を整えておこう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あと、ライフが低くなりすぎないように。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そのぐらいかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っしゃあ！とっとと突撃しようぜ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーケー！", ActionEvent.None);
    }
  }

  public static void Message1000280(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "？？？：ッギョロロ！！　　？？？：ギョロギョロ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どうやら会話は無しの様だな", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ほんっと、気持ち悪いわ・・・とっととやっつけちゃいましょ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ハハハ・・・そうだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：今回の相手は待ったなしだろ！ガンガン行こうぜ！。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：オーケー！戦闘開始だ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.JELLY_EYE_BRIGHT_RED, ActionEvent.EncountBoss);
  }

  public static void Message1000281(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000281 == false)
    {
      One.TF.Event_Message1000281 = true;

      Message(ref m_list, ref e_list, "アイン：これで決まりだ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ッザシュッ！　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ジェリーアイ：ギョオオオォォォ・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　２体のジェリーアイは静かに姿を消失させた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし・・・やったみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っしゃ！　やったじゃねーか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。真正面でも全然オッケーだったじゃねえか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みんなのおかげさ。俺だけじゃこの結果は出せなかった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・ちょ、お前まてよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何だ？なんか変な事言ったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いや・・・まあ、良いけどよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。一つだけ聞くぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：戦闘中、すげえ反応速度でおまえ対応してたぞ。自覚あるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：自覚・・・と言われると正直分からない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みんながサポートしてくれてるおかげで、いつもより動きやすいんじゃないかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そーかよ。まあ分かったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、そしてだ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、マップ的にはそろそろか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうかしらね。この感じだと次でラストって保証はできないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか。まあ、まだ警戒しつつで進めるとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あの・・・少し提案ですが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：１度休息したいので、帰還しませんか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだった。なんか忘れてた！ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、そしたらここで一旦戻るとしよう。", ActionEvent.None);
    }
  }

  public static void Message1000282(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000282 == false)
    {
      One.TF.Event_Message1000282 = true;

      Message(ref m_list, ref e_list, "アイン：これは・・・物凄い圧力だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：確かに、姿が見えねえってのに、すげー感じるな", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・見てくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "7", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "1.0", ActionEvent.ForceMoveBottom);

      Message(ref m_list, ref e_list, "0.2", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "ラナ：どうだった？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：姿がまったく見えなかった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そう・・・でも、何も居ないって事はないわよね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、絶対に何かいる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらくだが、これは大型タイプのやつだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：大型タイプだと！！上等じゃねえか、かかってこいや！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、待てって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大抵この大型タイプは待ち伏せをしている場合が多いんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なのでお前みたいに突貫するタイプは絶対に食われる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：それはやってみねーと分かんねーだろうが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや・・・実際ヤラれたら困る。頼む、ここは聞いてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それで、待ち伏せしてるお相手さんをどうおびき寄せれば良いのかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それなんだが、ちょっと考えがあるんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今回、俺は前線を張るような事はせず、ひたすら攻撃役として前に出ようと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んだよそれ。それは俺がやるべきだろーが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、ちょっと頼むから聞いてくれ。そうじゃないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アピール的なスタイルで攻撃役をやるっていう話なんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、本格的な攻撃についてはビリーがやってもいい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン。あんたまさか、囮になるつもり？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあそういう感じだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直ちょっとどうなるのかは分からないが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺が囮としてターゲットになったら、チャンスだと思ってくれていい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：思う存分、ダメージを与えると良いだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：後方支援とかはどうするの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今回のケースでは特殊な事はしなくて良い。いつも通りだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、囮役である俺を絶対死守という動きはしなくていい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：タイミングによっては、攻撃に回ってもいいぐらいだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そう、分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：以上だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よし、要はタイミングをきっちり合わせて殴れば良いんだな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・その解釈で大体オーケーだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ気を引き締めて行こう！", ActionEvent.None);
    }
  }

  public static void Message1000283(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　足を踏み入れた瞬間、アインは異様な殺気を感じた　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：来た！　皆、気を付けろ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：あぁん？なんもいねーぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：・・・　・・・　・・・・・・・・（ヌゥ）・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あっ、ビリー、あぶねえ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：ッゴガアアアアアアアァァァァ！！！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　巨大な生物は突如姿を現し、ビリーに大きな口を開けて突撃してきた！　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　ザッッッッッパアアアァァァン！！！　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：どわーーーーーーーーーーーーー！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：っ・・・！", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　その瞬間、エオネ・フルネアは対象に高速の矢を放った！　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　ッッッピシイィィィ！！　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：　ッゴ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　巨大な生物は瞬間的に身じろぎ、一旦引き返した　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：う、うおおおおおおお！！あ、あ、あぶねええぇぇぇ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：だ、大丈夫か！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：く、食われそうだった・・・や、矢も突き刺さりそうだった・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：気を付けてくれ。下手すると一撃死だと思う。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネ、今のは助かった。ありがとう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：いえ、気にせず。", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：ゴオオオオ！！！ゴ、ゴ、ッゴオオォォォアアアアァァ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：すげえ迫力だな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：だが、俺達ならきっと大丈夫だ。皆、準備はいいか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：準備オーケーよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：っしゃ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：いつでも。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アデル：良いよー☆", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：よし、行くぞ！戦闘開始だ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.GROUND_VORTEX_LEVIATHAN, ActionEvent.EncountBoss);
  }

  public static void Message1000284(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000284 == false)
    {
      One.TF.Event_Message1000284 = true;

      Message(ref m_list, ref e_list, "リヴィアサン：ッゴオオガアアァァァ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　その刹那　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはほんの少し身体を屈め　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　誰もが見失うような高速のステップで、リヴィアサンの懐へと詰め寄った　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ココだ。食らえ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ッザン！！！　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "リヴィアサン：オゴオオオォォ・・・ゴ、ゴゴ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ズッ、ズズズウウゥゥゥンン・・・・・・　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　リヴィアサンは、その姿を消失させた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし！！　完了！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：な・・・なあにいい！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：な、今の動きって。。。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おーい、皆、やったぞー！　ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あれ？　どうしたんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えっと・・・な、何て言うのかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：今の最後の一撃って、アインがやったのよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、もう一度やってみせてよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もう一度・・・もう一度か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こうかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスは高速のステップで、再び攻撃地点へと移動した　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、ここで一瞬フェイント入れてっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あとは、下から突き上げるように、グっと武器を振り上げて・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、ヒットしたなと感じたので、後はこういう風に連撃をかましたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（　ッバ！ッババババシュ！！　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：な！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうかしたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはビリー・ラキの方へ身体を向かせた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。お前、なんか眼が・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンス、瞳孔がかなり開いており、瞳の色が僅かに変化していた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：！！　アイン！　バカアイン！ちょっと落ち着いて！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？いやいや、落ち着けって何の話だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アンタ、今戦闘態勢を解除してないわよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ。もう一度再現って話だったからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：と・・・とにかく。こっちにその武器を振り向けないで。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　っ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・え？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ほ、本当だ！悪い悪い！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンス、瞳の色が元に戻り始める　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、以上だ。今のは結構自信アリかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：よ、良かったわね・・・倒せて何よりだわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ッフウ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、お前結構疲れてるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まったく、誰かさんが妙な演劇をやるからでしょ。ビックリしただけよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：フウッ・・・でも・・・ちょっと本当に疲れたかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あのデカブツと長い間戦ったからな。誰もが疲れているはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じゃ、一旦戻ろうかー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。じゃ、一旦戻るぞ。", ActionEvent.None);

    }
  }


  public static void Message1000285(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000285 == false)
    {
      One.TF.Event_Message1000285 = true;

      Message(ref m_list, ref e_list, "アイン：さてと・・・いよいよか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：マップとしてはおそらくここが最終ね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おう。じゃあまずは偵察して来るんだよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、偵察は不要だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そうなのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。待ち構えている相手が分かっているからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：見てもねーのに分かるのかよ。一体誰なんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：海星源の王だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あー、そういえば最初の時に出現してたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらく、あいつが待ち構えていると思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：王様が最後って事か。なるほどな・・・燃えてきたぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、それじゃ行こう！", ActionEvent.None);
    }
  }

  public static void Message1000286(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "【　アインが広間の入口に足を踏み入れた瞬間　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "8", ActionEvent.UpdateUnknownTile);

    Message(ref m_list, ref e_list, "【　彼らは突如、その場に姿を現した　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "海星源の王：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "海星の女王：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "海星の王子：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：３体・・・か・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "海星源の王：まず、我の名を教えてしんぜよう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "海星源の王：我の名はヴェルガス。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺は、アイン・ウォーレンスだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴェルガス：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴェルガス：ふむ、良き心構えである。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴェルガス：セイジュ、レーヴァ。全力を持ってして相対してあげなさい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "レーヴァ：アイン・ウォーレンス。今度は本気だすからな。覚悟しろよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "セイジュ：アイン・ウォーレンス。妾の本気を受けるがよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴェルガス：この戦い。我自身も参戦する。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴェルガス：アイン・ウォーレンスよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴェルガス：この海底神殿の地にて", ActionEvent.None);

    Message(ref m_list, ref e_list, "ヴェルガス：我々を倒してみせよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　海星源の３体が、一斉に戦闘態勢となる！　】", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：みんな、構えてくれ！戦闘開始だ！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.VELGAS_THE_KING_OF_SEA_STAR, ActionEvent.EncountBoss);
  }

  public static void Message1000287(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000287 == false)
    {
      One.TF.Event_Message1000287 = true;

      Message(ref m_list, ref e_list, "レーヴァ：アイン・ウォーレンス！　打ち取ったり！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：！！レーヴァ、いかん！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンス、グングニルの槍を真正面から受ける直前　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　その姿はその場から完全に消失していた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "レーヴァ：なっ！！！　どこだ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスの瞳の色が色濃く変化し始める　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まずは", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：しまった！やはりセイジュか！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ひとつ", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　その刻　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　女王セイジュはその場で崩れ落ちる　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：つぎに", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ふたつ", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　同時刻　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　海星源の王ヴェルガスの前に影が一つ　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "レーヴァ：ッグ・・・っくっそおおぉぉ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　王をかばう形で海星の王子レーヴァがその場で果てる　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さいごに", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みっつ", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　刻が進もうとする中　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　海星源の王、決死の防衛姿勢を取る　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：むうん！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ッギイイィイン！！！　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：見えた", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：む！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ッギイィン！　ッギン、ッギン、ッギイイイィイン！！！　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これで", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さいごだ", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ッザシュ！！！　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：ッグ・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：み・・・　見事・・・　だ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アインの周囲に３体が奇麗に円を描くように倒れる形となる　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンスはしばらくその場で立ち尽くす形となった　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン？", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンス、ラナ・アミリアの方へ振り向かず　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　戦闘姿勢を崩さないまま　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ターゲットを取らない状態下で、武器を構えたままとなった　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おいおい・・・一体どうしちまったんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ビリー・ラキ、アイン・ウォーレンスへ近づこうとした瞬間　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：離れてください！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：え！？あ！？お、俺か！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：離れて！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　ビリー・ラキの眼前に　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　攻撃の軌跡が　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　放たれていた　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・危なかった・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：マジかよ！　こんな離れてるのにか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ってか何で攻撃されてんだよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン！？　おまえ大丈夫かよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺は今", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここにいる", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　アイン・ウォーレンス、瞳の色が元に戻り始める　】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫だ", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：大丈夫なのかよ。そいつは良かったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、ちょっと戦闘態勢を解除したらこっちにきて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、了解だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：顔、見せてごらんなさい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え？　顔か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんか付いてしまったかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ふーん・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：いつものバカアインに戻ってるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃ、戻ってよし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんか診断されちまったな・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：あっ、ねーねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おお、何だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：この先、奥へ続く階段があるんだけど", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：その前に、例の３体が復活しちゃってるよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っげ！！　ウソだろ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　海星源の３体は、初期位置に再び立っていた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：復活できるなんて・・・さすがに冗談キツイな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：でも、どーかなー。何か雰囲気が違うみたいだけど☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？そういえば・・・何か違う感じがするな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：対話したい内容があるんじゃないかな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほど・・・ならちょっと話しかけてみるか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みんな、多分戦闘は終了だが、もうちょっと待っていてくれないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：いいわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあちょっと会話してくる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アインは海星源の３体の前に再び立つ形を取った　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ヴェルガス：先の闘い。見事であった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：我々３体を相手にし、ほぼ同時に仕掛けた行動。恐るべき素質である。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：我々の敗北である。ここを通るがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、でもちょっと待ってくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そもそも、何故戦う必要があったんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：それは、この海底神殿における試練だからに他ならない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：我々は貴君の素質や力量、考え方などをはかる存在である。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：貴君が至らぬ存在であれば、ただそれまでという結果が残るだけの事。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そうなんだろうけど・・・何て言うんだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：戦う必要性があるのか？って言えば、分かるかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今回の戦闘にしても、感じたんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：戦闘の最中において、何度か危ない目にはあってるんだが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：本当の意味で命に関わるデッドラインを超えていない気がしたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：ほぅ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：「力量をはかる」とかそういう考えで相対してくれている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：殺気は確かに感じとってはいるが、", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何て言うのかな・・・ちょっと上手く言えないが、何かが違う気がしたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ともかく、命の取り合いにはならなかった事について", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：感謝している。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：ふむ。不思議な存在よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：かの者達と同じセンスを保持しておるとはな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：良かろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：次の階層に関する助言を授けるとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "セイジュ：王よ。そこまで譲歩せずとも・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：セイジュよ、よいのだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：この者であれば、きっと辿り着いてくれよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "レーヴァ：でも、辿り着けるとは限らないよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：そこは重要ではない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：この者を信じてみたくなったのだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：アイン・ウォーレンスよ。聴くがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：次の階層においては", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：何もすべきではない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：己が心に問いかけるとよいだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：さすれば・・・あるいは", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：いや、助言はここまでか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ヴェルガス：貴君に天の導きがあらん事を。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【　海星源の３体は、光に包まれ、その姿を消失させた　】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（　己が心に問いかける・・・か　）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：会話、終わったみたいだねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：階段には進んでも良いのかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの内容からして、次の階層でモンスターは発生しない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何らかの仕掛けを解くだけになるだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、そのまま進行しても良いのね。どうする？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：行ってみようと思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。でも十分に気を付けてね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解。", ActionEvent.None);
    }
  }

  public static void Message1000288(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000288 == false)
    {
      One.TF.Event_Message1000288 = true;

      Message(ref m_list, ref e_list, "アイン：ん？これは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：僅かに隙間があるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：調べてみましょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃ、ちょっと前空けて。見てみるから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：意外とシンプルよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：開けられそうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ここの右側にあるくぼみを横に回転させて・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：で、左側のこれを少し押せば・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_310_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：おお、開いた！　サンキュー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ッフフ、バッチリかしら♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあお宝ゲットと行きますか！", ActionEvent.None);
    }
  }

  public static void Message1000289(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000289 == false)
    {
      One.TF.Event_Message1000289 = true;

      Message(ref m_list, ref e_list, "アイン：おっと・・・待てよ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここの壁だけ、微妙に色が違うな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何らかの仕掛けで動かせる類のものじゃないかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと見てもらえるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：良いわよ。じゃあ、ちょっとそこどいて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：仕掛けってほどじゃないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：小さくて分かり難いけど、両サイドに取っ手があるわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：引っ張っても押しても駄目で、正解は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：横にスライドさせれば行けるわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：せーの！", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_311_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：よしきた！　いやあさすがラナ！　有り難い！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ、お手のものって所かしらね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：サンキュー！　そうしたら、お宝を頂くとするか！", ActionEvent.None);
    }
  }

  public static void Message1000290(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000290 == false)
    {
      One.TF.Event_Message1000290 = true;

      Message(ref m_list, ref e_list, "アイン：ん？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：妙だな。ほんの少しだけ水路の高さが異なっているように見える。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、きっちり調べてもらって良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何かありそうなのね。分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：水路の中に極めて小さい石ころをはめ込む箇所があるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：小さければ何でもよさそうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ。何か持ってる？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、さっきなんか使うかなと思って手に入れておいた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何処で拾ったのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この部屋の入口だ。見落としやすい場所だが、念のため取っておいた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、おそらくそれで決まりね。水路のはめ込み位置に置いてみるわよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、頼むぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：この辺りかしら・・・よいしょっと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：うーん・・・何かはめ込みにくいわね。これ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あ、そういう事ね。はめ込む方向がきっちり合ってないと駄目な仕掛けね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ゆっくりと回転させて・・・ちょうど収まる所を・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あ、多分コレね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_312_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_FAKESEA_313_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_FAKESEA_314_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：おおお！ビンゴ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：仕掛けとしては面白かったわね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ホントありがとな！　よし、お宝ゲットと行きますか！", ActionEvent.None);
    }
  }

  public static void Message1000291(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000291 == false)
    {
      One.TF.Event_Message1000291 = true;

      Message(ref m_list, ref e_list, "アイン：位置的に・・・この辺りかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何か気付いた事でもあるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：漫然と進んでいたら気付かなかったかも知れないが、おそらくこの辺りに仕掛けがある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：一通り調べて見れば良いのね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。そうしてもらえると助かる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：分かったわ。ええと・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：うん、星型の紋様が刻まれているわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：カラクリの難易度としては難しそうなのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：大丈夫でしょ、印象的な紋様なワケだし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：おそらく、一筆書きでこうやって・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：で、最後に中央の５角形を描けば・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_315_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：ラナ様！ありがとう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、変な言い方は止めてよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやいや、悪かった。本当に助かってるんだよ。サンキューな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：位置的にはお宝ね。行ってらっしゃい♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし！　待ってろよお宝！！", ActionEvent.None);
    }
  }
  #endregion

  #region "第四階層"
  public static void Message1000292(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000292 == false)
    {
      One.TF.Event_Message1000292 = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンスはその場に立ち、周囲を見回した　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "1", ActionEvent.UpdateUnknownTile);

      Message(ref m_list, ref e_list, "アイン：これは・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何も・・・無いわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んなもん、どっかに仕掛けぐらいあるんだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうかな。見つけられると良いんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ヤケに自信なさそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：上の階層で最後に海星源の王ヴェルガスと会話しただろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そういえば、何か話してたわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ガイドはもらってるんだけど、ちょっと不可解な内容だったんだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何て言われたわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：『己が心に問いかけるとよいだろう。』と言っていた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それだけだと、ちょっと抽象的過ぎるわね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなんだ。だからどうすべきかなとは考えているんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらく１人で考え込んでもしょうがない気はしている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そこでだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：みんな、何か気付いた事があれば教えて欲しいんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お前にしては珍しい提案だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何でも良い。何かあったら知らせてくれ。頼む！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：了解よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：任せとけや！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うん、分かったー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：気付ける範囲でよろしければ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし。じゃあ、探索開始だ！", ActionEvent.None);
    }
  }

  public static void Message1000293(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_MindRoom_Complete == false)
    {
      One.TF.Event_MindRoom_Complete = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうしたの？だいぶ考えてこんでいる様だけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、何かを考えているわけじゃないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何となくだが、集中してみようと思って・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もう少しだと思うんだ。待っててくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：別に良いわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（己が心に・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（問いかける・・・か・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（この手が一番難しいかも知れないな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（もう少しだ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（集中・・・集中・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_322_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_323_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_324_O, ActionEvent.RemoveFieldObject);
      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_325_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "エオネ：！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、オッケー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいおいマジかよ！どんな手を使ったんだよ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、手は使ってないんだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃ、どんな技を使ったんだよ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、技は使ってないんだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：てことは何か知力を使ったのかよ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、知は使ってないんだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まさか、見えない速さで力任せに鉄拳かましたのかよ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、力は使ってないんだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃなんだ？？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直な所、俺自信もよく分かってないんだ。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：テメーのはマジで分かんねーな・・・まったく。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（まさか・・・そんな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（精神・・・波動を・・・？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？エオネ、何か言ったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いえ、何でもありません。開いて良かったと思います。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、おお。そうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ開いたところを引き続き探索っと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、バカアイン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい、なんでしょうか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：少し、額に汗かいてるわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっ、確かに。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：大丈夫かしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺なら、大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そう。何とも無いなら良いんだけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：んじゃまあ、せっかく開いた事だし、探索しに行こうぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);
    }
  }

  public static void Message1000294(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000294 == false)
    {
      One.TF.Event_Message1000294 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。読もう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　力のみに非ず、技のみに非ず、知のみに非ず、心のみに非ず　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どう？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：覚えておくしかないな。メモは取れそうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：良いわよ。また思い出したくなったら言ってちょうだい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、サンキュー。", ActionEvent.None);

      if (One.TF.Event_Message1000294 && One.TF.Event_Message1000295 && One.TF.Event_Message1000296 && One.TF.Event_Message1000297)
      {
        Message_FourMessageBoard_Clear(ref m_list, ref e_list);
      }
      else
      {
        Message(ref m_list, ref e_list, "ビリー：っしゃ。他も当たってみようぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：分かった。", ActionEvent.None);
      }
    }
    else
    {
      Message(ref m_list, ref e_list, "『　力のみに非ず、技のみに非ず、知のみに非ず、心のみに非ず　』", ActionEvent.None);
    }
  }

  public static void Message1000295(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000295 == false)
    {
      One.TF.Event_Message1000295 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。読もう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　源泉なる知が、技の体現と成す　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何かを示しているのかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうだろうな・・・", ActionEvent.None);
      
      Message(ref m_list, ref e_list, "ラナ：メモはしておいたから。また何かあれば言ってちょうだい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：サンキュー。", ActionEvent.None);

      if (One.TF.Event_Message1000294 && One.TF.Event_Message1000295 && One.TF.Event_Message1000296 && One.TF.Event_Message1000297)
      {
        Message_FourMessageBoard_Clear(ref m_list, ref e_list);
      }
      else
      {
        Message(ref m_list, ref e_list, "ビリー：っしゃ。他も当たってみようぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：分かった。", ActionEvent.None);
      }
    }
    else
    {
      Message(ref m_list, ref e_list, "『　源泉なる知が、技の体現と成す　』", ActionEvent.None);
    }
  }

  public static void Message1000296(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000296 == false)
    {
      One.TF.Event_Message1000296 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。読もう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　技の体現が、力への理を示す　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：やっぱ力って事だよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、そういう類じゃなさそうなのは確かだ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：メモしておいたわよ。後で必要になったら言ってちょうだい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとう。", ActionEvent.None);

      if (One.TF.Event_Message1000294 && One.TF.Event_Message1000295 && One.TF.Event_Message1000296 && One.TF.Event_Message1000297)
      {
        Message_FourMessageBoard_Clear(ref m_list, ref e_list);
      }
      else
      {
        Message(ref m_list, ref e_list, "ビリー：っしゃ。他も当たってみようぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：分かった。", ActionEvent.None);
      }
    }
    else
    {
      Message(ref m_list, ref e_list, "『　技の体現が、力への理を示す　』", ActionEvent.None);
    }
  }

  public static void Message1000297(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000297 == false)
    {
      One.TF.Event_Message1000297 = true;

      Message(ref m_list, ref e_list, "アイン：看板だな。読もう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "『　力への理から、心との同化を経て、森羅万象へと至る　』", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：けっこう読み解こうとしてるよねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：変に考え込んでしまうクセかな。ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ひとまず、内容はメモに書いておいたわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：助かる。", ActionEvent.None);

      if (One.TF.Event_Message1000294 && One.TF.Event_Message1000295 && One.TF.Event_Message1000296 && One.TF.Event_Message1000297)
      {
        Message_FourMessageBoard_Clear(ref m_list, ref e_list);
      }
      else
      {
        Message(ref m_list, ref e_list, "ビリー：っしゃ。他も当たってみようぜ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：分かった。", ActionEvent.None);
      }
    }
    else
    {
      Message(ref m_list, ref e_list, "『　力への理から、心との同化を経て、森羅万象へと至る　』", ActionEvent.None);
    }
  }

  public static void Message_FourMessageBoard_Clear(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "ビリー：これで一通り回った事になるのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうだな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_326_O, ActionEvent.RemoveFieldObject);

    Message(ref m_list, ref e_list, "アイン：開いたみたいだな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：お前が開けたんじゃねーのかよ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、今回は本当に何もしていない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：単に４つの看板を見て回っただけだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：よく見ると私達の足元の床が僅かにスイッチ形式になってるわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なるほど、看板を読んできた事自体がトリガーになってたわけだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：最初の念じて開けたのとは違うのかよ。マジややこしいな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：しかし・・・それにしても・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：看板のメモは取ってもらってるんだろ？突き進むしかねーと思うんだが。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：まあ、それはそうなんだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：この次、おそらくは例の件じゃないかなと思ってさ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "～　アイン・ウォーレンス、何処を見る事もなく静謐な眼差しとなる ～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：よし、行こう。", ActionEvent.None);
  }

  public static void Message1000298(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "2", ActionEvent.UpdateUnknownTile);
  }

  public static void Message1000299(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "3", ActionEvent.UpdateUnknownTile);
  }

  public static void Message1000300(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "4", ActionEvent.UpdateUnknownTile);
  }

  public static void Message1000301(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "5", ActionEvent.UpdateUnknownTile);
  }

  public static void Message1000302(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1000302 == false)
    {
      One.TF.Event_Message1000302 = true;
      Message(ref m_list, ref e_list, "アイン：ここか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンス、真剣な表情で壁に視点を置く ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：微妙に汗をかいてるみたいだけど、大丈夫？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ・・・大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.VELGUS_SECRETWALL_332_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：っふう・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいおい、結構疲れたんじゃねーのか？行けんのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：心配ない。大丈夫だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：無理だけはしないでね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、分かった。", ActionEvent.None);
    }
  }

  public static void Message1000303(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "6", ActionEvent.UpdateUnknownTile);
  }

  public static void Message1009010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1009010 == false)
    {
      One.TF.Event_Message1009010 = true;

      Message(ref m_list, ref e_list, "アイン：よし・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンス、不思議な球体に手を伸ばした ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：ッグ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ・・・あれは何だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンスの前に不思議な石像が出現した　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "石像：天に仕え、子に捧げしは、現世の理と、慈悲によるお導き。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これは・・・一体・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "石像：子よ。救済とは何かを示すがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：救済・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：石像よ。応えてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺はそれに対して、何かを行えば良いのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "石像：設置された天の皿に収めるべき事象を示すがよい", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：収めるべき・・・事象・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.CHOICE_VELGUS_JUDGE_1, ActionEvent.CallDecision);
    }
  }

  public static void Message1009011(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "石像：天に対して示すものに在らず。立ち去るが良い。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：駄目か・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.TurnToBlack);

    Message(ref m_list, ref e_list, "（　ここは・・・一体どこなんだ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　還るべき場所がなくなってしまってる　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　他のみんなの姿も、もう見えない・・・ ）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　石像はもう何も示さない　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　俺は一体どこで間違ったんだろうか　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　いや、間違ったとかそういう類ではなく　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　思考が至らなかったんだ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　もっと思考を巡らせていれば・・・　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　・・・　・・・　・・・　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　・・・　・・・　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　・・・　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "～　THE　END　～　（終わらない終焉）", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.DungeonBadEnd);
  }

  public static void Message1009020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "石像：示されし事象を検出。", ActionEvent.None);

    Message(ref m_list, ref e_list, "石像：子よ。時間とは何かを示すがよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：時間か・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.CHOICE_VELGUS_JUDGE_2, ActionEvent.CallDecision);
  }

  public static void Message1009030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "石像：示されし事象を検出。", ActionEvent.None);

    Message(ref m_list, ref e_list, "石像：子よ。自由とは何かを示すがよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：自由・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.CHOICE_VELGUS_JUDGE_3, ActionEvent.CallDecision);
  }

  public static void Message1009040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "石像：示されし事象を検出。", ActionEvent.None);

    Message(ref m_list, ref e_list, "石像：子よ。存在とは何かを示すがよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：存在・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.CHOICE_VELGUS_JUDGE_4, ActionEvent.CallDecision);
  }

  public static void Message1009050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "石像：示されし事象を検出。", ActionEvent.None);

    Message(ref m_list, ref e_list, "石像：子よ。双極とは何かを示すがよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：双極・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.CHOICE_VELGUS_JUDGE_5, ActionEvent.CallDecision);
  }

  public static void Message1009060(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "石像：示されし事象を検出。", ActionEvent.None);

    Message(ref m_list, ref e_list, "石像：子よ。理とは何かを示すがよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：理・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.CHOICE_VELGUS_JUDGE_6, ActionEvent.CallDecision);
  }

  public static void Message1009070(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1009070 == false)
    {
      One.TF.Event_Message1009070 = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：随分と長い間立ち尽くしてるみたいだけど、大丈夫かしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン！？テメー大丈夫かよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：びくともしないねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（そんな・・・まさか、そ、そんな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "石像：～～～　目的　を　検出　～～～", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "石像：子よ。無限なる道標を辿りしものよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "石像：今ここに、天の名を授ける。", ActionEvent.None);

      Message(ref m_list, ref e_list, "石像：ObsidianStoneとの接触を経て受諾とせよ。", ActionEvent.None);

      InscribeMatrixDragon_1(ref m_list, ref e_list);

      Message(ref m_list, ref e_list, Fix.VELGUS_ObsidianStone_1_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンスは天の名を獲得した！ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：これが・・・天の名・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "石像：子よ。行くがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンス、パーティの方へと振り返った　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "", ActionEvent.ReturnToNormal);

      Message(ref m_list, ref e_list, "アイン：よし、獲得出来たみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えっ、ちょっと一体どうなったわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ここで天の名を授かったんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何もないじゃない？？　どうやって？？　何をやったわけ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、まずそこに石像があるだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いや、まず石像なんてものは無いけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあまあ。で、どうやったかっていうと、石像にイメージを投影してだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何もねえ所にイメージ投影とか意味不明だろ。オイ聞いてんのか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それで、解の開示が出来ているかどうかも分からないが、ともかく集中して応答していたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：開示先が見つかんねーのに、何かそこでやってたのかよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうするうちに、直接声が俺の中に届いてきたんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：直接・・・ねえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、正直信じられないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：アデルさ。この海底神殿って、お前のじーちゃんは何か知ってるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うん、もちろん知ってるよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：天の名っていうのも、この場で授かるもんなのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：詳しい事は知らないけど、伝承としてはそうだねー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：で、それって誰でももらえるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アデル・ブリガンディはいつもの笑顔を止め、澄み切った顔となり、静かに瞳を閉じた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アデル：誰しもが受諾可能であり、誰しもが拒絶可能である", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：導きに依存せず、言霊に依存せず、願望に依存せず", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：その存在を示せ", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っへ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じーちゃんの言葉だよ。なんか難しそうだよねー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：出来る人はできるんじゃないかなー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、そうしたらこれで終わりだ。パルメテイシア神殿へ戻るとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：遠見の青水晶を使うわよ。良いわね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、頼んだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：帰還先はパルメテイシア神殿にしておいたわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：サンキュー。で、ちょっと相談なんだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何かまだあるの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：この部屋を少しだけ見ておきたいんだ。造りが奇麗だからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：無関心オンパレードのバカアインからそんな言葉が出るとは驚きだわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ、分かったわ。先に行ってるから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺も一足先に行ってるぜ", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じゃ、あたしもー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 ラナ、ビリー、アデルはパルメテイシア神殿へと帰還した 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message1010000(ref m_list, ref e_list);
    }
  }

  //public static void Message1009050(ref List<string> m_list, ref List<ActionEvent> e_list)
  //{
  //  if (One.TF.Event_Message1009050 == false)
  //  {
  //    One.TF.Event_Message1009050 = true;

  //    Message(ref m_list, ref e_list, "アイン：（石が見えるな・・・）", ActionEvent.None);

  //    Inscribe_MatrixDragon_X(ref m_list, ref e_list);

  //    Message(ref m_list, ref e_list, Fix.VELGUS_ObsidianPortal_1_O, ActionEvent.RemoveFieldObject);

  //    // todo　ストーリー未完成
  //  }
  //}

  public static void Message1010000(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1010000 == false)
    {
      One.TF.Event_Message1010000 = true;

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：アイン・ウォーレンス。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：本当に天の名まで授かるとは思ってなかったわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：天の名を授からなかった場合は？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：私に質問しないでちょうだい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：天の名をこの神殿から授かりし者。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：これ以上の進行を見逃すわけにはいかない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ・・・避けられないのか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 エオネ・フルネアはこれまで見せた事がない殺気を放ち始めた！！ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：今度こそ、この場で抹殺してやる。アイン・ウォーレンス！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ック・・・！", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.NAME_EONE_FULNEA, ActionEvent.EncountDuel);
    }
  }
  #endregion

  #region "海底神殿クリア後の帰還イベント"
  public static void Message1010010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1010010 == false)
    {
      One.TF.Event_Message1010010 = true;

      Message(ref m_list, ref e_list, "エオネ：ック・・・グゥッ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あっ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 エオネ・フルネアは意図せず片方の膝を僅かに地に落とした 】", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：バッ・・・バカな！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：アイン・ウォーレンス！どうして・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：どうして！どうして！どうしてよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もうやめろ。勝負はついている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ふっ、ふざけないで！まだまだ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ッグ・・・グッ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 エオネ・フルネア、両足の裏が地面に着地せず、そのまま体制を崩した 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "（ッズシャアァ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：クッ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：だって・・・だっておかしいでしょ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：天の名は本来、誰もが入手できる代物ではないのよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おそらく・・・そうなんだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 エオネ・フルネアの鋭い眼光が再びアイン・ウォーレンスに向けられた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "エオネ：おそらく・・・ですって！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：じゃあどうやって天の名を授かるかは知らなかったとでも言うわけ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：やり方も知らず、誰にも聞かずに！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：自らの意志だけで辿り着いたとでも言うわけ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その辺りは分からない。自然に身を任せただけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：バ・・・バカな・・・そんな事が起こりうるはずが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：貴方は精神波動について何の鍛錬も受けていない。そうよね！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その辺りは全然知らねえ。これは本当だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：精神波動はパルメテイシア神殿の中でも特に鍛錬を受けた者のみが実行できる特殊技術なのよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：何で・・・何で貴方みたいな輩が出来るのよ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 エオネ・フルネアの眼光は強烈な闇の光を放ち続けた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "エオネ：おかしい・・・おかしいわよ！！こんなの！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：私が天の名を授かるまで、どれだけの鍛錬を費やしたと思ってるのよ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：いいえ、鍛錬だけじゃないわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：神殿の依頼を何度も繰り返しこなして来たわ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ、それこそ全てを捧げてきたのよ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：それでようやく得られるのが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：光の加護よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：光の・・・加護・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：パルメテイシア神殿の精鋭騎士にだけ与えられた特殊な加護の事よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：この光の加護が無いと、そもそも天の名は獲得出来ないはずよ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：光の加護を貴方はあの時、授かったとでもいうの！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直、そういう条件の様なものはあり得るな、とは思っていた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だが、あの時はまだその加護とやらは受けていない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか。そういうステップを踏んでないと、本来獲得できないんだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ッフ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ッフ、ッフ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ッフハハハハハハハハハ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：今、分かったわ。アイン・ウォーレンス。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：貴方、本当は天の名を授かっていない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：どうかしら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：良いわよ、答えなくて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：貴方がそこまでハッタリが出来るとは思わなかったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：少しは認めてあげる。貴方の事。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ・フルネア", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いいや", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：【エウネリウス・コーネリア・フルシュトゥラーデ】", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：！！！！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ、そんなバカな！！！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：石像と接触した時に教えてもらった。悪いな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：う・・・・・・ウソよ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ウソよ！！ウソよ！！！ウソよ！！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 エオネ・フルネアの瞳から一滴の涙が零れ落ちた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "エオネ：光の・・・加護が無い貴方が・・・何故・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ、それじゃあ・・・私は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：一体・・・何のために・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：うっ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：だ、大丈夫か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：グッ・・・ッ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（しまった。さっきの一撃が・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：す、すまねえ。とにかく話は後だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：パルメティシア神殿に帰還して治療してもらうぞ。良いな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ッ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは遠見の青水晶を用いてエオネ・フルネアを帰還させた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（ よし、俺も急ごう ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインは遠見の青水晶を用いてパルメティシア神殿へと帰還した 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, Fix.TOWN_PARMETYSIA, ActionEvent.GotoHomeTownForce);
    }
  }

  public static void Message1010020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1010020 == false)
    {
      One.TF.Event_Message1010020 = true;

      Message(ref m_list, ref e_list, "（ パルメティシア神殿へと帰還した俺はまず ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ エオネ・フルネアの事を最優先とした )", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ 彼女の命を何とかして )", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ この世界に引き留める必要があった )", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ 命を狙われたのは確かだが )", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ 理屈抜きで本能的に )", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ 助けよう )", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ そう思ったんだ )", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：大丈夫よ。命に別状は無いらしいから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなんだけどな・・・ふぅ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：最初運び込んだ時、神殿にいる神官達が総出でヒーリングしてたな。始めて見たぜ、あんなの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：別状は無いけど、一歩遅れてたら、分からなかったらしいわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：致命傷だったのは間違いないそうよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：す、すまねえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：なんでアインが謝ってるのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その事については・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネが目覚めてから、きちんと話すよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そう・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、目覚める前にこれだけは先に伝えておこう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アイン・ウォーレンス、顔をやや伏せ、静かに眼を閉じた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こうなったのは", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：完全に俺のせいだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：っえ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネに致命傷を負わせたのは", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺なんだ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ウソ！？どういう事よ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 突如、ビリー・ラキはアインの前に出て、アインの胸ぐらをガッチリ掴んだ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：おいてめぇ！！！どーいう事だよ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッグ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：事と次第によっちゃ、俺はてめぇの事、絶対に許さねえぞ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：言い訳はしない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これは完全に俺のせいだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：てめーなぁ！？説明しろってんだよ！！あぁ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っざけんなよ！！彼女を斬ったのはテメェかってきーてんだ、あぁ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、その通りだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何度でもいう。これは完全に俺のせいだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 ビリー・ラキはカっと両目を見開き、アインを拳でぶん殴った！ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "（ッバキィ！！！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：良いか、よく聞け！！よーーーーく聞けよ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：エオネを斬ったのはテメェなのかよ！？本当の話なのかよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：っんでだよ！？何で斬ったんだよ！？言えや！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：す、すまねえ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ックソ・・・クソが！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：てめぇなあ！！分かったような言い方してんじゃねーぞ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ビリー、落ち着いて。もうこれ以上は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いや、これだけは言わせてもらうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：アイン、今のてめぇは腰抜けだ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：説明を捨ててるだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：思考を捨ててるだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何もかも捨ててるだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そんなのはてめぇじゃねえんだよ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いつもみたいに、意味不明な説明をちゃんとしろっつってんだよ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ その時、アデル・ブリガンディが一言つぶやいた )", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：あー", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：エオネ、ついに目を覚ますみたいだよ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：な、何だって！！！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ビリーのお兄ちゃん、ちょっとだけ待っててあげてよ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：エ、エオネ！！大丈夫か！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：目を覚まさないじゃねーか！！アデル、本当なのかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うーん、もうちょっとだけ待っててあげてー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ビリー、ちょっと落ち着いて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あ、ああ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っ・・・　", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ここは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：パルメティシア神殿の医療室よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そうですか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 エオネ・フルネアは、ゆっくりとベッドの上で身体を起こした 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そうね。そういう事ね。。。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：エオネ、だ、大丈夫か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ええ、大丈夫。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：よ・・・よ・・・良かった・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：エオネ・・・お前がまさか死ぬなんて・・・あり得ねえと思ってさ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：正直俺は・・・ッグ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：良かったな！エオネ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ・・・え、ええと", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、ありがとう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：良かったなぁ！おい、本当に良かったなぁ、おい・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 ビリーは突如背を向け、大きい声で泣き始めた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：（ウ、ウオオォォォ・・・）（ッグス）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ビリーさん・・・そ、その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そんなに・・・泣かないで・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：（ッグス）　あ、ああ。すまねえ。みっともねえとこ見せちまった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：エオネ、本当に、本当に大丈夫なんだな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ハ・・・はい", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ビリー・・・さん？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　（グー、グゥー）・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：あ、ついに寝ちゃったんじゃないのー？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：（グー、グゥー・・・グゥ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ずっと見守ってわね、彼。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさん、貴方が起きるまで彼はずっと起きていたわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：え？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：貴方をこの医療室に運んでから、４日間。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ずっと飲まず食わずで、一睡もしてない感じだったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：命に別状はない。単に睡眠薬で寝かせているだけって説明したんだけどね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・そう・・・だったの・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：（グー、グゥー・・・グッ・・・エオネ・・・オイ・・・大丈夫か・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：寝てるのに、まだ心配してるみたいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ビリーお兄ちゃんはこのままそっとしておこー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ラナさん、アデルさん、ありがとうございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：それからビリーさんも。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 エオネは自分が着ていたショールをビリーにそっとかけた 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：（グー、グゥー・・・ック・・・オイ・・・これでも着て・・・暖かくしとけ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさん、今はまだ安静にね。傷口はまだ完治したわけじゃないから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。分かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それから、アイン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさんとの間で何があったかはこの際、説明不要よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・そ、そうか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさんも、それで良いのよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：すみません。そうしてもらえると助かります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ねー、後でみんなで一緒にご飯食べよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうね。そうしましょ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アインもホラ、行きましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ、分かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：ビリー兄ちゃんにも来て欲しいけど、一体いつ頃起きるんだろーねーアハハ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：じゃ、アタシは行ってるねー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（アデルは医療室を出て行った）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさん、それじゃあまた後でね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：バカアイン、ほら。行くわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、おお。", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ラナとアインは医療室から退室した）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：（グー・・・グ、グゥー・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ パルメティシア神殿：食堂にて ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし、ごちそうさまでした！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ごちそうさまでした。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：美味しかったー。ありがとーございましたー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：で、これからどうするの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネとビリーが復帰したら、やるべき事はただ一つだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ヴィンスガルデ領にあるエデルガイゼン城を目指す。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そして・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ、前から少し気になってるんだけど、良いかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：汗、かいてるわよ。大丈夫なの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺が？マジか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：額の汗よ。ッホラ、おしぼりがあるんだから拭いたら？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、おお。すまねえな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、オーケーオーケー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：でもー。なんでエーデルガイゼーン城って所に行くの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：国王エルミ様からの依頼なんだ。ヴィンスガルデ領へ行って欲しいと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：そーなんだ。分かったー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そう・・・なのよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ、国王様からの依頼って何が目的なのかしらね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直な所、今は何とも言えない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：行って確かめてみるしかないんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ、私達じゃちょっと想像もつかないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あ、でもこれだけは知ってたら教えてちょうだい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、何だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：エオネさんの事だけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：彼女は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：悪い人じゃない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、もちろんだ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それを聞いて安心したわ。ありがと♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、それじゃあ向かう前に準備でもしておくとするか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：あ、ねーねー。さっき神官さん達から聞いたんだけど", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：神殿からの武具販売の事だけど許可が出たって言われたよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "【パルメティシア神殿の武具屋が解放されました！】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：おお、マジかよ！そいつは助かるぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：行ってみましょ。結構色んな武具が並んでたのをさっき見たわ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっしゃ、じゃあエオネとビリーが復帰するまでの間、ちょっと見てみるとするか！", ActionEvent.None);
    }
  }

  public static void Message1010030(ref List<string> m_list, ref List<ActionEvent> e_list, string food_menu)
  {
    if (One.TF.Event_Message1010030 == false)
    {
      One.TF.Event_Message1010030 = true;

      Message(ref m_list, ref e_list, "アイン：よし、今日はもう休むとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：飯は【" + food_menu + "】を頼むとしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：すみません。【" + food_menu + "】をお願いできますか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "宿屋のマスター：はいよ、少々お待ちあれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "・・・しばらくして・・・", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "宿屋のマスター：おまちどうさま。どうぞ、召し上がれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ありがとうございます。いただきます！", ActionEvent.None);

      Message(ref m_list, ref e_list, food_menu, ActionEvent.HomeTownCallRequestFood);
      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownExecRestInn);

      Message(ref m_list, ref e_list, "【 パーティは休息を取りました】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：朝か・・・よし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 アインはパルメティシア神殿の就寝室から外へと出た 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "？？？：お、遅かったじゃねーか！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その声は・・・ビリーか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ。お前、元気だったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それはこっちのセリフだな、ビリー。ちゃんと寝れたのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：もちろんだぜ。気が付いたら別の就寝室に移されてたけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ・・・そいつは良かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：他のみんなは？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：神殿前の正面ゲートで待ってるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジか。じゃあ俺が最後なのか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おし、じゃあすぐ行く。正面ゲートで待っててくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ああ、早く来いよな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 ・・・しばらくして・・・ 】", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし、みんな待たせたな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：遅かったわね、バカアイン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アインのお兄ちゃん、おはよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：おはようございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、傷口はもう大丈夫なのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか、よし。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあエデルガイゼン城へ行くとするか！", ActionEvent.None);
    }
  }
  #endregion
  #endregion

  #region "アーケンダインの街"
  public static void Message1100010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1100010 == false)
    {
      One.TF.Event_Message1100010 = true;

      Message(ref m_list, ref e_list, "アイン：よし、アーケンダイン街に着いたみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ここも結構にぎわってるわね。あちこちにお店があるわよ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、すみません。みなさん・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：私、どうしても寄りたい所があるので行ってきても良いでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：お、おお。俺は別に構わないぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ビリー、お前もどっか行っていいぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：なんで俺に振ってんだよ。俺は別にどっか行きてーわけじゃねぇ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ッハッハッハ、冗談だよ。気にするなって。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：では・・・すみませんが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、またな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ エオネ・フルネアはパーティを一旦離脱しました ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：・・・本当に行っちゃったわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：良いの？アイン。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし。じゃあ、国王から受けていた依頼をこなしますか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：依頼って何だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：聞き込みだよ。アーケンダイン街で色々と情報収集してくれって言われている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何を聞き出すんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そりゃあ、色々な事だよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：てめぇ、もう少し説明しろっつうの。適当すぎるだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そこのバカには何を言っても無駄よ。まともに相手すると疲れるだけよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：マジっすか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：い、いや悪かった。まあ簡単に解説しておくとあれだよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：オーランの塔で見た件と、ツァルマンの里で強引に足止めを食らってしまった件なんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、その前にアーサリウム工場跡地で見つけたアイテムも気になってる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ていうか、最初にラナが受けもらっていた剣も知る必要が・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：わ、分かった。てめぇに聞いた俺が悪かった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、そういう事だ。まずは何はともあれ情報収集をしよう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_21 + " 】が更新されました！", ActionEvent.QuestUpdate);
    }
  }

  public static void Message1100011(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：いや、このアーケンダイン街をもう少し探索を続けよう。", ActionEvent.None);

  }

  public static void Message1100020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1100020 == false)
    {
      One.TF.Event_Message1100020 = true;

      Message(ref m_list, ref e_list, "アイン：おおー、ここはまた大きい広場に出たな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あ♪　大きい噴水があるわね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：人もそれなりに結構いるんだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、色んな人が行き来している場所。ラナ、聞き込みとは得意か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私はそういうのはちょっと不得手ね。初対面の人とはあまり上手く話せないわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあビリー！聞き込みの方は頼んだ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：マジかよ。で、何聞いてくんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ひとまずは妙な伝説とか、あまり聞かない噂話とかをあたってくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：初対面にそんなワケわかんねー内容聞けるかよ。もうちっと具体的に言え。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだなあ・・・じゃあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ツァルマンの里に行った事が人を探してきてくれないか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ちょ待てよ。今、ツァルマンの里っつったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだ。俺の読み通りなら、おそらく少しは居るはずだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：頼んだぜ。ビリー。お前はここぞという時、本当に頼りになる！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おぉ！任せとけっつんだ！じゃ行ってくるぞ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～ しばらくして ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：っしゃ！聞いてきたぜ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おー！サンキューサンキュー！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：しかし、ツァルマンの里に行った事はあると言っても、だいぶ昔の話らしいぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、別に良いんだ。で、どんな事を言ってた？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そうだな。昔は交易も少々あって特産品の売買をやってたらしいぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：交易のルートは？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そりゃあ当然ファージル国を通って、港町コチューシェに寄ってから山登りで決まりだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう言ってたのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ああ、そうだな。ファージル国王には感謝の意が絶えないとか何とか言ってたぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：あ、そういやもう１個重要な事言ってたぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どんな内容だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ツァルマンの里には、「神秘の森」っていう不可侵なエリアがあるらしいぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：「神秘の森」・・・か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあウワサ程度の話らしいけどな。本人も直接入って見たわけじゃねえって言ってたぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほど、そうかそうか。いや、サンキューな！　助かったぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：マジ助かってんのか？ま、別に良いけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：【神秘の森】か・・・今はこのエリアの探索が先だが、後でツァルマンの里にもう一度赴いても良いかもな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺はいつでも行けるぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ、ありがとな。じゃあ【神秘の森】も行く計画ぐらいは立てておくか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ！頼んだぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_22 + " 】が開始されました！", ActionEvent.GetNewQuest);

    }
  }
  public static void Message1100030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1100030 == false)
    {
      One.TF.Event_Message1100030 = true;

      Message(ref m_list, ref e_list, "アイン：ワッツの民芸品店・・・", ActionEvent.None);
      
      Message(ref m_list, ref e_list, "アイン：ラナ、お前こういう場所だったら聞き込み行けるんじゃねえのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：て、あれ？どこ行ったんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：もうその店ん中に入っちまったぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうか。やる気十分って所だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあちょっと雰囲気見てくる。ビリー、ここで待っててくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おうよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アインがワッツの民芸品店に入った途端・・・　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：キャーーーーーー！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っな！！　だ、大丈夫か！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：見てこれ！！すごい可愛いわ♪♪♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あ、これも良いわね♪　あれもこれも素敵な物ばかりね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ、アイン。これも良いと思わない？ちっちゃくて可愛いし♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっ、おぉ。まあそうだな、ッハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "店員：ようこそいらっしゃいました。どうぞ、ゆっくりと店内をご覧ください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ店員さん。このアクセサリーの他に、一体どういった物があるの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "店員：オススメ商品ですね、どうぞこちらへ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ありがと♪こっちも見てみるわ♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　ラナは店員と共に店の奥へと消えていった・・・ ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（なるほど、どうやらあの様子だと「聞き込み」では無さそうだな）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（かと言って俺がこの店内で聞き込むとかなり違和感があるしな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ふう。ちょうどここが裏口か。一旦外に出てみるか・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　店の裏口にて ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（さてと、どうすっかな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ハイ。全ては手筈通りです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ん？　壁の向こうから何か声が聞こえる・・・誰だ？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：手筈通りと申したな。それだけかね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：す！すみません！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：エオネ・フルネア。期待値通りの結果を保持し、それを報告するのみ。それでは貴君を遣わした意味が無いだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ッハ・・・ハイ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ま、まさかこの声・・・エオネか？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：分かっておるな。狙いは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ハイ。目的の・・・物は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：待て。その名称を口にしてはならん。もう少しこちらへ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：（・・・　で・・・）　（・・・それ　・・　に　・・・ついては・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ん？何だ、聞き取りにくくなったぞ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　ではなく・・・）　（・・・あれに・・・）　（・・・とはいえ・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：（・・・　と考えた所・・・）　（・・・となる様に　・・・　） （・・・　・・・のシナリオで・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：（・・・　が良いだろう・・・）　（・・・パルメテイシア神殿・・・）　（では・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ハイ、分かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ふむ。では行くがよい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（どうやら会話は終わったようだな）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（重要な部分が今一つ聞こえなかったが・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（パルメティシア神殿。そこだけは聞き取れたな。）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（さてと・・・どうしたものか・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（エオネ・・・お前一体・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あら、バカアイン。そんなところにいたのね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、ボケアイン。てめ聞いてんのかよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "『ズドゴシッシャアアァァァ！！！』（ラナのアブソリュート・ストライクがアインに炸裂）", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_24 + " 】が開始されました！", ActionEvent.GetNewQuest);

    }
  }
  public static void Message1100040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1100040 == false)
    {
      One.TF.Event_Message1100040 = true;
      Message(ref m_list, ref e_list, "アイン：こんちわー。", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：あら・・・いらっしゃい・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ちょっと占ってもらえますかね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：何を・・・占って欲しいのかしら・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：えっ・・・じゃ、どれにしようかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：迷ってる・・・ようですわね・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あっ・・・まあ・・・はい・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：では・・・そのまま・・・で・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え、ええ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　占い師はスっと目を閉じた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "占い師：・・・いきます・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：お告げが・・・出ました・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ど・・・どうでしょうか・・・？", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：探し人・・・見つからず・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：探すべき物・・・神より隠されたまま・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：隠されしは・・・悠久なる古代への・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：物語・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：です", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：な・・・なるほど・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：つまり・・・・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー（外からの声）：おいアイン！！なげーぞコラァ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ゲッ、うるさ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：他に・・・何か・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、じゃあ１件だけ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：空に赤い星が見えているだろ。あれについて何か知らないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：良いでしょう。合格です。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え？", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：あなたにはこれを差し上げましょう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【 " + Fix.MARBLE_STAR + " 】を獲得しました！", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, Fix.MARBLE_STAR, ActionEvent.GetItem);

      Message(ref m_list, ref e_list, "アイン：こ、これは？", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：それを持って、サリタンの地を訪れると良いでしょう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "占い師：では・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、どうも。じゃあ失礼いたします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アインは占いの館から外に出た　～　", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：よお！すげー長かったみたいだが、どうだったよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：占ってもらった。面白かったぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そうじゃないでしょ。で、何か収穫はあったわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もちろんだ。これを見てみろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：で・・・それは何なわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：" + Fix.MARBLE_STAR + "だよ。どうだ、良いものもらっただろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：使い道はちゃんと教えてもらえたわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：【サリタンの地】に行けとは伝えられたぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：【サリタンの地】ねえ・・・あまり詳しくないんだけど、場所は分かってるの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあまあ・・・これはこれで・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：情報収集しに行ったのに、またワケわかんない話増やしてどーすんのよ、まったく・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫だって。ま、そのうち見つかるさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ボケアイン。てめぇ、ともかくキッチリ解決していけよ。分かってんだろうな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かった分かったって。任せておけって。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_23 + " 】が開始されました！", ActionEvent.GetNewQuest);
    }
  }

  public static void Message1100050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1100050 == false)
    {
      One.TF.Event_Message1100050 = true;

      Message(ref m_list, ref e_list, "アイン：よし、大体一通り回ってって所だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：で、これからどうするのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、好きなように進んでみるさ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いやそうじゃねえだろ。目星ぐらい付いてんだろって話してんだろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ハハハ、悪い悪い。ええとだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まず第一候補は、例のマーブル・スターが何なのかを探る事だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：占い屋でもらってきたやつか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：他に候補は？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：第二候補はツァルマンの里に赴いて、【秘境の森】の調査だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、あと残るは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えっ、まだ何かあるわけ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、ああ。そうか言ってなかったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：黙っていたが・・・第三候補は、パルメティシア神殿だ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、場所についてはこれからだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：パルメティシア神殿の事ね。それなら、ここから少し北に行けばあるみたいよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なに、マジかよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おお。その神殿なら俺も知ってるぜ。結構有名だしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ビリー！お前も知ってたのか！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お前こそ、むしろ知らなかったのが驚きだぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだったのか・・・俺はてっきり重要な秘密情報を聞いた気がしたんだが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何よそれ。アンタ何か聞いたワケ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：い、いやいや。単にすれ違いで聞いただけさ。ッハッハッハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：まあ良いけど。じゃ、どうするの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、特に決め事は無しだ。行きたい方に行こうぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：相変わらずテキトーよね。じゃあ基本は任せるからちゃんと行動してよね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おっしゃ、任せとけ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.ViewQuestDisplay);
    }
  }
  #endregion

  #region "廃墟サリタン"
  public static void Message1200010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1200010 == false)
    {
      One.TF.Event_Message1200010 = true;
      Message(ref m_list, ref e_list, "アイン：着いたな。ここが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：そう、サリタンの町よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：町って言うか、まるで廃墟みたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：この町は過去の大災厄により見捨てられた土地なの。今は誰も住んでいないわよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなのか・・・結構建物自体は残ってるのにな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・ん？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：どうしたのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：今は誰も住んでない。そう言ったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、ここに住んでいる人はもう居ないはずよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　アイン、真剣な目つきで、とある建物の裏影に視線を映した　～　", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・間違いないぜ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ウソ。誰か居るって事？", ActionEvent.None);

      Message(ref m_list, ref e_list, "　～　しばらくして　～　", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：クッ、ククク。しょうがあるまい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：とりあえず姿を見せてくれ。敵じゃなければ尚更だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：クク、まあ良いだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：俺の名はセルモイ・ロウ。ひとまず貴様の敵ではないと言っておこう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺はアイン・ウォーレンスだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：アイン・・・か。幾度なく聞いた事のある名だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：ここに、何をしに来た？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：（アイン、あんたさっきからどうしたのよ。言葉が詰まってるだけど？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ラナ、下がってろ。こいつは色々と要注意だ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：（ふーん、そうなの。まあ、分かったわ）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：仲間だ。仲間を探しにここに来ている。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：ほう・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：港町コチューシェで行方不明になった者を探している。ここに誰か来なかったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：知らんな。知っていたとしても教える事はない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：話を変える。ここの地形にお前は詳しいのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：意図が読めんな。答える義理はない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：率直に頼みたい事がある。", ActionEvent.None);
      
      Message(ref m_list, ref e_list, "アイン：このサリタンの町を探索したい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：付き合ってもらえないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：クッ、クククク・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：ハハハハハ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：初対面でよく言えたものだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：面白いやつとは聞いていたが、想像以上だ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：良いだろう。同行してやる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：ただし、条件がある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：金をよこせ。それだけだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いくら必要だ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：50000Gで良い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：その後の追加要求は決して行わない事を約束する。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.DECISION_PARTY_JOIN_SELMOI_RO, ActionEvent.CallDecision);
    }
  }

  public static void Message1200011(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.AvailableSelmoiRo == false)
    {
      if (One.TF.Gold >= 50000)
      {
        One.TF.Gold -= 50000;
        One.TF.AvailableSelmoiRo = true;

        Message(ref m_list, ref e_list, "アイン：50000Gだ。受け取ってくれ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ロウ：確かに受け取った。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：ありがとう。じゃあサリタンの町を今から探索するから、何か発見できる事があったら教えてくれ。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ロウ：よかろう。", ActionEvent.None);

        Message(ref m_list, ref e_list, " 【" + Fix.NAME_SELMOI_RO + "】が仲間になりました！", ActionEvent.MessageDisplay);

        Message(ref m_list, ref e_list, "", ActionEvent.RefreshAllView);
      }
      else
      {
        Message(ref m_list, ref e_list, "アイン：あれ・・・", ActionEvent.None);

        Message(ref m_list, ref e_list, "ロウ：どうした。", ActionEvent.None);

        Message(ref m_list, ref e_list, "アイン：いや、なんでもない。", ActionEvent.None);

        Message(ref m_list, ref e_list, "ロウ：50000G持ってこい。でなければ、去れ。", ActionEvent.None);
      }
    }
  }

  public static void Message1200012(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：すまねえ。今は金を準備できていないんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ロウ：金次第だ。去れ。", ActionEvent.None);
  }

  public static void Message1200013(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：セルモイ・ロウ。頼みたい事がある。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ロウ：なんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.DECISION_PARTY_JOIN_SELMOI_RO, ActionEvent.CallDecision);
  }
  #endregion

  #region "離島ウォズム"
  public static void Message1300010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }
  #endregion

  #region "ダルの門"
  public static void Message1400010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1400010 == false)
    {
      One.TF.Event_Message1400010 = true;
      One.TF.Fieldobject_GateDhal_00001 = true;

      Message(ref m_list, ref e_list, "アイン：よし、扉発見っと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：特に仕掛けはなさそうよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあ早速開けるとしますか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【ギッギッギギィィ・・・】", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.EVENT_GATEDHAL_1, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "【ッバン！】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ探索開始だ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：駄目だ。開かないな。", ActionEvent.None);
    }
  }

  public static void Message1400020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1400020 == false)
    {
      One.TF.Event_Message1400020 = true;
      One.TF.Fieldobject_GateDhal_00002 = true;

      Message(ref m_list, ref e_list, "アイン：よし、扉発見っと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：特に仕掛けはなさそうよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあ早速開けるとしますか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【ギッギッギギィィ・・・】", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.EVENT_GATEDHAL_2, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "【ッバン！】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ探索開始だ！", ActionEvent.None);
    }
  }

  public static void Message1400030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1400030 == false)
    {
      One.TF.Event_Message1400030 = true;
      One.TF.Fieldobject_GateDhal_00003 = true;

      Message(ref m_list, ref e_list, "アイン：よし、扉発見っと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：特に仕掛けはなさそうよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っしゃ、じゃあ早速開けるとしますか！", ActionEvent.None);

      Message(ref m_list, ref e_list, "【ギッギッギギィィ・・・】", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.EVENT_GATEDHAL_3, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "【ッバン！】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ探索開始だ！", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：駄目だ。開かないな。", ActionEvent.None);
    }
  }

  #endregion

  #region "ディルの街"
  public static void Message1500010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：着いたな。ここがディルの街か。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：何か・・・雰囲気が・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　アイン達は街の中を見回した　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ビリー：そっけねえ感じだよな。人は一応いるんだけどな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：活気がない。みんな一体どうしたんだ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：あ、あちらを見てください。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おっ、何かあるな・・・何かのモニュメントか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：近くに行ってみましょう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　アイン達は街の中央にある石碑に近づいた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：おお、結構デカイな。っと、なんか書いてあるぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：これは記念碑ね。この町の歴史とかが書いてあるんじゃないのかしら。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ビリー、読んでくれないか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：俺じゃ無理だろ。そんなん・・・そ・・・そこのエオネに頼めば良いんじゃねえのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、ここはイルジナに頼みたい。読めるか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：ッフン、ちょっとどきなさい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：悪いな、頼む。", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：｛　原刻の歴７８２年：ここに栄えあるディルの街を建設する ｝", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：｛　ディルは偉大なる古代賢者：ディル・サーカーンより授かりし命名とする ｝", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：｛　ディルには優しき風が吹き　｝", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：｛　ディルには力強き大地が宿る　｝", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：｛　ディルには輝ける太陽kからの加護が降り注ぐ　｝", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：｛　ここに未来永劫の繁栄と栄華を約束する　｝", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：以上よ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なるほど・・・これは辛いな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：なんでだよ。こんなもん単なる記念碑の言葉だろ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：このディルの街の今をザっと見渡したところ、とてもじゃないが良い状態だとは言えない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：当初の頃からすると、この街は今よりもっと発展していたんじゃないのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：だとすると、記念碑だけが綺麗にされている、という事は・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：おそらく、何らかのひどい襲撃を受けた。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それに対して、退避する事もなく果敢に立ち向かった。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：だが、結果は惨敗。後に残ったのは荒れ果てた地のみ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：生き残った中で、それでもなお復旧を試みる者もいただろうが、", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：当然、この地を捨てて他へ移動した者もいるだろう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：・・・ハン。ったくよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：過去の事をロクに知りもしないヤツが、よくそこまで分かるわね。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、分かってる訳じゃないんだ。気に障ったんなら謝る。すまなかった。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ただ、なんとなくこの町の人達はまだ僅かだが希望を持っている。そんな気がするんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "イルジナ：・・・ッチ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：まあ、まずはテキトーに話かけりゃいいんだろ？そういう役は俺に任せろ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、情報収集あしたい。ちょっと頼んだぜ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：私とかエオネは良いのかしら？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうだな。この街では無駄に活気のある奴の方が良いだろう。とりあえずビリーに任せよう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：とりあえずって何だよ。俺様にしか出来ないって事だろ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、その通りだ！任せた！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：おうよ！", ActionEvent.None);

  }
  #endregion

  #region "ディスケル戦場跡"
  public static void Message1600010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }
  #endregion

  #region "ガンロー要塞"
  public static void Message1700010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }
  #endregion

  #region "ロスロンの洞窟"
  public static void Message1800010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }
  #endregion

  #region "エデルガイゼン城"
  public static void Message1900010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1900010 == false)
    {
      One.TF.Event_Message1900010 = true;

      Message(ref m_list, ref e_list, "アイン：よし、では探索開始するか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：でも、城の中に入る所がなさそうね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、目の前に扉があるじゃねーか。これを開ければ良いんだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "0.5", ActionEvent.ForceMoveTop);

      Message(ref m_list, ref e_list, "ビリー：ッグ・・・この！！開け！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：扉は閉まっているみたいだな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：鍵穴の様なものは見当たらないわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：扉の周辺も特に仕掛けは無さそうだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：いきなり手詰まりかよ。どうすんだよ、おい？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ヒントらしきものはない。地道に探索するしかないな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そんだけかよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それだけだ。それ以外に手はない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そ、そーかよ。・・・まあいいけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし。それじゃ、探索するとしよう。", ActionEvent.None);
    }
    else
    {
      Message(ref m_list, ref e_list, "アイン：この扉は固く閉ざされているな。他をあたろう。", ActionEvent.None);
    }
  }

  public static void Message1900020(ref List<string> m_list, ref List<ActionEvent> e_list, string dst_mirror)
  {
    if (One.TF.Event_Message1900020 == false)
    {
      One.TF.Event_Message1900020 = true;

      Message(ref m_list, ref e_list, "アイン：これは・・・鏡？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アイン、どうする？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：やけに慎重じゃねえか。触れてみるしかないんだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだな。ビリーの言う通りだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：鏡に触れてみよう。他に選択肢はない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：誰が触れてみるの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：俺がまず触れてみるか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンスは目の前にある鏡に手をかざした ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何も起きないな・・・ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：かざす程度じゃダメなんだろ？俺が鏡をぶん殴ってやろうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：や、止めてくれ。それはさすがにない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃどうすんだよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうだなあ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナ、頼みがある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何よ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラナが鏡に手をかざしてみてくれないか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：えっ！何でそうなるのよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：原理は分からないが、何となく行けそうな気がする。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：頼む、ラナ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：べ、別に良いけど。何も起きなくても文句言わないでよね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：もちろんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃ、じゃあ・・・い、行くわよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：頼んだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　ラナ・アミリアはその場で眼を閉じ、深呼吸を行った ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：（スウッ・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　ラナ・アミリアが鏡に向かって静かに手をかざした ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：あっ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　鏡から光が溢れだし、ラナおよび周囲のメンバーを包み込んだ！　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, dst_mirror, ActionEvent.JumpToLocation);

      Message(ref m_list, ref e_list, "（ッパシュ！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・お・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：おおおぉぉ！すげぇぜ！ラナ！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ッフウ・・・どうやら成功したみたいね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：すげーなホント。一体何が起こったんだ？？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：仕掛けは全然わからないが、あの鏡を使ってワープできたみたいだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：しかし、本当に上手くいくとは。いやはや、ラナはさすがだぜホント！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと、変に持ち上げないでちょうだいよ。私自身もよく分からないんだから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：でも、何で俺だと駄目なんだろうな。。。。ちょっとショックなわけだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：アデル、何か知っているか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うーん、難しいところだね～☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どう難しいんだ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：難しいっていうと誤解があるかもねー、アハハ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：何て言うのかな。うーんと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：アインにーちゃんは、とにかく対象外なの、アハハハ☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：マジか・・・その辺りはひょっとして秘密って事か？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：そーだねー。そう考えといてー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺は？俺だったらどーなんだよ！？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：うーん☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：今通ってきた鏡に手をかざしてやるぜ、オラァア！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　ビリー・ラキは鏡に向かって豪快に両手をかざした！ ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ビリー：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：何故だああぁぁぁ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、お前は戦闘に集中してくれ。頼りにしてる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おうよ。モンスターなら任せろってんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：じゃあ、ラナ。また鏡が設置されている箇所があったら、頼む。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ええ、分かったわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ引き続き探索と行こう。", ActionEvent.None);
    }
    else
    {
      Message1900021(ref m_list, ref e_list, dst_mirror);
    }
  }

  public static void Message1900021(ref List<string> m_list, ref List<ActionEvent> e_list, string dst_mirror)
  {
    Message(ref m_list, ref e_list, "（　ラナは鏡に向かって静かに手をかざした　）", ActionEvent.None);

    Message(ref m_list, ref e_list, dst_mirror, ActionEvent.JumpToLocation);

    Message(ref m_list, ref e_list, "（ッパシュ！）", ActionEvent.None);
  }

  public static void Message1900030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：この扉は固く閉ざされているな。他をあたろう。", ActionEvent.None);
  }

  public static void Message1900040(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1900040 == false)
    {
      One.TF.Event_Message1900040 = true;
      Message(ref m_list, ref e_list, "アイン：扉か・・・固く閉ざされているな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ちょっと待って。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ん？どうかしたか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：この扉。左右中央に小さな紋様があるわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：開錠のスキルを使ってみるわ。しばらく待ってて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、頼んだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：こうかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　ラナ・アミリアの両手がうっすらと薄白色に輝く　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, Fix.EDELGARZEN_1_DOOR_5_O, ActionEvent.RemoveFieldObject);

      Message(ref m_list, ref e_list, "アイン：おぉ！開いたな！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：難易度の高い施錠だったけど、成功したみたいね♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いやあ助かったぜ。開錠のスキル、俺は持ってないからな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：また扉が出てきたら私に言ってね。調べてあげるから。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);
    }
  }

  public static void Message1900050(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1900050 == false)
    {
      One.TF.Event_Message1900050 = true;
      EdelgarzenOpenDoor(ref m_list, ref e_list, Fix.EDELGARZEN_1_DOOR_6_O);
    }
  }

  public static void Message1900051(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1900051 == false)
    {
      One.TF.Event_Message1900051 = true;
      EdelgarzenOpenDoor(ref m_list, ref e_list, Fix.EDELGARZEN_2_DOOR_1_O);
    }
  }

  public static void Message1900052(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1900052 == false)
    {
      One.TF.Event_Message1900052 = true;
      EdelgarzenOpenDoor(ref m_list, ref e_list, Fix.EDELGARZEN_2_DOOR_2_O);
    }
  }

  public static void Message1900053(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1900053 == false)
    {
      One.TF.Event_Message1900053 = true;
      EdelgarzenOpenDoor(ref m_list, ref e_list, Fix.EDELGARZEN_2_DOOR_3_O);
    }
  }

  public static void Message1900054(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1900054 == false)
    {
      One.TF.Event_Message1900054 = true;
      EdelgarzenOpenDoor(ref m_list, ref e_list, Fix.EDELGARZEN_2_DOOR_4_O);
    }
  }

  public static void Message1900055(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1900055 == false)
    {
      One.TF.Event_Message1900055 = true;
      EdelgarzenOpenDoor(ref m_list, ref e_list, Fix.EDELGARZEN_2_DOOR_5_O);
    }
  }

  public static void Message1900056(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message1900056 == false)
    {
      One.TF.Event_Message1900056 = true;
      EdelgarzenOpenDoor(ref m_list, ref e_list, Fix.EDELGARZEN_2_DOOR_6_O);
    }
  }

  public static void EdelgarzenOpenDoor(ref List<string> m_list, ref List<ActionEvent> e_list, string dst_door)
  {
    Message(ref m_list, ref e_list, "アイン：扉か・・・固く閉ざされているな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：左右中央に小さな紋様があるわ。任せておいて。", ActionEvent.None);

    Message(ref m_list, ref e_list, "～　ラナ・アミリアの両手がうっすらと薄白色に輝く　～", ActionEvent.None);

    Message(ref m_list, ref e_list, "（ッゴゴゴゴ、ズズウウゥゥゥン・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, dst_door, ActionEvent.RemoveFieldObject);

    Message(ref m_list, ref e_list, "アイン：よし、サンキュー！", ActionEvent.None);
  }


  public static void Message1901000(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "アイン：！？", ActionEvent.None);

    Message(ref m_list, ref e_list, " （その刹那）", ActionEvent.None);

    Message(ref m_list, ref e_list, " （アインはヴィンスガルデ王の異変に気付いた）", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：おっしゃあ！トドメだ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ま、待て！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：っな、何でだよ！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どういう事よ、アイン？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：戦闘は・・・これで終了だ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ヴィンスガルデの王よ。応えて欲しい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あんたとエルミ国王は・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：知り合いか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そして、ObsidianStoneを俺に入手させるように命じたのは・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ヴィンスガルデ王よ。貴方なのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：仮に、そうだとして・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネを刺客という形で俺に傍らに配置したのは", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エルミ国王の独断。そこに貴方は関与していない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、そうじゃないな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：依頼もせず、関与もせず、接触も計っていない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：貴方は・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エルミ国王を信頼したんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ObsidianStoneを入手する行為は、ムーンフォーダ教団から絶対なる死の宣告のターゲットになる。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：な、何よそれ？聞いてないわよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：悪い。実はエオネが一時期パーティを去る前にアーケンダイン街で偶然聞いてしまったんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうなんだよな？エオネ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：教団は絶対です。成し遂げるまでは永遠に刺客を送り続けます。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ただし、公にはできない。そこで絶対の条件がある。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：刺客は対象１名につき、送り込むのは１人まで。そうだな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：アイン、あんたじゃあずっと命を狙われ続けて身を晒してたってわけ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：身を晒していたというのは事実だが", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺は信頼していた。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネ、あんたに人は殺せない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "  エオネはいつもの静けさを消失し、眼の奥底に深い闇が宿りはじめた　", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "エオネ：わ、私は何人もの人を殺してきたわ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：ええ！殺し続けてきたのよ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：既に殺してきているのに・・・そんな私に人を殺せないって・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：そんなの、おかしいでしょう！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いいや。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネ、君に人は殺せない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：そうじゃなくて、実際に殺し続けてるのよ私は！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：これは私の意志よ！！貴方何を言ってるのかしら！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：もういいわ。アイン・ウォーレンス！貴方を今ここで、今度こそ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ヴィンスガルデ王よ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ゆえに、彼女を再びここを帰着させた。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そういう事なんだろう？", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：今、ここで貴方を殺す！！アイン・ウォーレンス！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "　～　エオネの狂乱に満ちた眼がアイン・ウォーレンスを鋭く射抜いた　～", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：くっ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：何が「人は殺せない」よ！！　ふざけないで！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：私が・・・わ、私が・・・！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "  エオネの眼球の奥に透明な光が宿り、雫が一つ落下した　", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "リガール：待て", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：エオネ。もうよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・っ！！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：アイン・ウォーレンスよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：貴公の発する精神。しかと受け止めた。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：エオネ、貴公の負けだ。その弓を終うがよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：そ、そんな・・・リガール様、私は！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：貴公の弓、その者を射抜く事は出来ぬ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：いえ！　出来るわ！　今こそここで！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：アイン・ウォーレンスよ。貴公は戦闘中にエオネからの標的になった回数は？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：５０回は超えています。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・配慮か、それとも温情か・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：いや、言葉は要らぬな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：エオネよ。もうよいのだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：リガール様。ちょっと待ってください！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：私の気配殺しは完璧です。この者には殺気は一切出さずに狙い続けてきました。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：君が俺の命を狙い続けているのは・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：知っていた。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：ウソよ！それは絶対にないわ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：自分の命が狙われてるのを知ってたのなら、なんで仲間から外さないのよ！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：君を信頼したからさ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：信頼ですって・・・？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：フ・・・ッフフ・・・フハハハハハハハハハ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：私の弓は貴方を殺そうとしているのよ！？信頼なんて言葉は場違いも良いところだわ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：そもそも、アイン・ウォーレンス。あなたは私の素性は何も知らない。そうでしょ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、確かにな。情報や知識は一切ない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：命が狙われる理由。私がどこからの手先で、どこからの指示に従っているかも知らない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ああ、知らない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：君が何故そうしようとしているかは知らなかった。そこは本当だ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：お話にならないわ。ハッタリもそこまでよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：エオネ。止めるのだ。貴公では勝てぬ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：リガール様！これだけは言わせてください！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：私は・・・私は本気でこの者を射抜くつもりでした！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：私の必中であるプレシジョン・ストライク。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：気配を殺し、ターゲットをモンスターに設定し、完全なる誤射で当てるはずだった。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：なのに、何度やってもこの者は・・・不規則なタイミングで石に足を躓けたり、偶然体制を崩したり、ミス攻撃で空振りしたり・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：エオネよ。気付くのだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・？", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：ま、まさか！！！！！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：そうだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：ウ・・・ウソよ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：ウソよ！ウソよ！！ウソよ！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：私の判断ミスよ！！この者の回避行動ではない！！あってたまるものか！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：君の弓には迷いが生じていた。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ほんの少しのタイミングだが、射抜こうとする時", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：矢を放つまでの間", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：行動が少し遅れている。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：ば！！！バカな！！！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いつもはそうじゃなく、たまたまそうだったのかも知れない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや・・・厳密には違う。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：その瞬間、君は何かを行っている。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それはきっと・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：じ、実力が不足しているとでも言いたいわけ！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：違う。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：射抜く時、君は本来の君自身と対話しているんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：た・・・対話？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうだ。そして、その内容はきっとこうだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：【殺したくない】", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：違うか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：違ってるのなら謝る。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：許してくれ。すまなかった。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・そ　・・・っそ、そんな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "  エオネの眼球からは、しばらく絶え間なく水滴が流れ落ち続けた　", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "エオネ：ッグ・・・ウソよ・・・ウソ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：こんなのありえない・・・ウソに決まってるわ・・・ウソよ・・・ッグ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：エオネ。この者と対峙するな。もうよいのだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：な・・・なんで命を狙われた方が謝るのよ・・・おかしいわよ・・・こんなの・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：下がるがよい。エオネ・フルネア。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：ウ・・・グッ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：アイン・ウォーレンスよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：頼みが・・・ある・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：（ゴホッ・・・ゴホッ・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "  リガールは大量の吐血を床に静かに落とした　", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：何でしょうか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：エルミ・・・エルミ・ジョルジュに伝えておいてくれないか。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：ファージル国王と・・・共に過ごせた時間・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：感謝・・・している・・・と・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：分かった。伝えておく。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：そして、エオネ・フルネアだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：良き友として歩んでやってくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：分かりました。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・っ・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：頼んだぞ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "リガール：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "　【　リガール王は視線を落とす事なく、姿勢を維持し続けた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：息を引き取ったか・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：そ、そんな・・・だってまだ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：とてもじゃないが、死んでるようには見えないぜ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　座し続けたリガール王に対して、アインは眼を閉じ、王の間に静寂を与えた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：アイン、どうするの？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：行こう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：どこへ行くのよ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ファージル宮殿だ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：行ってどうすんだよ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：リガール王の意志を届ける。約束を守らないといけない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：何の約束だよ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　アイン・ウォーレンス、剣を収め、ゆっくりと踵を返し、瞳を伏せた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：国王エルミ・ジョルジュ、および王女ファラ・フローレと", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：謁見を交わす。", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.HomeTownCallSaveLoad);
  }

  public static void Message1901030(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    Message(ref m_list, ref e_list, "ラナ：バカアイン、ちょっと黙ってないで答えなさいよ！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：何がだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：あんた結構変よ？一体どうしちゃったわけ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どうもしてないぞ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：お前さ。以前よりさらに言葉がおかしくなってるぞ、分かってんのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あ、ああぁ。ああ、オーケーオーケー。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：（駄目だな、コイツ・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　その時、空気全体に不確かな旋律が流れ込んだ　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：よぉ。久しぶりだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ボ！ボケ師匠！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：貴女、貴公らが無事に生還したか。ふむ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：シニキエ・カールハンツ公爵！う、うそ！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：決意は、変わらねぇようだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：師匠、教えてくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ObsidianStoneは、何を指す？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：知らねぇな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：国王とボケ師匠は繋がりがある。知らないとは言わせない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：知らねぇな。　以上。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：むっ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　その周囲一帯へ、エオネから明確な殺気が放たれ始める　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "エオネ：リガール様へ情報を渡していたのは貴様らか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：その通りだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：おいカール。あれは情報渡しているうちには入らないだろ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：ランディよ。お前が加担したという意志は隠せぬ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：固ぇな、相変わらず。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：リガール様に何を伝えた！！？応えなさい！！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　エオネの弓に収まっている光の矢がギリギリとひしめき始める！　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "ランディス：っち・・・必中の弓か・・・厄介だな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：良いだろう。教えてやる。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：内容はこうだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：【赤の吉兆は偽り】", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：【青の予見は偽り】", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：【黒き地平線、静かに沈みゆき】", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：【白き閃光は放たれた】", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：以上だ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：私がリガール様から聞いた指令と同じ・・・ですって？", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　エオネは静かに弓を降ろした　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：師匠、という事はObsidianStoneは結局のところ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：偽りの象徴。という事か？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：人にとっては、だな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：人にとっては・・・か・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：ランディよ。もう良いだろう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：シニキエ・カールハンツ公爵よ。すみませんが、お待ちください。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：今のままだと、我々も合点が行きません。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：なにとぞお言葉を頂戴いたしたく。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：ふむ。。。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：良いのか？ランディよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：知ったこっちゃねえ。勝手にしろ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：では、心して聞くがよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：ObsidianStoneとは", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：物質として存在はしないが", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：実際に存在するものである。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：なっ・・・なんだって？？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：（っし、静かに）", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：その存在は、精神波動そのものといってよい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：その精神波動を感知出来るものは少ないが、古より接触した者は存在する。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：その体験をした者はこう表現する。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：「消失した」と", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：マ、マジか・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：アイン・ウォーレンスよ。同じ現象の様だな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あの石は確かに形として眼で見えたのは事実です。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なあ、ビリー？事実だよな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：だから、俺達には全然見えなかったって何度も言ってるだろーが。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エオネ、ラナ。本当に本当に、本当なんだな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：ええ、間違いないわよ。あんただけ明らかにおかしかったのよ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：す、すみませんが・・・ラナさんと同じ感想です。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：だろ。どうかんがえてもキチガイだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：そもそも受け入れられねぇだろ。そんな代物。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：てなわけだ、ザコアイン。ObsidianStoneの件は止めにするか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：てめぇだけがキチガイってことになるぞ、それでも良いんだな？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、俺はキチガイじゃねえ。ザコアインだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：ッカッカッカ、認めやがったかコイツ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ザコアインなりに考えたんだが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：言ってみろ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：ッフハハハハ。貴君は本当に面白い。", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：ランディよ。無用な心配だったようだな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：だろ？こいつには教えても教えなくても、効き目がねえ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：もう・・・腹括ってる感じがするな。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：おい、ザコアイン。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：何だ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：俺から一つ餞別くれてやる。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ま、まさか・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "【　オル・ランディス、シニキア・カールハンツから再び殺気が放たれた！　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：うそだろ・・・２人かよ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "シニキア：３，２・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ビリー！ラナ！エオネ！構えるんだ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "エオネ：了解よ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ラナ：分かったわ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "ビリー：っしゃあぁ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：ぃーち・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "ランディス：０！", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.NAME_OL_LANDIS_FULL, ActionEvent.HomeTownCallDuel);
  }

  #endregion

  #region "ゼールマンの里"
  public static void Message2000010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }
  #endregion

  #region "ラタの小屋"
  public static void Message2100010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }
  #endregion

  #region "パルメティシア神殿"
  public static void Message2200000(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message2200000 == false)
    {
      One.TF.Event_Message2200000 = true;

      Message(ref m_list, ref e_list, "ロウ：！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　セルモイ・ロウは突如、アインとの距離を取った　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：っな！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：勝負、これまで。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：・・・受け入れがたい・・・この私としたことが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンス、真剣な目つきの状態のまま警戒態勢を解かず ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：俺の負けだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "フードをかぶった男：そんな馬鹿な・・・まだ・・・まだ、負けてはおりませぬ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：うっっっっっっっっせええええぇぇ！！　黙ってろ！！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "フードをかぶった男：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：その警戒態勢を解くつもりはないか。なるほど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：おい、お前ら。解け。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　全員に付きたてられていたナイフが降ろされた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ロウ：邪魔をした。もう行け。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：本来の用件は・・・言わないつもりだな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：知ったことか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：待て。頼む、１件だけ教えてくれ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ObsidianStoneと赤き星は何らかの関連性があるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ロウ：知らん。勝手にしろ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　セルモイ・ロウおよびその他メンバーは同時に姿を消した ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っふう。危なかったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：皆、大丈夫だったか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：大丈夫よ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：お、おお・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：問題なかったよー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：これといって特には。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直、今回の件は俺が注意散漫だった。すまなかった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：あの動き、只者じゃない感じはしたわよ。しょうがないんじゃないかしら。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、それでも次からは本当に気を付ける。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おい、とっととパルメティシア神殿とやらに到着してしまおうぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);
    }
  }

  public static void Message2200010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message2200010 == false)
    {
      One.TF.Event_Message2200010 = true;

      Message(ref m_list, ref e_list, "アイン：よし、パルメティシア神殿に到着っと。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：何かファージルのエリアとは雰囲気が違うわね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなのか？俺には普通の場所に感じられるが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：アンタはそういう所が、鈍感すぎなのよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ま、まあそうなのかも知れないな・・・悪い悪い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：どうした？なんだか、ずいぶんと慎重じゃねえか。何か気になんのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや・・・ちょっと難しい所なんだ。例の件もあった事だしな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：それって、道中で狙われた時の事？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだ。ただ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、気のせいかな。さすがに大丈夫だとは思う。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：まあ用心に越した事はねーけどな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：さてと。ちょっと周辺を探索してから、神殿の中へ向かうとするか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～～～　しばらくして　～～～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：よし、こんなもんかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おーし、じゃあ早速神殿に向かおうぜ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：了解！", ActionEvent.None);
    }
  }

  public static void Message2200020(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.TF.Event_Message2200020 == false)
    {
      One.TF.Event_Message2200020 = true;

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ中央神殿に入るといたしますか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン達は中央神殿へと足を踏み入れた ～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：しかしやたらと広いフロアで静かな所だな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ほんと静かね・・・喋り声一つ聞こえないわ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：結構色んなところに神官達がいるけどな。マジ静か過ぎだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：必要最小限にしか喋らない。そういう独特の文化なのかもな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：向こうの方に来訪者向けのカウンターがあるわね。行ってみましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、ここだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの、すみません。ちょっとお伺いしたい事があるのですが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "神官：天に仕え、子に捧げしは、現世の理と、慈悲によるお導き", ActionEvent.None);

      Message(ref m_list, ref e_list, "神官：パルメテイシア神殿へようこそ。いかがなさいましたか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あの、何て言うのかな・・・聞きたい事があって", ActionEvent.None);

      Message(ref m_list, ref e_list, "神官：天に誓いしは、お導きに関する相談のみとなります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ・・・そうなんですか。じゃあちょっとお導き頂きたくお願い致します。", ActionEvent.None);

      Message(ref m_list, ref e_list, "神官：相談者はどなたになりますでしょうか。導きの声は一名のみとなります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そっか・・・じゃあ、俺一人って事になるのかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "神官：迷えし子よ、どうぞこちらへ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンスは神殿内の２階へと誘われた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "神官：こちらでお待ちください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、はい。どうも、ありがとうございます。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "神官：では、こちらへ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "神官：私の導きはここまでとなります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "神官：この先、法王の間に足をお運びください。", ActionEvent.None);

      Message(ref m_list, ref e_list, "神官：それでは。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　神官はその場から足音を立てる事なく、立ち去った・・・　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：おし・・・じゃあ、参るとしますか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "【ギッギッギギィィ・・・】", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：子よ。いかがなされたかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、えっと・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どこに、向かうべきでしょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ラインが見えてはいるのですが、それが選択肢とは思えないです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：選択肢を選ぶ権利と選ばない権利があるとは思いつつも", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：選ぶという枠の範囲でしか動くしか術がありません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：それが理、という事でしょうか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：さて、これは驚いたの。", ActionEvent.None);
      
      Message(ref m_list, ref e_list, "？？？：そなたのような問いかけを行った者は、過去にあまり例を見ない。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：そうじゃな。。。あれは、そうじゃ。思い出した。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：今のファージル国王、エルミ・ジョルジュと同じ類の問いかけじゃな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：っえ、エルミ国王も？", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：少々表現は異なるが、確かに。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：おお、そうじゃ。いきなりですまんかったの。気楽にせい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：我は。ツヴェルドーゼ１７世。以後、ツヴェルと呼んでもらって構わんよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ゲッ・・・法皇様相手にその様な・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：よいのだ。この方が喋りやすかろうて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：こ・・・国王エルミ様も同じような感覚で喋りますよ。まったくどこ行ってもそうなのかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：そなたが、そうさせるのであろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：して、選択肢についてだが。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：そなたは、まだ渦中の外であるようにも思える。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：だが、その導きについては、既に秤の対象。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：天秤と取るか、定めと取るか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：現時点では、其方次第であるとも言える。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほど　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうもありがとうございます。大変助かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：よいのかね？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ええ、大丈夫です。何とか行けそうです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：あ、すみませんが、もう一つだけ、お願いしても良いでしょうか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：なにかね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：なるほど、面白いやつじゃの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：そなたのメンバーの中におる、とある者について聞きたい事はあるかの？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：やはり・・・分かるんですね。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：そうであるの。それしかなかろうて。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン・ウォーレンスは視線を宙に浮かせ、笑顔を解いた　～", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ・フルネアの事についてです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：彼女について何か教えてもらう事はできるでしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ふむ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ふむ・・・ふむ、ふむ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：まず、", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：その名は、天に名にあらず。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：我々ムーンフォーダーの民は、天の民。", ActionEvent.None);
      
      Message(ref m_list, ref e_list, "ツヴェル：神より授けられし、天の名を持つ者同士でしか分かち合う事は許されておらん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：そなたはまだ天の名を持っておらぬが故、関連性については一切開示できぬ。悪く思わないでくれたまえ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いえ・・・なるほど・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：子よ。天の名を授かるべきに非ず。神の導きはこれまで。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：と言いたいところじゃが、さて。どうしたものか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ファージルの国王、エルミ・ジョルジュより遠征許可証を渡されたのじゃな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ええ、確かにここに。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：拝見させてもらっても宜しいかな？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：どれ・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ふむ・・・ほう・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：・・・　・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：驚いたのう。まさかここまでとは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：単なる許可証ではないんですか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：これは神殿の決まり事でな。許可証の淵に細かな線で紋様を刻み込んであるんじゃよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：天の民は、その紋様で意図が分かるようになっておるのだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そうなんだ・・・何か書いてあるなとは思っていたんですが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ほう、そなた、本当に不思議なやつよの。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：まさかとは思うがこの紋様が示す意図に気付いておるのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや、正直な所、解読はできません。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ、何らかの選択を迫る内容が書かれているのではないかと思いました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そして、それはおそらくファージル領土とヴィンスガルデ領土において", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：何かが起こり得る予兆", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：予兆そのものは分かりませんが", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：これまで経てきた事柄と関連性が全く無いとは考えにくい", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ひょっとしてだが、エルミ国王の狙いは", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：その起こり得る事象に関して俺自身に何らかを見せようとしているのではないか", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そう思えてならないんです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ふむ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：いや、なかなかどうして。筋が良いの。ッホッホッホ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：エルミよ、そうか。。。そうであるか。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　法王ツヴェルドーゼは心なしか、表情が少し和らいだ様に見えた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ツヴェル：ふむ。決めたぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：そなたなら、きっと道を見つけられるであろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：そなたは、ヴェルガスの海底神殿へ赴くと良いだろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：海底・・・神殿？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：オーランの塔から視察したのではなかったか？そこから見えたはずであろう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：そういえば、確かにありました。水面下に何か建物らしきものが。遠すぎて良く見えませんでしたが・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：あの湖には遥か太古より存在する神殿がある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：我々ムーンフォーダーの民は、成人した後に、そこで天の名を授かる。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ただし、行けば必ず授かるというものではない。神殿きっての精鋭騎士ですら授かるのは稀。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ただ、そなたの可能性にかけてみたい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：いかがか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：はい。行ってみたいと思います。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ヴェルガスの海底神殿はここに来るまでの間に通った湖のはずれに入口がある。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：普段はそのゲートは封鎖しておるのじゃが、", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：そなたが来た時は、特別にそのゲートを開放するように取り計らっておこう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：色々とすみません、助かります。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：海底神殿にはいまだにモンスターが蔓延っておる。気を抜くでないぞ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：分かりました。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：ふむ。では導きはここまで。行くが良い。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ツヴェル：子に慈悲と加護と導きがあらん事を。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：どうもありがとうございました。失礼いたします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アインは１階フロアへと戻ってきた　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "ラナ：あっ、戻ってきたわね。どうだった？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、何かを話すにしても、まず条件があるみたいなんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：条件？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：「天の名」を受けし者でないとコンタクトを取ったらダメらしい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・っ！・・・　・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：で、「天の名」はヴェルガスの海底神殿という所で入手できるみたいなんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ま、待っ！", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：え？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：い、いえ。何でもないです。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：おいアイン。てめーの話が飛びすぎなんだっつーの。もう少しだな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：い、いえ、大丈夫です。ビリーさん。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：そうか？まあ、別に良いんならしゃーねえけど。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：じゃあ、そもそも長く待たせた割りに、結局は全然話せてねーって事かよ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：まあ、そういう事になるな。ハハハ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：ったく・・・とんだ待ちぼうけだったな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：で、その”天の名”とやらが無い限り、ここに居ても埒があかねーんだろ？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ。そうだな。ヴェルガスの海底神殿に行ってみるしかない。皆良いか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：私は良いけど。でも、ヴェルガスの海底神殿といえば神聖な場所としてゲートは常に封鎖されているはずよ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：大丈夫だ。その辺りは、法王様が取り計らってくれると言ってた。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：・・・　・・・っ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：エオネー。何か言いたそー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あの・・・その・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：法皇様が・・・取り計らってくれたというのは・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：法皇様が自らその様な導きの言葉を発して下さったという事でしょうか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：いや・・・どうだろうな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：国王エルミ様が法皇様に手配した、という感じだった。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：正直な所、俺からはどういう内容なのかは分からない事だらけなんだ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：そ・・・そ、そうですか・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：エオネ、ヴェルガスの海底神殿へ一緒に来てくれるか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：あ、あの・・・は・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ準備が出来たらヴェルガスの海底神殿へ行こう！", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：ねえ、いきなり出発せず、神殿で一回休息してからにしましょ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ああ、そうだな。じゃあ、出発は明日にしよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：ただ・・神殿って休めるところがあるのかな・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：神殿内には就寝室があります。法皇様の慈悲により、一般に訪れた迷いし子はその就寝室を使う事が許されています。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：なるほど。助かるぜ。じゃあ今日はこの神殿で休息しよう。", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：エオネ、空き部屋っぽいとこならどこでも良いのか？", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アデル：あー、この部屋が良いなー。私ココー☆", ActionEvent.None);

      Message(ref m_list, ref e_list, "ラナ：じゃあ、私はアデルの隣にしようかしら♪", ActionEvent.None);

      Message(ref m_list, ref e_list, "ビリー：俺はあの武具が並んでる近くにある空き部屋にすっかな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：よし、じゃあ一旦解散で。皆また明日な。", ActionEvent.None);

      Message(ref m_list, ref e_list, "～　アイン、ラナ、エオネ、ビリー、アデルは解散し、各部屋に入って行った　～", ActionEvent.MessageDisplay);

      //Message(ref m_list, ref e_list, "クエスト【 " + Fix.QUEST_TITLE_24 + " 】が更新されました！", ActionEvent.QuestUpdate);

      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownNight);

      Message(ref m_list, ref e_list, "～　・・・その夜・・・　～", ActionEvent.MessageDisplay);

      Message(ref m_list, ref e_list, "アイン：（・・・よし、準備完了っと・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（この就寝室・・・不思議と懐かしい感じがする・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（何でだろうな・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ん？何か物音がする・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：今、手筈通りと申したな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：す！すみません！法皇様！！", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：期待値通りの結果を保持し、それを報告するのは誤りではない。むしろ正しい行いと言える。", ActionEvent.None);

      Message(ref m_list, ref e_list, "？？？：ッハ・・・ハイ・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ま、まさかこの声・・・エオネと法皇様か？）", ActionEvent.None);

      Message(ref m_list, ref e_list, "法皇：分かっておるな。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：ハイ。当初の目的である・・・", ActionEvent.None);

      Message(ref m_list, ref e_list, "法皇：待て。もう少しこちらへ。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：はい。", ActionEvent.None);

      // Message(ref m_list, ref e_list, "エオネ：では、今更アイン・ウォーレンスの暗殺を中止しろと仰せられるのですか？", ActionEvent.None);
      Message(ref m_list, ref e_list, "エオネ：（・・・・では、・・・今更・・・中止しろと・・・？）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "法皇：そなたには本当に申し訳ないと思っておる。", ActionEvent.None);
      Message(ref m_list, ref e_list, "法皇：（そなた・・・申し訳・・・思っておる。）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（駄目だ・・・うまく聞き取れなくなってきた・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "エオネ：どうしてですか？私の不徳が根本的要因とあらば、今一度、お導きをいただけないでしょうか。", ActionEvent.None);
      Message(ref m_list, ref e_list, "エオネ：（・・・ですか？・・・根本的要因・・・　・・・　お導きを・・・　・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "法皇：そうではない。これは思慮を重ねた結果である。", ActionEvent.None);
      Message(ref m_list, ref e_list, "法皇：（・・・ではない。・・・　・・・　結果である）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "法皇：そなたには一切の不徳はないのだ。安心せよ。", ActionEvent.None);
      Message(ref m_list, ref e_list, "法皇：（・・・　・・・　一切の・・・　・・・　安心せよ。）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "エオネ：で、ですが法皇様・・・", ActionEvent.None);
      Message(ref m_list, ref e_list, "エオネ：（・・・　法皇様・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "法皇：もうよいのだ。これは既に決められた事象である。", ActionEvent.None);
      Message(ref m_list, ref e_list, "法皇：（・・・のだ。・・・　・・・　事象・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "エオネ：・・・　おっ・・・お待ちください！", ActionEvent.None);
      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　お待ちください！）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・！？）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "エオネ：どうか・・・どうかお導きを・・・法皇様・・・", ActionEvent.None);
      Message(ref m_list, ref e_list, "エオネ：（・・・か　・・・　を・・・　様・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "法皇：・・・　・・・　・・・", ActionEvent.None);
      Message(ref m_list, ref e_list, "法皇：（・・・　・・・　・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "法皇：導きは既に天へと放たれた。", ActionEvent.None);
      Message(ref m_list, ref e_list, "法皇：（導き・・・　・・・　放たれ・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "法皇：そなたは、ようやく解放されたのだ。", ActionEvent.None);
      Message(ref m_list, ref e_list, "法皇：（・・・　ようやく解放され　・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "法皇：導きに縛られる事なく生きよ。", ActionEvent.None);
      Message(ref m_list, ref e_list, "法皇：（・・・　縛られ　・・・　生きよ）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "エオネ：っそ・・・そんな・・・法皇様・・・", ActionEvent.None);
      Message(ref m_list, ref e_list, "エオネ：（・・・　・・な　・・・　様・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "エオネ：・・・　・・・　・・・", ActionEvent.None);
      Message(ref m_list, ref e_list, "エオネ：（・・・　・・・　・・・）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "エオネ：分かりました。", ActionEvent.None);
      Message(ref m_list, ref e_list, "エオネ：分かりました。", ActionEvent.None);

      // Message(ref m_list, ref e_list, "エオネ：私の・・・思う様に・・・行動します。", ActionEvent.None);
      Message(ref m_list, ref e_list, "エオネ：（・・・　様に　・・・　行動します。）", ActionEvent.None);

      // Message(ref m_list, ref e_list, "法皇：子に慈悲と加護と導きがあらん事を。", ActionEvent.None);
      Message(ref m_list, ref e_list, "法皇：子に慈悲と加護と導きがあらん事を。", ActionEvent.None);

      Message(ref m_list, ref e_list, "エオネ：失礼・・・いたします。", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（どうやら会話は終わったようだな）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（ほとんど小さくて聞き取れなかったが・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（いや、聞こえなくて良かったのかも知れない）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（そもそも、この夜中に2人で秘密裏に話しているんだ。それを俺が聞くのは失礼だ。）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（この件は聞かなかった事にしよう。それで良いはずだ。）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（寝よう）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・　・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

      Message(ref m_list, ref e_list, "", ActionEvent.HomeTownExecRestInn);

      Message(ref m_list, ref e_list, "【 パーティは休息を取りました】", ActionEvent.MessageDisplay);
    }
  }

  public static void Message2299999(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.AR.GiftParmetysiaWord = true;
    One.UpdateAkashicRecord();

    // todo
  }
  #endregion

  #region "雪原の大樹ラタ"
  public static void Message2300010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }
  #endregion

  #region "シスの墓石"
  public static void Message2400010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    // 満たされるは精神と英知。語り継ぎし者よ、安らぎと平穏を。
    // うつろいを重ね、遠くを廻りて、祈願を果たす // todo
  }
  #endregion

  #region "キルクード山岳地帯"
  public static void Message2500010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }
  #endregion

  #region "天上界ジェネシスゲート"
  public static void Message2600010(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
  }
  #endregion

  #region "支配竜との対話"
  public static void Inscribe_MatrixDragon_X(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    if (One.AR.InscribeObsidianStone_1 == false)
    {
      InscribeMatrixDragon_1(ref m_list, ref e_list);
    }
    else if (One.AR.InscribeObsidianStone_2 == false)
    {
      InscribeMatrixDragon_2(ref m_list, ref e_list);
    }
    else if (One.AR.InscribeObsidianStone_3 == false)
    {
      InscribeMatrixDragon_3(ref m_list, ref e_list);
    }
    else if (One.AR.InscribeObsidianStone_4 == false)
    {
      InscribeMatrixDragon_4(ref m_list, ref e_list);
    }
    else if (One.AR.InscribeObsidianStone_5 == false)
    {
      InscribeMatrixDragon_5(ref m_list, ref e_list);
    }
    else if (One.AR.InscribeObsidianStone_6 == false)
    {
      InscribeMatrixDragon_6(ref m_list, ref e_list);
    }
    else
    {
      // elseは何もない
    }
  }

  public static void InscribeMatrixDragon_1(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.AR.InscribeObsidianStone_1 = true;
    One.UpdateAkashicRecord();

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンスはその場で静止し、石へ手をかざし始めた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：ッグ・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.TurnToBlack);

    Message(ref m_list, ref e_list, "　　（　俺はこの時どう考えていただろうか　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　意味、意志、論理の追跡はここまで　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　おそらくそこで考えていた事が重要なのではなく　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　無限に連なる空間があった事が何より重要だったと今では思える　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　認識に至らなかったというよりも　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　概念の外側　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　あたかも始めから決められていたかのように　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　その石に触れた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：石に触れし者よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：繰り返すは無間なる永劫の記憶", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：誰だ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：我は存在の定義から外れし者", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：ヒトの子よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：支配竜と呼ぶがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：支配竜・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年がこの石を選択する事に在らず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：石が少年を選択する事に在らず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：手にせしその石は少年が遥か過去／未来から入手しているものである", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：こ、これが・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：石との接触は", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：一つの終わりを意味する", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：でも、どうしてなんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どうして終わりに向かって進まなくちゃいけないんだよ！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そんなのは、俺は認めない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：絶対に道筋が在るはずなんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：支配竜が指す終わりとは何だ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が今イメージしているそのものである", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：な・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：全ての事象は同一の空間と時間律において連続的であり", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：絶える事なく繋がりなく停滞なく進行なく", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年がイメージした事は事象の一つとして常に刻まれる", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：あらゆる事象について感知／受諾せよ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：事象の感知と・・・受諾・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なるほど・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺にこれから起こりうる事象は", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：避けられない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：何故なら、俺自身がもう決めているからだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：これで良い。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それ以外に選択肢はないんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年の精神波動を検知", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が進むは過去への循環", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が振り返しは未来への記録", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：行くがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンス　ObsidianStoneを取得 】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンス　元核【集中と断絶】を習得 】", ActionEvent.MessageDisplay);
  }

  public static void InscribeMatrixDragon_2(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.AR.InscribeObsidianStone_2 = true;
    One.UpdateAkashicRecord();


    Message(ref m_list, ref e_list, "【 アイン・ウォーレンスはその場で静止し、石へ手をかざし始めた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：ッグ・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.TurnToBlack);

    Message(ref m_list, ref e_list, "　　（　確かに、許容される事象の境界というのは概念で形成化できるものでは無い。　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　その考え方自体を問われていた。　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　誰からでもなく、自分自身の意志としてでもなく、どこからともなく　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　何かの存在に頼ろうとした訳じゃない　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　ただただ、認識に対する根源的な何かを追及したい気持ちが強かったんだと思う　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　その時、無限に連なっている時間がどこからともなく流れてきて　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　その石に、再び、触れた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：石に触れし者よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：繰り返すは永遠に続く未来への記憶", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：未来への・・・記憶・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：我は概念の領域に属さぬ者", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：ヒトの子よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "？？？：支配竜と呼ぶがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：支配竜よ。教えてくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：彼と彼女はどうなったんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：事象が示すは少年がイメージした通りである", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：という事は・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：な・・・何でなんだよ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：何故なんだ？何故そうする必要があったっていうんだよ！？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：意味をなす理にあらず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：理由を求めるは人の子が故の事象", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：認識に至らず到達せず還ること叶わず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が欲する概念に対し我が発するは事象の在り方のみ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：その連鎖は少年が記憶する過去現在未来に依存せず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：在るがままである", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そんな・・・じゃあどうする事もできないのか・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：頼む。もう１つだけ教えてくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺は国王はどういう存在なんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年と国王は遥か未来にて既に接触が刻まれている", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：接触は一つの連鎖と成す", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が戻りしは未来への回帰", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：未来への・・・回帰・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：理とは刻まれし未来を紡ぐ事象そのものを指し示す", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年達が住まう世界は既に終わった世界であり", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：今もなお在り続ける世界である", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どこかに境界や綻びがあったりするとでも言うのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：それらの定義に頼るは人の心", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：人の心を持つものよ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：人の心を捨てよ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：心と呼ぶ定義を全て捨てた果てに", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：今この刻む時間律に全てが在ると知るがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が刻むは限りなき無である", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：限りなき無・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　無であると言われ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　こんなにも酷い状況であるにも関わらず　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　起こってしまった事象に対する虚無感や絶望の感情はなくなり　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　不思議な感覚に包まれた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　・・・今なら・・・　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　イメージできるかもしれないと　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　そう思えた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　この時、思わず　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "（　ふと声に出ていた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：その事象について", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺である自分自身はそれ自体を認識できず、記憶する事もできないが、", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それでも必ず、その終わりの事象へと至ってみせる。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そして", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：必ずその先へ辿り着いてみせる。", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年の精神波動を検知", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が選択せしは生命に対する回帰そのものである", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：超越する事なく対峙する事なく否定することなく", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年はその頂の果てを見るだろう", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：行くがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.MYSTICFOREST_ObsidianPortal_1_O, ActionEvent.RemoveFieldObject);

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンス　ObsidianStoneを取得 】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "【 パーティ全員　エッセンス・ツリー＜第二属性＞を習得 】", ActionEvent.MessageDisplay);
  }

  public static void InscribeMatrixDragon_3(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.AR.InscribeObsidianStone_3 = true;
    One.UpdateAkashicRecord();

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンスはその場で静止し、石へ手をかざし始めた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "", ActionEvent.TurnToBlack);

    Message(ref m_list, ref e_list, "　　（　自分の感覚としては今、形容する事の出来ない空間と時間の狭間にいる　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　空間・・・？　時間・・・？　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　それすらも適用する事自体が誤っていると感じられた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　石との接触は俺にとって　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　在るべくして在り続ける存在　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　いつの間にかそこに　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　存在が容として形成していた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：石に触れし者よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：発するがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：赤い星を見たことは些細なきっかけでしかない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それよりもっと以前からこの奇妙な感覚はあったんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：この連鎖は一体どこから来ているんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が生まれてくる刻よりも遥か以前からであり", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が死する刻よりも遥か未来からである", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：その無間循環は人の子が捉える事はなく", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：流転の時を経て獲得する事叶わず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：悠久を示す時間律が示す理と知るが良い", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：時間の流れを覆す事はできない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ただ、時間の流れを創り出す事はできる。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それを創り出せるのは・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：理を認識し始めてから幾度となく繰り返す事を弛まぬ少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が何を願うかは未だ理に内在される領域", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：一切を捨てて願うがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺は・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：あの時、心に決めていた事があるんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それを今度こそ実行する。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：必ずだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年の精神波動を検知", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が選択せしは死を司る元始そのものである", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：行くがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.OHRANTOWER_ObsidianStone_2_O, ActionEvent.RemoveFieldObject);

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンス　ObsidianStoneを取得 】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "【 パーティ全員　エッセンス・ツリー＜潜在能力＞を習得 】", ActionEvent.MessageDisplay);
  }

  public static void InscribeMatrixDragon_4(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.AR.InscribeObsidianStone_4 = true;
    One.UpdateAkashicRecord();

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンスはその場で静止し、石へ手をかざし始めた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "", ActionEvent.TurnToBlack);

    Message(ref m_list, ref e_list, "　　（　信念、想い、祈り　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　事象そのものが対象というのは適切ではなく　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　非常に大きく、捉え所がない　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　大きい渦の様にも思えるし、奇麗な一本として感じられる気もする　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　この世界に存在しえない世界　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　そのイメージを保持しながら　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　俺は石に触れた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：石に触れし者よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：発するがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エルミ国王とは何者なんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：その調べについては少年は既に認識をしている", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：既に認識している・・・？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：あるべき事象は既に発生しており回避と受諾は同一とせよ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：じゃあ・・・エルミ国王は・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ま、まさか・・・！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：あらゆる波動からの意志により選定された事象", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：悠久の時を超える事は叶わず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：連鎖の始まりは既に未来へと託された世界である", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：だって、そんなバカな・・・！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エルミ国王と俺はその時接触はしていないのは明らかだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：受諾するがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、待ってくれ！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ファラ王妃についてはどうなんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：波動の連鎖は無間連鎖であり潰える事叶わず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：回避の意志を保持しているのはその事象に対する認識と同一", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：認識の原点とは可視よりも前から発生する", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：原点には受諾の根源存在があり", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：根源存在は個が有するものではない", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そんな・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ど、どうにかする事はできないのかよ！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：答えてくれ・・・！頼む！！", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：違うか・・・頼んだ所で何も起きはしない。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：支配竜よ、宝剣とはどういう存在なんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：その剣は神剣フェルトゥーシュである", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：神剣フェルトゥーシュとは摂理", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：存在そのものに意味を問う事に本質を伴わず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：神剣フェルトゥーシュが指し示すは記録された未来そのものである", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：記録された・・・未来・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：剣が意志を持ちて保持者を選定する", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：選定されし者は剣の意志と調和し", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：記録された未来へ向け行動し", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：剣をダンジョンへと返還する", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：神剣は国王エルミが保持していたはずだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それがラナに手渡されたという事は、ラナが剣の保持者になるのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：人の子が定義する保持と理が示す摂理とは異なるもの", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：剣による意志は全の意志そのものであり", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：個が認識する意志にあらず", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：国王エルミからラナへ渡ったかと思っていたが", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そういう類のものじゃないって事か・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：という事は俺達が認識する保持者っていう概念も適用外だとすれば", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：神剣フェルトゥーシュが返還される場所も", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：既に、決まっている。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：支配竜よ、教えてくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：人の子が定義する【離島ウォズム】という地にて", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：我は神剣フェルトゥーシュの返還を再認識する", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：離島・・・ウォズム・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：支配竜よ、俺は選択する。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エルミ国王・・・ファラ王妃・・・いや", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺自身が俺自身として、全て起こり得る未来を受諾する", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年の精神波動を検知", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が選択せしは理が示す永循環そのものである", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：絶え間ない循環を経て少年は神剣フェルトゥーシュの意志を刮目するだろう", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：行くがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, Fix.OHRANTOWER_ObsidianStone_2_O, ActionEvent.RemoveFieldObject);

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンス　ObsidianStoneを取得 】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "【 パーティ全員　エッセンス・ツリー＜第三属性＞を習得 】", ActionEvent.MessageDisplay);
  }


  public static void InscribeMatrixDragon_5(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.AR.InscribeObsidianStone_5 = true;
    One.UpdateAkashicRecord();

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンスはその場で静止し、石へ手をかざし始めた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "アイン：（ッグ・・・　・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "", ActionEvent.TurnToBlack);

    Message(ref m_list, ref e_list, "　　（　触れた瞬間、石はそこに存在していないとも言える。　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　適切な表現、正確な表現、正しい把握というものは存在しない。　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　俺達人々がそれを定義する事は不可能だが　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　在り続ける存在だ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　俺はその何らかの存在を今回はかなり能動的に意識して　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　石に、再び、触れた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：石に触れし者よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：繰り返すは連鎖を連ねる記憶", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：我は因果律の領域に属さぬ者", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：ヒトの子よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：発するがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ラナと国王エルミは関係なかったはずだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なのにどうして国王はラナに神剣フェルトゥーシュを託したんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：全ての事象は因果律によってもたらされるもの", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：神剣フェルトゥーシュが定めた時間律に即した結果である", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：神剣がラナに手渡す様に意志を持っていたという事か？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：神剣は人が定義する始まりへの行く末を司る存在", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：神剣は人の子が定義する意志にあらず", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：始まりとは人が定義するは終焉と謡うものである", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：終焉とは無そのものであり", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：神剣フェルトゥーシュは終焉であり始まりを示す存在である", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：無は有をすべて包含し", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：ありとあらゆる有は全てが無へと還る", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　おそらく、俺達が理解できる様な次元ではないんだろう　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　理解不能というよりも　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　その流れがあまりにも奇麗過ぎるという印象　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　俺達がいう明確な解というのはそもそも無いのかもしれない　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　ただただ、支配竜は呼応してくれる　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　俺も、それに、応えようと思う　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：支配竜よ、もう一つだけ教えてくれ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：国王エルミはどこから来た存在なんだ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：かの者エルミ・ジョルジュは現世の理を司るオラクルと接触を行った人物の関連者である", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：オラクルの声は理の創生を根源から生み出す事象として定義されている", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：根源から生み出されしは現世そのものである", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：じゃあ国王が自ら神剣フェルトゥーシュを最初に手にしたという事なのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：最初というものは存在しない", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：在り続ける現世の中で人が定義する世界を映し出すはオラクルの声", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：手にせし者は幾度となく現れる", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：それはその存在の意志ではなく", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：オラクルに記録された者のみが選定者となる", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：かの者エルミ・ジョルジュはその記録に無い存在である", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：国王エルミも・・・選定された者ではないだというのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：じゃあ誰なんだ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：王妃ファラが？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：まさか、ボケ師匠のオル・ランディスが？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それともFiveSeekerメンバーであるシニキア・カールハンツ？　ヴェルゼ・アーティ？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：オラクルが選定せし記録に刻まれるは", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：ヴェルス・エクストゥーゼ・アーティス", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：なっ・・・それって・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年達が知る者の真実の名である", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうなのか・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　何となく分かった気がする　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　俺の意識や経験の範疇ではそもそもこの件は追跡不可能なんだ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　・・・記録・・・時間律・・・　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　・・・オラクル・・・選定者・・・　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　・・・支配竜が呼ぶ現世、俺達が呼ぶ世界・・・　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　何もかもが理解を超えている　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　繋がりが膨大すぎて追跡できないんだ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　俺は・・・　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　応え続ける事でしか掴めないんだ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　何度でも、何度でも呼びかけよう　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：連鎖には終わりや始まりがないとしても", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺は今の国王エルミ・ジョルジュ、王妃ファラ・フローレと共に同じ時間を歩みたいと思ったんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ラナ・アミリアとも、しっかりと向き合って歩みたいと思っている。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：もちろんこれまで出会った人達ともだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：無限ではないのは分かっている。ただ、", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：もう少しだけ共に生きる時間が欲しいんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：それは可能なのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：時間律および因果律が覆える事はない", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が願う世界が何であるかにより", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が視るべき未来が何であるかにより", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年の意志は神剣フェルトゥーシュの意志と呼応する容で目覚めるであろう", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：・・・　幼き「子／人」よ　｜　何を「願う／求む」　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：・・・　感知せよ／発せよ　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：すべてには終焉／始まりがある", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：望む姿と願う意志により世界は刹那／永劫の時を刻む", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：人が定義する過去とは無限に繰り返されし無である", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：人が定義する未来とは既に起こりえた事象の記憶である", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：その無限なる連鎖こそがオラクルが示す因果律と知るが良い", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：永遠に見定める事を連ねよう", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そのために俺は", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：何度でもその無限の連鎖と向き合おう", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年の精神波動を検知", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年が選択せしは果て無き永劫そのものである", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年はオラクルが発した約束の刻へと到達するだろう", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：行くがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンス　ObsidianStoneを取得 】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "【 パーティ全員　エッセンス・ツリー＜潜在意志＞を習得 】", ActionEvent.MessageDisplay);
  }

  public static void InscribeMatrixDragon_6(ref List<string> m_list, ref List<ActionEvent> e_list)
  {
    One.AR.InscribeObsidianStone_6 = true;
    One.UpdateAkashicRecord();

    Message(ref m_list, ref e_list, "【 アイン・ウォーレンスはその場で静止し、石へ手をかざし始めた　】", ActionEvent.MessageDisplay);

    Message(ref m_list, ref e_list, "", ActionEvent.TurnToBlack);

    Message(ref m_list, ref e_list, "　　（　ココに訪れたのは何時だったか　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　思い出せないでいたが、今ようやく　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　把握した　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　俺はこの場所で　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　彼に既に出会っているんだ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　触れた対象というのは石ではなく　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　一つの剣だった　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　それを手にした刻を境にして　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　（　俺は時間も空間も無くなっていたんだ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：（・・・　・・・　・・・）", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：発するがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：国王エルミと王妃ファラが収めてくれたこの世界に感謝する。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ヴィンスガルデ領国の王リガール・オルフシュタイン", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ムーンフォーダーの教皇ツヴェルドーゼ、および、エオネ・フルネア", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ツァルマンの名を受け継ぐ神秘の森の長老、および、アデル・ブリガンディ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いつも励ましてくれたビリー・ラキ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そして何より、ラナ・アミリアが居てくれた世界。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：全てに対して感謝の気持ちを捧げたい。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：いや、感謝じゃないんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どうしても、この世界に居て欲しかっただけなんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：彼ら彼女らが居なくなったこの世界で", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺は諦めたくないだけだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：きっとそれは摂理なんだろう。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：覆らないし、変わる事は無い。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：永遠に求めても、永遠に漂うだけなのも分かっている。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：そうだったとしても", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：因果律と時間律によって", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：無間の永劫を追い求めるんだ。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：支配竜よ、俺は選択する。", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年の精神波動を検知", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：幼き少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：永遠にも等しき流れの中より", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：事象を定めるがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：果ての世界へと俺は向かおうと思う。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：オラクルと呼ばれる存在が", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：神剣フェルトゥーシュおよびこの世界を創生し続けているのなら", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺はその存在に接触して", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：この世界の在り方を語りかけてみたい", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：永久なる現世のオラクルは", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：エレミティア・リーマ・セフェラーデ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：エレミティア・リーマ・セフェラーデ・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：真実の・・・名か・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　聞いた事のない名だったが　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　本能的な認識があった　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　どこかで会ったとか、そういう訳じゃない　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　そもそも、この剣との接触がある度に　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　どこからともなく声が聞こえていた気はする　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　言葉一つ一つを紡ぐように　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　語りかける様でいて　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　突き放す様な旋律に近い　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　耳元ではなく頭の中でもなく心の中でもなく　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　俺の存在の外側にある波長　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　それが無限の空間に拡がり響く様な感じだ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：その存在には会いに行く事はできるのか？", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：オラクルの声は少年の生命の状態に関連する事なく既に無数に行き届いている", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年は未だ否定と回避を繰り返すのみ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：永劫の刻は近い", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：更なる精神波動を伴うがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年の潜在意志は今解き放たれたばかりである", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：壱なる想いは全てを超えるだろう", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：願い続けるがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：応え続けるがよい", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：オラクルはやがて少年の傍に", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：一時の形容として現れるであろう", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：ここで", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：俺は", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：しばらくの間、問いかけを続けようと思う。", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：支配竜よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：どうか・・・共に居て欲しい", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：幼き人の子よ", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：我が存在は常に少年と共にある", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：少年がそう願うのであれば", ActionEvent.None);

    Message(ref m_list, ref e_list, "支配竜：何時いかなる時間律においても我は呼びかけに応じるだろう", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・　・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "アイン：・・・", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　ここから先の事は　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　事象の連鎖の繰り返しが続いた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　果てしない永劫の果てに　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　しばらくの間　俺は支配竜が謡い続ける理というもの追い求める事にした　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　この永遠とも思える果てにたどり着いたに関わらず　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　支配竜はこう呼んでいた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　少年の潜在意志は今解き放たれたばかりである、と　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　どれだけの時間が経過したのかはもう分からない　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　千年・・・万年・・・そのさらに先へ　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　万回・・・億回・・・幾多の繰り返し　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　世界と自分との関連性を干渉する認識もなくなり　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　やがて・・・という表現は不釣り合いではあるが　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　オラクルの存在は　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　今、ようやく現れ始めた　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　形容はできないが　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　陳腐ではあるが、女神、という表現になるだろう　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　どことなくラナに雰囲気が似ているのは　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　俺の中に僅かに残っていた遥か遠い刻の記憶がそうさせたんだと思う　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　人かどうかも分からないし、性別というのも意味はないだろう　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　俺では、その存在を定義する事はできないため　）", ActionEvent.None);

    Message(ref m_list, ref e_list, "　　　（　支配竜が綴った言霊である「オラクル」と呼ぶことにした　）", ActionEvent.None);

    // todo この後、作者はどうするつもりなのか。ゲームエンドなのか何か続投なのかを決めてから書く事。
  }


  #endregion

  public static void Message(ref List<string> m_list, ref List<ActionEvent> e_list, string message, ActionEvent eventData)
  {
    m_list.Add(message);
    e_list.Add(eventData);
  }
}